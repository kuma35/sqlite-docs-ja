# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2023-03-16 19:17+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. type: Content of: <html><body><div><div><div>
#: sedout/whyc.html:6 sedout/whyc.html:121
msgid "Why Is SQLite Coded In C"
msgstr ""

#. type: Content of: <html><body><div><a>
#: sedout/whyc.html:11
msgid "<a href=\"index.html\">"
msgstr ""

#. type: Attribute 'alt' of: <html><body><div><a><img>
#: sedout/whyc.html:12
msgid "SQLite"
msgstr ""

#. type: Content of: <html><body><div><div>
#: sedout/whyc.html:16
msgid "Small. Fast. Reliable."
msgstr ""

#. type: Content of: <html><body><div><div><br>
#: sedout/whyc.html:16
msgid "Choose any three."
msgstr ""

#. type: Content of: <html><body><div><div><ul><li>
#: sedout/whyc.html:20
msgid "<a href=\"index.html\">Home</a>"
msgstr ""

#. type: Content of: <html><body><div><div><ul><li><li>
#: sedout/whyc.html:21
msgid "<a href=\"javascript:void(0)\" onclick='toggle_div(\"submenu\")'>Menu</a>"
msgstr ""

#. type: Content of: <html><body><div><div><ul><li>
#: sedout/whyc.html:22 sedout/whyc.html:34
msgid "<a href='about.html'>About</a>"
msgstr ""

#. type: Content of: <html><body><div><div><ul><li><li><li><li>
#: sedout/whyc.html:23
msgid "<a href=\"docs.html\">Documentation</a>"
msgstr ""

#. type: Content of: <html><body><div><div><ul><li><li><li><li><li>
#: sedout/whyc.html:24
msgid "<a href=\"download.html\">Download</a>"
msgstr ""

#. type: Content of: <html><body><div><div><ul><li><li><li><li><li><li>
#: sedout/whyc.html:25
msgid "<a href='copyright.html'>License</a>"
msgstr ""

#. type: Content of: <html><body><div><div><ul><li><li><li><li><li><li><li>
#: sedout/whyc.html:26
msgid "<a href=\"support.html\">Support</a>"
msgstr ""

#. type: Content of: <html><body><div><div><ul><li><li><li><li><li><li><li><li>
#: sedout/whyc.html:27
msgid "<a href=\"prosupport.html\">Purchase</a>"
msgstr ""

#. type: Content of: <html><body><div><div><ul><li><li><li><li><li><li><li><li><li>
#: sedout/whyc.html:29
msgid "<a href=\"javascript:void(0)\" onclick='toggle_search()'>Search</a>"
msgstr ""

#. type: Content of: <html><body><div><div><ul><li><li>
#: sedout/whyc.html:35
msgid "<a href='docs.html'>Documentation</a>"
msgstr ""

#. type: Content of: <html><body><div><div><ul><li><li><li>
#: sedout/whyc.html:36
msgid "<a href='download.html'>Download</a>"
msgstr ""

#. type: Content of: <html><body><div><div><ul><li><li><li><li>
#: sedout/whyc.html:37
msgid "<a href='support.html'>Support</a>"
msgstr ""

#. type: Content of: <html><body><div><div><ul><li><li><li><li><li>
#: sedout/whyc.html:38
msgid "<a href='prosupport.html'>Purchase</a>"
msgstr ""

#. type: Content of: <html><body><div><div><form><select>
#: sedout/whyc.html:43
msgid "<select name=\"s\" id=\"searchtype\">"
msgstr ""

#. type: Content of: <html><body><div><div><form><select><option>
#: sedout/whyc.html:44
msgid "Search Documentation"
msgstr ""

#. type: Content of: <html><body><div><div><form><select><option>
#: sedout/whyc.html:45
msgid "Search Changelog"
msgstr ""

#. type: Content of: <html><body><div><div><form>
#: sedout/whyc.html:46
msgid ""
"</select> <input type=\"text\" name=\"q\" id=\"searchbox\" value=\"\"/> "
"<input type=\"submit\" value=\"Go\"/>"
msgstr ""

#. type: Content of: <html><body><script>
#: sedout/whyc.html:53
msgid ""
"function toggle_div(nm) { var w = document.getElementById(nm); if( "
"w.style.display==\"block\" ){ w.style.display = \"none\"; }else{ "
"w.style.display = \"block\"; } } function toggle_search() { var w = "
"document.getElementById(\"searchmenu\"); if( w.style.display==\"block\" ){ "
"w.style.display = \"none\"; } else { w.style.display = \"block\"; "
"setTimeout(function(){ document.getElementById(\"searchbox\").focus()  }, "
"30); } } function "
"div_off(nm){document.getElementById(nm).style.display=\"none\";} "
"window.onbeforeunload = function(e){div_off(\"submenu\");} /* Disable the "
"Search feature if we are not operating from CGI, since */ /* Search is "
"accomplished using CGI and will not work without it. */ if( !location.origin "
"|| !location.origin.match || !location.origin.match(/http/) ){ "
"document.getElementById(\"search_menubutton\").style.display = \"none\"; } "
"/* Used by the Hide/Show button beside syntax diagrams, to toggle the */ "
"function hideorshow(btn,obj){ var x = document.getElementById(obj); var b = "
"document.getElementById(btn); if( x.style.display!='none' ){ x.style.display "
"= 'none'; b.innerHTML='show'; }else{ x.style.display = ''; "
"b.innerHTML='hide'; } return false; } var antiRobot = 0; function "
"antiRobotGo(){ if( antiRobot!=3 ) return; antiRobot = 7; var j = "
"document.getElementById(\"mtimelink\"); if(j && "
"j.hasAttribute(\"data-href\")) j.href=j.getAttribute(\"data-href\"); } "
"function antiRobotDefense(){ document.body.onmousedown=function(){ antiRobot "
"|= 2; antiRobotGo(); document.body.onmousedown=null; } "
"document.body.onmousemove=function(){ antiRobot |= 2; antiRobotGo(); "
"document.body.onmousemove=null; } setTimeout(function(){ antiRobot |= 1; "
"antiRobotGo(); }, 100)  antiRobotGo(); } antiRobotDefense();"
msgstr ""

#. type: Content of: <html><body><div><div><div>
#: sedout/whyc.html:124
msgid ""
"<a onclick=\"toggle_toc()\"> <span class=\"fancy_toc_mark\" "
"id=\"toc_mk\">&#x25ba;</span> Table Of Contents </a>"
msgstr ""

#. type: Content of: <html><body><div><div><div><div><div>
#: sedout/whyc.html:128
msgid "<a href=\"#c_is_best\">1. C Is Best</a>"
msgstr ""

#. type: Content of: <html><body><div><div><div><div><div>
#: sedout/whyc.html:129
msgid "<a href=\"#performance\">1.1. Performance</a>"
msgstr ""

#. type: Content of: <html><body><div><div><div><div><div>
#: sedout/whyc.html:130
msgid "<a href=\"#compatibility\">1.2. Compatibility</a>"
msgstr ""

#. type: Content of: <html><body><div><div><div><div><div>
#: sedout/whyc.html:131
msgid "<a href=\"#low_dependency\">1.3. Low-Dependency</a>"
msgstr ""

#. type: Content of: <html><body><div><div><div><div><div>
#: sedout/whyc.html:132
msgid "<a href=\"#stability\">1.4. Stability</a>"
msgstr ""

#. type: Content of: <html><body><div><div><div><div><div>
#: sedout/whyc.html:133
msgid ""
"<a href=\"#why_isn_t_sqlite_coded_in_an_object_oriented_language_\">2. Why "
"Isn't SQLite Coded In An Object-Oriented Language?</a>"
msgstr ""

#. type: Content of: <html><body><div><div><div><div><div>
#: sedout/whyc.html:134
msgid ""
"<a href=\"#why_isn_t_sqlite_coded_in_a_safe_language_\">3. Why Isn't SQLite "
"Coded In A \"Safe\" Language?</a>"
msgstr ""

#. type: Content of: <html><body><div><div><script>
#: sedout/whyc.html:138
msgid ""
"function toggle_toc(){ var sub = document.getElementById(\"toc_sub\")  var "
"mk = document.getElementById(\"toc_mk\")  if( sub.style.display!=\"block\" "
"){ sub.style.display = \"block\"; mk.innerHTML = \"&#x25bc;\"; } else { "
"sub.style.display = \"none\"; mk.innerHTML = \"&#x25ba;\"; } }"
msgstr ""

#. type: Content of: <html><body><div><h1>
#: sedout/whyc.html:155
msgid "<span>1. </span>C Is Best"
msgstr ""

#. type: Content of: <html><body><div><blockquote><table><tr><td>
#: sedout/whyc.html:158
msgid ""
"Note: Sections 2.0 and 3.0 of this article were added in response to "
"comments on <a href=\"https://news.ycombinator.com/item?id=16585120\">Hacker "
"News</a> and <a "
"href=\"https://www.reddit.com/r/programming/comments/84fzoc/why_is_sqlite_coded_in_c/\">Reddit</a>."
msgstr ""

#. type: Content of: <html><body><div><p>
#: sedout/whyc.html:165
msgid ""
"Since its inception on 2000-05-29, SQLite has been implemented in generic "
"C.  C was and continues to be the best language for implementing a software "
"library like SQLite.  There are no plans to recode SQLite in any other "
"programming language at this time."
msgstr ""

#. type: Content of: <html><body><div><p>
#: sedout/whyc.html:171
msgid "The reasons why C is the best language to implement SQLite include:"
msgstr ""

#. type: Content of: <html><body><div><p><ul><li>
#: sedout/whyc.html:175
msgid "Performance"
msgstr ""

#. type: Content of: <html><body><div><p><ul><li>
#: sedout/whyc.html:176
msgid "Compatibility"
msgstr ""

#. type: Content of: <html><body><div><p><ul><li>
#: sedout/whyc.html:177
msgid "Low-dependency"
msgstr ""

#. type: Content of: <html><body><div><p><ul><li>
#: sedout/whyc.html:178
msgid "Stability"
msgstr ""

#. type: Content of: <html><body><div><p><h2>
#: sedout/whyc.html:181
msgid "<span>1.1. </span>Performance"
msgstr ""

#. type: Content of: <html><body><div><p><p>
#: sedout/whyc.html:183
msgid ""
"An intensively used low-level library like SQLite needs to be fast.  (And "
"SQLite is fast, see <a href=\"intern-v-extern-blob.html\">Internal Versus "
"External BLOBs</a> and <a href=\"fasterthanfs.html\">35% Faster Than The "
"Filesystem</a> for example.)"
msgstr ""

#. type: Content of: <html><body><div><p><p>
#: sedout/whyc.html:187
msgid ""
"C is a great language for writing fast code.  C is sometimes described as "
"\"portable assembly language\".  It enables to developers to code as close "
"to the underlying hardware as possible while still remaining portable across "
"platforms."
msgstr ""

#. type: Content of: <html><body><div><p><p>
#: sedout/whyc.html:192
msgid ""
"Other programming languages sometimes claim to be \"as fast as C\".  But no "
"other language claims to be faster than C for general-purpose programming, "
"because none are."
msgstr ""

#. type: Content of: <html><body><div><p><h2>
#: sedout/whyc.html:196
msgid "<span>1.2. </span>Compatibility"
msgstr ""

#. type: Content of: <html><body><div><p><p>
#: sedout/whyc.html:198
msgid ""
"Nearly all systems have the ability to call libraries written in C.  This is "
"not true of other implementation languages."
msgstr ""

#. type: Content of: <html><body><div><p><p>
#: sedout/whyc.html:201
msgid ""
"So, for example, Android applications written in Java are able to invoke "
"SQLite (through an adaptor).  Maybe it would have been more convenient for "
"Android if SQLite had been coded in Java as that would make the interface "
"simpler.  However, on iPhone applications are coded in Objective-C or Swift, "
"neither of which have the ability to call libraries written in Java.  Thus, "
"SQLite would be unusable on iPhones had it been written in Java."
msgstr ""

#. type: Content of: <html><body><div><p><h2>
#: sedout/whyc.html:209
msgid "<span>1.3. </span>Low-Dependency"
msgstr ""

#. type: Content of: <html><body><div><p><p>
#: sedout/whyc.html:211
msgid ""
"Libraries written in C do not have a huge run-time dependency.  In its "
"minimum configuration, SQLite requires only the following routines from the "
"standard C library:"
msgstr ""

#. type: Content of: <html><body><div><p><center><table><tr><td><ul><li>
#: sedout/whyc.html:220
msgid "memcmp()"
msgstr ""

#. type: Content of: <html><body><div><p><center><table><tr><td><ul><li>
#: sedout/whyc.html:221
msgid "memcpy()"
msgstr ""

#. type: Content of: <html><body><div><p><center><table><tr><td><ul><li>
#: sedout/whyc.html:222
msgid "memmove()"
msgstr ""

#. type: Content of: <html><body><div><p><center><table><tr><td><ul><li>
#: sedout/whyc.html:223
msgid "memset()"
msgstr ""

#. type: Content of: <html><body><div><p><center><table><tr><td>
#: sedout/whyc.html:226
msgid "&nbsp;&nbsp;&nbsp;"
msgstr ""

#. type: Content of: <html><body><div><p><center><table><tr><td><ul><li>
#: sedout/whyc.html:229
msgid "strcmp()"
msgstr ""

#. type: Content of: <html><body><div><p><center><table><tr><td><ul><li>
#: sedout/whyc.html:230
msgid "strlen()"
msgstr ""

#. type: Content of: <html><body><div><p><center><table><tr><td><ul><li>
#: sedout/whyc.html:231
msgid "strncmp()"
msgstr ""

#. type: Content of: <html><body><div><p><p>
#: sedout/whyc.html:239
msgid ""
"In a more complete build, SQLite also uses library routines like malloc() "
"and free() and operating system interfaces for opening, reading, writing, "
"and closing files.  But even then, the number of dependencies is very "
"small.  Other \"modern\" language, in contrast, often require multi-megabyte "
"runtimes loaded with thousands and thousands of interfaces."
msgstr ""

#. type: Content of: <html><body><div><p><h2>
#: sedout/whyc.html:245
msgid "<span>1.4. </span>Stability"
msgstr ""

#. type: Content of: <html><body><div><p><p>
#: sedout/whyc.html:248
msgid ""
"The C language is old and boring.  It is a well-known and well-understood "
"language.  This is exactly what one wants when developing a module like "
"SQLite.  Writing a small, fast, and reliable database engine is hard enough "
"as it is without the implementation language changing out from under you "
"with each update to the implementation language specification."
msgstr ""

#. type: Content of: <html><body><div><p><h1>
#: sedout/whyc.html:255
msgid "<span>2. </span>Why Isn't SQLite Coded In An Object-Oriented Language?"
msgstr ""

#. type: Content of: <html><body><div><p><p>
#: sedout/whyc.html:258
msgid ""
"Some programmers cannot imagine developing a complex system like SQLite in a "
"language that is not \"object oriented\".  So why is SQLite not coded in C++ "
"or Java?"
msgstr ""

#. type: Content of: <html><body><div><p><p><ol><li>
#: sedout/whyc.html:264
msgid ""
"Libraries written in C++ or Java can generally only be used by applications "
"written in the same language. It is difficult to get an application written "
"in Haskell or Java to invoke a library written in C++.  On the other hand, "
"libraries written in C are callable from any programming language."
msgstr ""

#. type: Content of: <html><body><div><p><p><ol><li>
#: sedout/whyc.html:271
msgid ""
"Object-Oriented is a design pattern, not a programming language.  You can do "
"object-oriented programming in any language you want, including assembly "
"language.  Some languages (ex: C++ or Java) make object-oriented easier.  "
"But you can still do object-oriented programming in languages like C."
msgstr ""

#. type: Content of: <html><body><div><p><p><ol><li>
#: sedout/whyc.html:278
msgid ""
"Object-oriented is not the only valid design pattern.  Many programmers have "
"been taught to think purely in terms of objects.  And, to be fair, objects "
"are often a good way to decompose a problem.  But objects are not the only "
"way, and are not always the best way to decompose a problem.  Sometimes good "
"old procedural code is easier to write, easier to maintain and understand, "
"and faster than object-oriented code."
msgstr ""

#. type: Content of: <html><body><div><p><p><ol><li>
#: sedout/whyc.html:287
msgid ""
"When SQLite was first being developed, Java was a young and immature "
"language.  C++ was older, but was undergoing such growing pains that it was "
"difficult to find any two C++ compilers that worked the same way.  So C was "
"definitely a better choice back when SQLite was first being developed.  The "
"situation is less stark now, but there is little to no benefit in recoding "
"SQLite at this point."
msgstr ""

#. type: Content of: <html><body><div><p><p><h1>
#: sedout/whyc.html:295
msgid "<span>3. </span>Why Isn't SQLite Coded In A \"Safe\" Language?"
msgstr ""

#. type: Content of: <html><body><div><p><p><p>
#: sedout/whyc.html:298
msgid ""
"There has lately been a lot of interest in \"safe\" programming languages "
"like Rust or Go in which it is impossible, or is at least difficult, to make "
"common programming errors like memory leaks or array overruns.  So the "
"question often arises as to why SQLite is not coded in a \"safe\" language."
msgstr ""

#. type: Content of: <html><body><div><p><p><p><ol><li>
#: sedout/whyc.html:305
msgid ""
"None of the safe programming languages existed for the first 10 years of "
"SQLite's existence.  SQLite could be recoded in Go or Rust, but doing so "
"would probably introduce far more bugs than would be fixed, and it seems "
"also likely to result in slower code."
msgstr ""

#. type: Content of: <html><body><div><p><p><p><ol><li>
#: sedout/whyc.html:311
msgid ""
"Safe languages insert additional machine branches to do things like verify "
"that array accesses are in-bounds.  In correct code, those branches are "
"never taken.  That means that the machine code cannot be 100% branch tested, "
"which is an important component of SQLite's quality strategy."
msgstr ""

#. type: Content of: <html><body><div><p><p><p><ol><li>
#: sedout/whyc.html:318
msgid ""
"Safe languages usually want to abort if they encounter an out-of-memory "
"(OOM) situation.  SQLite is designed to recover gracefully from an OOM.  It "
"is unclear how this could be accomplished in the current crop of safe "
"languages."
msgstr ""

#. type: Content of: <html><body><div><p><p><p><ol><li>
#: sedout/whyc.html:324
msgid ""
"All of the existing safe languages are new.  The developers of SQLite "
"applaud the efforts of computer language researchers in trying to develop "
"languages that are easier to program safely.  We encourage these efforts to "
"continue.  But we ourselves are more interested in old and boring languages "
"when it comes to implementing SQLite."
msgstr ""

#. type: Content of: <html><body><div><p><p><p><p>
#: sedout/whyc.html:332
msgid ""
"All that said, it is possible that SQLite might one day be recoded in Rust.  "
"Recoding SQLite in Go is unlikely since Go hates assert().  But Rust is a "
"possibility.  Some preconditions that must occur before SQLite is recoded in "
"Rust include:"
msgstr ""

#. type: Content of: <html><body><div><p><p><p><ol><li>
#: sedout/whyc.html:340
msgid ""
"Rust needs to mature a little more, stop changing so fast, and move further "
"toward being old and boring."
msgstr ""

#. type: Content of: <html><body><div><p><p><p><ol><li>
#: sedout/whyc.html:342
msgid ""
"Rust needs to demonstrate that it can be used to create general-purpose "
"libraries that are callable from all other programming languages."
msgstr ""

#. type: Content of: <html><body><div><p><p><p><ol><li>
#: sedout/whyc.html:344
msgid ""
"Rust needs to demonstrate that it can produce object code that works on "
"obscure embedded devices, including devices that lack an operating system."
msgstr ""

#. type: Content of: <html><body><div><p><p><p><ol><li>
#: sedout/whyc.html:347
msgid ""
"Rust needs to pick up the necessary tooling that enables one to do 100% "
"branch coverage testing of the compiled binaries."
msgstr ""

#. type: Content of: <html><body><div><p><p><p><ol><li>
#: sedout/whyc.html:349
msgid "Rust needs a mechanism to recover gracefully from OOM errors."
msgstr ""

#. type: Content of: <html><body><div><p><p><p><ol><li>
#: sedout/whyc.html:350
msgid ""
"Rust needs to demonstrate that it can do the kinds of work that C does in "
"SQLite without a significant speed penalty."
msgstr ""

#. type: Content of: <html><body><div><p><p><p><p>
#: sedout/whyc.html:355
msgid ""
"If you are a \"rustacean\" and feel that Rust already meets the "
"preconditions listed above, and that SQLite should be recoded in Rust, then "
"you are welcomed and encouraged to contact the SQLite developers privately "
"and argue your case."
msgstr ""

#. type: Content of: <html><body><div><p><p><p><p>
#: sedout/whyc.html:360
msgid ""
"<small><i>This page last modified on <a "
"href=\"https://sqlite.org/docsrc/honeypot\" id=\"mtimelink\" "
"data-href=\"https://sqlite.org/docsrc/finfo/pages/whyc.in?m=a3c9b502ed\">2022-07-29 "
"00:41:26</a> UTC </i></small>"
msgstr ""
