# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2023-03-16 15:52+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. type: Content of: <html><body><div><div><div>
#: sedout/rowvalue.html:6 sedout/rowvalue.html:121
msgid "Row Values"
msgstr ""

#. type: Content of: <html><body><div><a>
#: sedout/rowvalue.html:11
msgid "<a href=\"index.html\">"
msgstr ""

#. type: Attribute 'alt' of: <html><body><div><a><img>
#: sedout/rowvalue.html:12
msgid "SQLite"
msgstr ""

#. type: Content of: <html><body><div><div>
#: sedout/rowvalue.html:16
msgid "Small. Fast. Reliable."
msgstr ""

#. type: Content of: <html><body><div><div><br>
#: sedout/rowvalue.html:16
msgid "Choose any three."
msgstr ""

#. type: Content of: <html><body><div><div><ul><li>
#: sedout/rowvalue.html:20
msgid "<a href=\"index.html\">Home</a>"
msgstr ""

#. type: Content of: <html><body><div><div><ul><li><li>
#: sedout/rowvalue.html:21
msgid "<a href=\"javascript:void(0)\" onclick='toggle_div(\"submenu\")'>Menu</a>"
msgstr ""

#. type: Content of: <html><body><div><div><ul><li>
#: sedout/rowvalue.html:22 sedout/rowvalue.html:34
msgid "<a href='about.html'>About</a>"
msgstr ""

#. type: Content of: <html><body><div><div><ul><li><li><li><li>
#: sedout/rowvalue.html:23
msgid "<a href=\"docs.html\">Documentation</a>"
msgstr ""

#. type: Content of: <html><body><div><div><ul><li><li><li><li><li>
#: sedout/rowvalue.html:24
msgid "<a href=\"download.html\">Download</a>"
msgstr ""

#. type: Content of: <html><body><div><div><ul><li><li><li><li><li><li>
#: sedout/rowvalue.html:25
msgid "<a href='copyright.html'>License</a>"
msgstr ""

#. type: Content of: <html><body><div><div><ul><li><li><li><li><li><li><li>
#: sedout/rowvalue.html:26
msgid "<a href=\"support.html\">Support</a>"
msgstr ""

#. type: Content of: <html><body><div><div><ul><li><li><li><li><li><li><li><li>
#: sedout/rowvalue.html:27
msgid "<a href=\"prosupport.html\">Purchase</a>"
msgstr ""

#. type: Content of: <html><body><div><div><ul><li><li><li><li><li><li><li><li><li>
#: sedout/rowvalue.html:29
msgid "<a href=\"javascript:void(0)\" onclick='toggle_search()'>Search</a>"
msgstr ""

#. type: Content of: <html><body><div><div><ul><li><li>
#: sedout/rowvalue.html:35
msgid "<a href='docs.html'>Documentation</a>"
msgstr ""

#. type: Content of: <html><body><div><div><ul><li><li><li>
#: sedout/rowvalue.html:36
msgid "<a href='download.html'>Download</a>"
msgstr ""

#. type: Content of: <html><body><div><div><ul><li><li><li><li>
#: sedout/rowvalue.html:37
msgid "<a href='support.html'>Support</a>"
msgstr ""

#. type: Content of: <html><body><div><div><ul><li><li><li><li><li>
#: sedout/rowvalue.html:38
msgid "<a href='prosupport.html'>Purchase</a>"
msgstr ""

#. type: Content of: <html><body><div><div><form><select>
#: sedout/rowvalue.html:43
msgid "<select name=\"s\" id=\"searchtype\">"
msgstr ""

#. type: Content of: <html><body><div><div><form><select><option>
#: sedout/rowvalue.html:44
msgid "Search Documentation"
msgstr ""

#. type: Content of: <html><body><div><div><form><select><option>
#: sedout/rowvalue.html:45
msgid "Search Changelog"
msgstr ""

#. type: Content of: <html><body><div><div><form>
#: sedout/rowvalue.html:46
msgid ""
"</select> <input type=\"text\" name=\"q\" id=\"searchbox\" value=\"\"/> "
"<input type=\"submit\" value=\"Go\"/>"
msgstr ""

#. type: Content of: <html><body><script>
#: sedout/rowvalue.html:53
msgid ""
"function toggle_div(nm) { var w = document.getElementById(nm); if( "
"w.style.display==\"block\" ){ w.style.display = \"none\"; }else{ "
"w.style.display = \"block\"; } } function toggle_search() { var w = "
"document.getElementById(\"searchmenu\"); if( w.style.display==\"block\" ){ "
"w.style.display = \"none\"; } else { w.style.display = \"block\"; "
"setTimeout(function(){ document.getElementById(\"searchbox\").focus()  }, "
"30); } } function "
"div_off(nm){document.getElementById(nm).style.display=\"none\";} "
"window.onbeforeunload = function(e){div_off(\"submenu\");} /* Disable the "
"Search feature if we are not operating from CGI, since */ /* Search is "
"accomplished using CGI and will not work without it. */ if( !location.origin "
"|| !location.origin.match || !location.origin.match(/http/) ){ "
"document.getElementById(\"search_menubutton\").style.display = \"none\"; } "
"/* Used by the Hide/Show button beside syntax diagrams, to toggle the */ "
"function hideorshow(btn,obj){ var x = document.getElementById(obj); var b = "
"document.getElementById(btn); if( x.style.display!='none' ){ x.style.display "
"= 'none'; b.innerHTML='show'; }else{ x.style.display = ''; "
"b.innerHTML='hide'; } return false; } var antiRobot = 0; function "
"antiRobotGo(){ if( antiRobot!=3 ) return; antiRobot = 7; var j = "
"document.getElementById(\"mtimelink\"); if(j && "
"j.hasAttribute(\"data-href\")) j.href=j.getAttribute(\"data-href\"); } "
"function antiRobotDefense(){ document.body.onmousedown=function(){ antiRobot "
"|= 2; antiRobotGo(); document.body.onmousedown=null; } "
"document.body.onmousemove=function(){ antiRobot |= 2; antiRobotGo(); "
"document.body.onmousemove=null; } setTimeout(function(){ antiRobot |= 1; "
"antiRobotGo(); }, 100)  antiRobotGo(); } antiRobotDefense();"
msgstr ""

#. type: Content of: <html><body><div><div><div>
#: sedout/rowvalue.html:124
msgid ""
"<a onclick=\"toggle_toc()\"> <span class=\"fancy_toc_mark\" "
"id=\"toc_mk\">&#x25ba;</span> Table Of Contents </a>"
msgstr ""

#. type: Content of: <html><body><div><div><div><div><div>
#: sedout/rowvalue.html:128
msgid "<a href=\"#definitions\">1. Definitions</a>"
msgstr ""

#. type: Content of: <html><body><div><div><div><div><div>
#: sedout/rowvalue.html:129
msgid "<a href=\"#syntax\">2. Syntax</a>"
msgstr ""

#. type: Content of: <html><body><div><div><div><div><div>
#: sedout/rowvalue.html:130
msgid "<a href=\"#row_value_comparisons\">2.1. Row Value Comparisons</a>"
msgstr ""

#. type: Content of: <html><body><div><div><div><div><div>
#: sedout/rowvalue.html:131
msgid "<a href=\"#row_value_in_operators\">2.2. Row Value IN Operators</a>"
msgstr ""

#. type: Content of: <html><body><div><div><div><div><div>
#: sedout/rowvalue.html:132
msgid ""
"<a href=\"#row_values_in_update_statements\">2.3. Row Values In UPDATE "
"Statements</a>"
msgstr ""

#. type: Content of: <html><body><div><div><div><div><div>
#: sedout/rowvalue.html:133
msgid "<a href=\"#example_uses_of_row_values\">3. Example Uses Of Row Values</a>"
msgstr ""

#. type: Content of: <html><body><div><div><div><div><div>
#: sedout/rowvalue.html:134
msgid "<a href=\"#scrolling_window_queries\">3.1. Scrolling Window Queries</a>"
msgstr ""

#. type: Content of: <html><body><div><div><div><div><div>
#: sedout/rowvalue.html:135
msgid ""
"<a href=\"#comparison_of_dates_stored_as_separate_fields\">3.2. Comparison "
"of dates stored as separate fields</a>"
msgstr ""

#. type: Content of: <html><body><div><div><div><div><div>
#: sedout/rowvalue.html:136
msgid ""
"<a href=\"#search_against_multi_column_keys\">3.3. Search against "
"multi-column keys</a>"
msgstr ""

#. type: Content of: <html><body><div><div><div><div><div>
#: sedout/rowvalue.html:137
msgid ""
"<a href=\"#update_multiple_columns_of_a_table_based_on_a_query\">3.4. Update "
"multiple columns of a table based on a query</a>"
msgstr ""

#. type: Content of: <html><body><div><div><div><div><div>
#: sedout/rowvalue.html:138
msgid "<a href=\"#clarity_of_presentation\">3.5. Clarity of presentation</a>"
msgstr ""

#. type: Content of: <html><body><div><div><div><div><div>
#: sedout/rowvalue.html:139
msgid "<a href=\"#backwards_compatibility\">4. Backwards Compatibility</a>"
msgstr ""

#. type: Content of: <html><body><div><div><script>
#: sedout/rowvalue.html:143
msgid ""
"function toggle_toc(){ var sub = document.getElementById(\"toc_sub\")  var "
"mk = document.getElementById(\"toc_mk\")  if( sub.style.display!=\"block\" "
"){ sub.style.display = \"block\"; mk.innerHTML = \"&#x25bc;\"; } else { "
"sub.style.display = \"none\"; mk.innerHTML = \"&#x25ba;\"; } }"
msgstr ""

#. type: Content of: <html><body><div><h1>
#: sedout/rowvalue.html:161
msgid "<span>1. </span>Definitions"
msgstr ""

#. type: Content of: <html><body><div><p>
#: sedout/rowvalue.html:163
msgid ""
"A \"value\" is a single number, string, BLOB or NULL.  Sometimes the "
"qualified name \"scalar value\" is used to emphasize that only a single "
"quantity is involved."
msgstr ""

#. type: Content of: <html><body><div><p>
#: sedout/rowvalue.html:167
msgid ""
"A \"row value\" is an ordered list of two or more scalar values.  In other "
"words, a \"row value\" is a vector or tuple."
msgstr ""

#. type: Content of: <html><body><div><p>
#: sedout/rowvalue.html:170
msgid ""
"The \"size\" of a row value is the number of scalar values the row value "
"contains.  The size of a row value is always at least 2.  A row value with a "
"single column is just a scalar value.  A row value with no columns is a "
"syntax error."
msgstr ""

#. type: Content of: <html><body><div><h1>
#: sedout/rowvalue.html:175
msgid "<span>2. </span>Syntax"
msgstr ""

#. type: Content of: <html><body><div><p>
#: sedout/rowvalue.html:177
msgid "SQLite allows row values to be expressed in two ways:"
msgstr ""

#. type: Content of: <html><body><div><p><ol><li>
#: sedout/rowvalue.html:179
msgid "A parenthesized, comma-separated list of scalar values."
msgstr ""

#. type: Content of: <html><body><div><p><ol><li>
#: sedout/rowvalue.html:180
msgid "A subquery expression with two or more result columns."
msgstr ""

#. type: Content of: <html><body><div><p><p>
#: sedout/rowvalue.html:183
msgid "SQLite can use row values in two contexts:"
msgstr ""

#. type: Content of: <html><body><div><p><p><ol><li>
#: sedout/rowvalue.html:185
msgid ""
"Two row values of the same size can be compared using operators &lt;, &lt;=, "
"&gt;, &gt;=, =, &lt;&gt;, IS, IS NOT, IN, NOT IN, BETWEEN, or CASE."
msgstr ""

#. type: Content of: <html><body><div><p><p><ol><li>
#: sedout/rowvalue.html:188
msgid ""
"In an <a href=\"lang_update.html\">UPDATE</a> statement, a list of column "
"names can be set to a row value of the same size."
msgstr ""

#. type: Content of: <html><body><div><p><p><p>
#: sedout/rowvalue.html:192
msgid ""
"The syntax for row values and the circumstances in which row values can be "
"used are illustrated in examples below."
msgstr ""

#. type: Content of: <html><body><div><p><p><h2>
#: sedout/rowvalue.html:195
msgid "<span>2.1. </span>Row Value Comparisons"
msgstr ""

#. type: Content of: <html><body><div><p><p><p>
#: sedout/rowvalue.html:197
msgid ""
"Two row values are compared by looking at the constituent scalar values from "
"left to right.  A NULL means of \"unknown\".  The overall result of "
"comparison is NULL if it is possible to make the result either true or false "
"by substituting alternative values in place of the constituent NULLs.  The "
"following query demonstrates some row value comparisons:"
msgstr ""

#. type: Content of: <html><body><div><p><p><div><pre>
#: sedout/rowvalue.html:205
#, no-wrap
msgid ""
"SELECT\n"
"  (1,2,3) = (1,2,3),          -- 1\n"
"  (1,2,3) = (1,NULL,3),       -- NULL\n"
"  (1,2,3) = (1,NULL,4),       -- 0\n"
"  (1,2,3) &lt; (2,3,4),          -- 1\n"
"  (1,2,3) &lt; (1,2,4),          -- 1\n"
"  (1,2,3) &lt; (1,3,NULL),       -- 1\n"
"  (1,2,3) &lt; (1,2,NULL),       -- NULL\n"
"  (1,3,5) &lt; (1,2,NULL),       -- 0\n"
"  (1,2,NULL) IS (1,2,NULL);   -- 1\n"
msgstr ""

#. type: Content of: <html><body><div><p><p><p>
#: sedout/rowvalue.html:217
msgid ""
"The result of \"(1,2,3)=(1,NULL,3)\" is NULL because the result might be "
"true if we replaced NULL&rarr;2 or false if we replaced NULL&rarr;9.  The "
"result of \"(1,2,3)=(1,NULL,4)\" is not NULL because there is no "
"substitutions of the constituent NULL that will make the expression true, "
"since 3 will never equal 4 in the third column."
msgstr ""

#. type: Content of: <html><body><div><p><p><p>
#: sedout/rowvalue.html:223
msgid ""
"Any of the row values in the previous example could be replace by a subquery "
"that returns three columns and the same answer would result.  For example:"
msgstr ""

#. type: Content of: <html><body><div><p><p><div><pre>
#: sedout/rowvalue.html:227
#, no-wrap
msgid ""
"CREATE TABLE t1(a,b,c);\n"
"INSERT INTO t1(a,b,c) VALUES(1,2,3);\n"
"SELECT (1,2,3)=(SELECT * FROM t1); -- 1\n"
msgstr ""

#. type: Content of: <html><body><div><p><p>
#: sedout/rowvalue.html:232
msgid "<a name=\"rvinop\"></a>"
msgstr ""

#. type: Content of: <html><body><div><p><p><h2>
#: sedout/rowvalue.html:234
msgid "<span>2.2. </span>Row Value IN Operators"
msgstr ""

#. type: Content of: <html><body><div><p><p><p>
#: sedout/rowvalue.html:236
msgid ""
"For a row-value <a href=\"lang_expr.html#in_op\">IN operator</a>, the "
"left-hand side (hereafter \"LHS\") can be either a parenthesized list of "
"values or a subquery with multiple columns.  But the right-hand side "
"(hereafter \"RHS\") must be a subquery expression."
msgstr ""

#. type: Content of: <html><body><div><p><p><div><pre>
#: sedout/rowvalue.html:240
#, no-wrap
msgid ""
"CREATE TABLE t2(x,y,z);\n"
"INSERT INTO t2(x,y,z) VALUES(1,2,3),(2,3,4),(1,NULL,5);\n"
"SELECT\n"
"   (1,2,3) IN (SELECT * FROM t2),  -- 1\n"
"   (7,8,9) IN (SELECT * FROM t2),  -- 0\n"
"   (1,3,5) IN (SELECT * FROM t2);  -- NULL\n"
msgstr ""

#. type: Content of: <html><body><div><p><p><h2>
#: sedout/rowvalue.html:248
msgid "<span>2.3. </span>Row Values In UPDATE Statements"
msgstr ""

#. type: Content of: <html><body><div><p><p><p>
#: sedout/rowvalue.html:250
msgid ""
"Row values can also be used in the SET clause of an <a "
"href=\"lang_update.html\">UPDATE</a> statement.  The LHS must be a list of "
"column names.  The RHS can be any row value.  For example:"
msgstr ""

#. type: Content of: <html><body><div><p><p><div><pre>
#: sedout/rowvalue.html:254
#, no-wrap
msgid ""
"UPDATE tab3 \n"
"   SET (a,b,c) = (SELECT x,y,z\n"
"                    FROM tab4\n"
"                   WHERE tab4.w=tab3.d)\n"
" WHERE tab3.e BETWEEN 55 AND 66;\n"
msgstr ""

#. type: Content of: <html><body><div><p><p><h1>
#: sedout/rowvalue.html:261
msgid "<span>3. </span>Example Uses Of Row Values"
msgstr ""

#. type: Content of: <html><body><div><p><p><h2>
#: sedout/rowvalue.html:263
msgid "<span>3.1. </span>Scrolling Window Queries"
msgstr ""

#. type: Content of: <html><body><div><p><p><p>
#: sedout/rowvalue.html:265
msgid ""
"Suppose an application wants to display a list of contacts in alphabetical "
"order by lastname, firstname, in a scrolling window that can only show 7 "
"contacts at a time.  Initialize the scrolling window to the first 7 entries "
"is easy:"
msgstr ""

#. type: Content of: <html><body><div><p><p><div><pre>
#: sedout/rowvalue.html:270
#, no-wrap
msgid ""
"SELECT * FROM contacts\n"
" ORDER BY lastname, firstname\n"
" LIMIT 7;\n"
msgstr ""

#. type: Content of: <html><body><div><p><p><p>
#: sedout/rowvalue.html:275
msgid ""
"When the user scrolls down, the application needs to find the second set of "
"7 entries.  One way to do this is to use the OFFSET clause:"
msgstr ""

#. type: Content of: <html><body><div><p><p><div><pre>
#: sedout/rowvalue.html:278
#, no-wrap
msgid ""
"SELECT * FROM contacts\n"
" ORDER BY lastname, firstname\n"
" LIMIT 7 OFFSET 7;\n"
msgstr ""

#. type: Content of: <html><body><div><p><p><p>
#: sedout/rowvalue.html:283
msgid ""
"OFFSET gives the correct answer.  However, OFFSET requires time proportional "
"to the offset value.  What really happens with \"LIMIT x OFFSET y\" is that "
"SQLite computes the query as \"LIMIT x+y\" and discards the first y values "
"without returning them to the application.  So as the window scrolls down "
"toward the bottom of a long list, and the y value becomes larger and larger, "
"successive offset computations take more and more time."
msgstr ""

#. type: Content of: <html><body><div><p><p><p>
#: sedout/rowvalue.html:291
msgid ""
"A more efficient approach is to remember the last entry currently displayed "
"and then use a row value comparison in the WHERE clause:"
msgstr ""

#. type: Content of: <html><body><div><p><p><div><pre>
#: sedout/rowvalue.html:295
#, no-wrap
msgid ""
"SELECT * FROM contacts\n"
" WHERE (lastname,firstname) &gt; (?1,?2)\n"
" ORDER BY lastname, firstname\n"
" LIMIT 7;\n"
msgstr ""

#. type: Content of: <html><body><div><p><p><p>
#: sedout/rowvalue.html:301
msgid ""
"If the lastname and firstname on the bottom row of the previous screen are "
"bound to ?1 and ?2, then the query above computes the next 7 rows.  And, "
"assuming there is an appropriate index, it does so very efficiently &mdash; "
"much more efficiently than OFFSET."
msgstr ""

#. type: Content of: <html><body><div><p><p><h2>
#: sedout/rowvalue.html:306
msgid "<span>3.2. </span>Comparison of dates stored as separate fields"
msgstr ""

#. type: Content of: <html><body><div><p><p><p>
#: sedout/rowvalue.html:308
msgid ""
"The usual way of storing a date in a database table is as a single field, as "
"either a unix timestamp, a julian day number, or an ISO-8601 dates string.  "
"But some application store dates as three separate fields for the year, "
"month, and day."
msgstr ""

#. type: Content of: <html><body><div><p><p><div><pre>
#: sedout/rowvalue.html:313
#, no-wrap
msgid ""
"CREATE TABLE info(\n"
"  year INT,          -- 4 digit year\n"
"  month INT,         -- 1 through 12\n"
"  day INT,           -- 1 through 31\n"
"  other_stuff BLOB   -- blah blah blah\n"
");\n"
msgstr ""

#. type: Content of: <html><body><div><p><p><p>
#: sedout/rowvalue.html:321
msgid ""
"When dates are stored this way, row value comparisons provide a convenient "
"way to compare dates:"
msgstr ""

#. type: Content of: <html><body><div><p><p><div><pre>
#: sedout/rowvalue.html:324
#, no-wrap
msgid ""
"SELECT * FROM info\n"
" WHERE (year,month,day) BETWEEN (2015,9,12) AND (2016,9,12);\n"
msgstr ""

#. type: Content of: <html><body><div><p><p><h2>
#: sedout/rowvalue.html:328
msgid "<span>3.3. </span>Search against multi-column keys"
msgstr ""

#. type: Content of: <html><body><div><p><p><p>
#: sedout/rowvalue.html:330
msgid ""
"Suppose we want to know the order number, product number, and quantity for "
"any item in which the product number and quantity match the product number "
"and quantity of any item in order number 365:"
msgstr ""

#. type: Content of: <html><body><div><p><p><div><pre>
#: sedout/rowvalue.html:334
#, no-wrap
msgid ""
"SELECT ordid, prodid, qty\n"
"  FROM item\n"
" WHERE (prodid, qty) IN (SELECT prodid, qty\n"
"                           FROM item\n"
"                          WHERE ordid = 365);\n"
msgstr ""

#. type: Content of: <html><body><div><p><p><p>
#: sedout/rowvalue.html:341
msgid ""
"The query above could be rewritten as a join and without the use of row "
"values:"
msgstr ""

#. type: Content of: <html><body><div><p><p><div><pre>
#: sedout/rowvalue.html:344
#, no-wrap
msgid ""
"SELECT t1.ordid, t1.prodid, t1.qty\n"
"  FROM item AS t1, item AS t2\n"
" WHERE t1.prodid=t2.prodid\n"
"   AND t1.qty=t2.qty\n"
"   AND t2.ordid=365;\n"
msgstr ""

#. type: Content of: <html><body><div><p><p><p>
#: sedout/rowvalue.html:351
msgid ""
"Because the same query could be written without the use of row values, row "
"values do not provide new capabilities.  However, many developers say that "
"the row value format is easier to read, write, and debug."
msgstr ""

#. type: Content of: <html><body><div><p><p><p>
#: sedout/rowvalue.html:355
msgid ""
"Even in the JOIN form, the query can be made clearer through the use of row "
"values:"
msgstr ""

#. type: Content of: <html><body><div><p><p><div><pre>
#: sedout/rowvalue.html:358
#, no-wrap
msgid ""
"SELECT t1.ordid, t1.prodid, t1.qty\n"
"  FROM item AS t1, item AS t2\n"
" WHERE (t1.prodid,t1.qty) = (t2.prodid,t2.qty)\n"
"   AND t2.ordid=365;\n"
msgstr ""

#. type: Content of: <html><body><div><p><p><p>
#: sedout/rowvalue.html:364
msgid ""
"This later query generates exactly the same <a "
"href=\"opcode.html\">bytecode</a> as the previous scalar formulation, but "
"using syntax that it cleaner and easier to read."
msgstr ""

#. type: Content of: <html><body><div><p><p><h2>
#: sedout/rowvalue.html:368
msgid "<span>3.4. </span>Update multiple columns of a table based on a query"
msgstr ""

#. type: Content of: <html><body><div><p><p><p>
#: sedout/rowvalue.html:370
msgid ""
"The row-value notation is useful for updating two or more columns of a table "
"from the result of a single query.  An example of this is in the full-text "
"search feature of the <a href=\"https://www.fossil-scm.org/\">Fossil version "
"control system</a>."
msgstr ""

#. type: Content of: <html><body><div><p><p><p>
#: sedout/rowvalue.html:375
msgid ""
"In the Fossil full-text search system, documents that participate in the "
"full-text search (wiki pages, tickets, check-ins, documentation files, etc) "
"are tracked by a table called \"ftsdocs\" (<u>f</u>ull <u>t</u>ext "
"<u>s</u>earch <u>doc</u>ument<u>s</u>).  As new documents are added to the "
"repository, they are not indexed right away.  Indexing is deferred until "
"there is a search request.  The ftsdocs table contains an \"idxed\" field "
"which is true if the document has been indexed and false if not."
msgstr ""

#. type: Content of: <html><body><div><p><p><p>
#: sedout/rowvalue.html:384
msgid ""
"When a search request occurs and pending documents are indexed for the first "
"time, the ftsdocs table must be updated by setting the idxed column to true "
"and also filling in several other columns with information pertinent to the "
"search.  That other information is obtained from a join.  The query is this:"
msgstr ""

#. type: Content of: <html><body><div><p><p><div><pre>
#: sedout/rowvalue.html:390
#, no-wrap
msgid ""
"UPDATE ftsdocs SET\n"
"  idxed=1,\n"
"  name=NULL,\n"
"  (label,url,mtime) = \n"
"      (SELECT printf('Check-in &#91;%%.16s&#93; on %%s',blob.uuid,\n"
"                     datetime(event.mtime)),\n"
"              printf('/timeline?y=ci&amp;c=%%.20s',blob.uuid),\n"
"              event.mtime\n"
"         FROM event, blob\n"
"        WHERE event.objid=ftsdocs.rid\n"
"          AND blob.rid=ftsdocs.rid)\n"
"WHERE ftsdocs.type='c' AND NOT ftsdocs.idxed\n"
msgstr ""

#. type: Content of: <html><body><div><p><p><p>
#: sedout/rowvalue.html:404
msgid ""
"(See the <a "
"href=\"https://www.fossil-scm.org/fossil/artifact/e5d6a82d?ln=1594-1605\">source "
"code</a> for further detail.  Other examples <a "
"href=\"https://www.fossil-scm.org/fossil/artifact/e5d6a82d?ln=1618-1628\">here</a> "
"and <a "
"href=\"https://www.fossil-scm.org/fossil/artifact/e5d6a82d?ln=1641-1650\">here</a>.)"
msgstr ""

#. type: Content of: <html><body><div><p><p><p>
#: sedout/rowvalue.html:410
msgid ""
"Five out of nine columns in the ftsdocs table are updated.  Two of the "
"modified columns, \"idxed\" and \"name\", can be updated independently of "
"the query.  But the three columns \"label\", \"url\", and \"mtime\" all "
"require a join query against the \"event\" and \"blob\" tables.  Without row "
"values, the equivalent UPDATE would require that the join be repeated three "
"times, once for each column to be updated."
msgstr ""

#. type: Content of: <html><body><div><p><p><h2>
#: sedout/rowvalue.html:417
msgid "<span>3.5. </span>Clarity of presentation"
msgstr ""

#. type: Content of: <html><body><div><p><p><p>
#: sedout/rowvalue.html:419
msgid ""
"Sometimes the use of row values just makes the SQL easier to read and "
"write.  Consider the following two UPDATE statements:"
msgstr ""

#. type: Content of: <html><body><div><p><p><div><pre>
#: sedout/rowvalue.html:422
#, no-wrap
msgid ""
"UPDATE tab1 SET (a,b)=(b,a);\n"
"UPDATE tab1 SET a=b, b=a;\n"
msgstr ""

#. type: Content of: <html><body><div><p><p><p>
#: sedout/rowvalue.html:426
msgid ""
"Both UPDATE statements do exactly the same thing.  (They generate identical "
"<a href=\"opcode.html\">bytecode</a>.)  But the first form, the row value "
"form, seems to make it clearer that the intent of the statement is to swap "
"the values in columns A and B."
msgstr ""

#. type: Content of: <html><body><div><p><p><p>
#: sedout/rowvalue.html:431
msgid "Or consider these identical queries:"
msgstr ""

#. type: Content of: <html><body><div><p><p><div><pre>
#: sedout/rowvalue.html:433
#, no-wrap
msgid ""
"SELECT * FROM tab1 WHERE a=?1 AND b=?2;\n"
"SELECT * FROM tab1 WHERE (a,b)=(?1,?2);\n"
msgstr ""

#. type: Content of: <html><body><div><p><p><p>
#: sedout/rowvalue.html:437
msgid ""
"Once again, the SQL statements generate identical bytecode and thus do "
"exactly the same job in exactly the same way.  But the second form is made "
"easier for humans to read by grouping the query parameters together into a "
"single row value rather than scattering them across the WHERE clause."
msgstr ""

#. type: Content of: <html><body><div><p><p><h1>
#: sedout/rowvalue.html:443
msgid "<span>4. </span>Backwards Compatibility"
msgstr ""

#. type: Content of: <html><body><div><p><p><p>
#: sedout/rowvalue.html:445
msgid ""
"Row values were added to SQLite <a href=\"releaselog/3_15_0.html\">version "
"3.15.0</a> (2016-10-14).  Attempts to use row values in prior versions of "
"SQLite will generate syntax errors."
msgstr ""

#. type: Content of: <html><body><div><p><p><p>
#: sedout/rowvalue.html:448
msgid ""
"<small><i>This page last modified on <a "
"href=\"https://sqlite.org/docsrc/honeypot\" id=\"mtimelink\" "
"data-href=\"https://sqlite.org/docsrc/finfo/pages/rowvalue.in?m=97d4d2b36b\">2022-04-18 "
"02:55:50</a> UTC </i></small>"
msgstr ""
