# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2023-03-16 09:24+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. type: Content of: <html><head><meta><meta><link><title>
#: sedout/nulls.html:6
msgid "NULL Handling in SQLite"
msgstr ""

#. type: Content of: <html><body><div><a>
#: sedout/nulls.html:11
msgid "<a href=\"index.html\">"
msgstr ""

#. type: Content of: <html><body><table><tr><th>
#: sedout/nulls.html:12 sedout/nulls.html:190
msgid "SQLite"
msgstr ""

#. type: Content of: <html><body><div><div>
#: sedout/nulls.html:16
msgid "Small. Fast. Reliable."
msgstr ""

#. type: Content of: <html><body><div><div><br>
#: sedout/nulls.html:16
msgid "Choose any three."
msgstr ""

#. type: Content of: <html><body><div><div><ul><li>
#: sedout/nulls.html:20
msgid "<a href=\"index.html\">Home</a>"
msgstr ""

#. type: Content of: <html><body><div><div><ul><li><li>
#: sedout/nulls.html:21
msgid "<a href=\"javascript:void(0)\" onclick='toggle_div(\"submenu\")'>Menu</a>"
msgstr ""

#. type: Content of: <html><body><div><div><ul><li>
#: sedout/nulls.html:22 sedout/nulls.html:34
msgid "<a href='about.html'>About</a>"
msgstr ""

#. type: Content of: <html><body><div><div><ul><li><li><li><li>
#: sedout/nulls.html:23
msgid "<a href=\"docs.html\">Documentation</a>"
msgstr ""

#. type: Content of: <html><body><div><div><ul><li><li><li><li><li>
#: sedout/nulls.html:24
msgid "<a href=\"download.html\">Download</a>"
msgstr ""

#. type: Content of: <html><body><div><div><ul><li><li><li><li><li><li>
#: sedout/nulls.html:25
msgid "<a href='copyright.html'>License</a>"
msgstr ""

#. type: Content of: <html><body><div><div><ul><li><li><li><li><li><li><li>
#: sedout/nulls.html:26
msgid "<a href=\"support.html\">Support</a>"
msgstr ""

#. type: Content of: <html><body><div><div><ul><li><li><li><li><li><li><li><li>
#: sedout/nulls.html:27
msgid "<a href=\"prosupport.html\">Purchase</a>"
msgstr ""

#. type: Content of: <html><body><div><div><ul><li><li><li><li><li><li><li><li><li>
#: sedout/nulls.html:29
msgid "<a href=\"javascript:void(0)\" onclick='toggle_search()'>Search</a>"
msgstr ""

#. type: Content of: <html><body><div><div><ul><li><li>
#: sedout/nulls.html:35
msgid "<a href='docs.html'>Documentation</a>"
msgstr ""

#. type: Content of: <html><body><div><div><ul><li><li><li>
#: sedout/nulls.html:36
msgid "<a href='download.html'>Download</a>"
msgstr ""

#. type: Content of: <html><body><div><div><ul><li><li><li><li>
#: sedout/nulls.html:37
msgid "<a href='support.html'>Support</a>"
msgstr ""

#. type: Content of: <html><body><div><div><ul><li><li><li><li><li>
#: sedout/nulls.html:38
msgid "<a href='prosupport.html'>Purchase</a>"
msgstr ""

#. type: Content of: <html><body><div><div><form><select>
#: sedout/nulls.html:43
msgid "<select name=\"s\" id=\"searchtype\">"
msgstr ""

#. type: Content of: <html><body><div><div><form><select><option>
#: sedout/nulls.html:44
msgid "Search Documentation"
msgstr ""

#. type: Content of: <html><body><div><div><form><select><option>
#: sedout/nulls.html:45
msgid "Search Changelog"
msgstr ""

#. type: Content of: <html><body><div><div><form>
#: sedout/nulls.html:46
msgid ""
"</select> <input type=\"text\" name=\"q\" id=\"searchbox\" value=\"\"/> "
"<input type=\"submit\" value=\"Go\"/>"
msgstr ""

#. type: Content of: <html><body><script>
#: sedout/nulls.html:53
msgid ""
"function toggle_div(nm) { var w = document.getElementById(nm); if( "
"w.style.display==\"block\" ){ w.style.display = \"none\"; }else{ "
"w.style.display = \"block\"; } } function toggle_search() { var w = "
"document.getElementById(\"searchmenu\"); if( w.style.display==\"block\" ){ "
"w.style.display = \"none\"; } else { w.style.display = \"block\"; "
"setTimeout(function(){ document.getElementById(\"searchbox\").focus()  }, "
"30); } } function "
"div_off(nm){document.getElementById(nm).style.display=\"none\";} "
"window.onbeforeunload = function(e){div_off(\"submenu\");} /* Disable the "
"Search feature if we are not operating from CGI, since */ /* Search is "
"accomplished using CGI and will not work without it. */ if( !location.origin "
"|| !location.origin.match || !location.origin.match(/http/) ){ "
"document.getElementById(\"search_menubutton\").style.display = \"none\"; } "
"/* Used by the Hide/Show button beside syntax diagrams, to toggle the */ "
"function hideorshow(btn,obj){ var x = document.getElementById(obj); var b = "
"document.getElementById(btn); if( x.style.display!='none' ){ x.style.display "
"= 'none'; b.innerHTML='show'; }else{ x.style.display = ''; "
"b.innerHTML='hide'; } return false; } var antiRobot = 0; function "
"antiRobotGo(){ if( antiRobot!=3 ) return; antiRobot = 7; var j = "
"document.getElementById(\"mtimelink\"); if(j && "
"j.hasAttribute(\"data-href\")) j.href=j.getAttribute(\"data-href\"); } "
"function antiRobotDefense(){ document.body.onmousedown=function(){ antiRobot "
"|= 2; antiRobotGo(); document.body.onmousedown=null; } "
"document.body.onmousemove=function(){ antiRobot |= 2; antiRobotGo(); "
"document.body.onmousemove=null; } setTimeout(function(){ antiRobot |= 1; "
"antiRobotGo(); }, 100)  antiRobotGo(); } antiRobotDefense();"
msgstr ""

#. type: Content of: <html><body><h2>
#: sedout/nulls.html:120
msgid "NULL Handling in SQLite Versus Other Database Engines"
msgstr ""

#. type: Content of: <html><body><p>
#: sedout/nulls.html:123
msgid ""
"The goal is to make SQLite handle NULLs in a standards-compliant way.  But "
"the descriptions in the SQL standards on how to handle NULLs seem "
"ambiguous.  It is not clear from the standards documents exactly how NULLs "
"should be handled in all circumstances."
msgstr ""

#. type: Content of: <html><body><p>
#: sedout/nulls.html:132
msgid ""
"So instead of going by the standards documents, various popular SQL engines "
"were tested to see how they handle NULLs.  The idea was to make SQLite work "
"like all the other engines.  An SQL test script was developed and run by "
"volunteers on various SQL RDBMSes and the results of those tests were used "
"to deduce how each engine processed NULL values.  The original tests were "
"run in May of 2002.  A copy of the test script is found at the end of this "
"document."
msgstr ""

#. type: Content of: <html><body><p>
#: sedout/nulls.html:143
msgid ""
"SQLite was originally coded in such a way that the answer to all questions "
"in the chart below would be \"Yes\".  But the experiments run on other SQL "
"engines showed that none of them worked this way.  So SQLite was modified to "
"work the same as Oracle, PostgreSQL, and DB2.  This involved making NULLs "
"indistinct for the purposes of the SELECT DISTINCT statement and for the "
"UNION operator in a SELECT.  NULLs are still distinct in a UNIQUE column.  "
"This seems somewhat arbitrary, but the desire to be compatible with other "
"engines outweighed that objection."
msgstr ""

#. type: Content of: <html><body><p>
#: sedout/nulls.html:155
msgid ""
"It is possible to make SQLite treat NULLs as distinct for the purposes of "
"the SELECT DISTINCT and UNION.  To do so, one should change the value of the "
"NULL_ALWAYS_DISTINCT #define in the <tt>sqliteInt.h</tt> source file and "
"recompile."
msgstr ""

#. type: Content of: <html><body><blockquote><p>
#: sedout/nulls.html:163
msgid ""
"<i>Update 2003-07-13:</i> Since this document was originally written some of "
"the database engines tested have been updated and users have been kind "
"enough to send in corrections to the chart below.  The original data showed "
"a wide variety of behaviors, but over time the range of behaviors has "
"converged toward the PostgreSQL/Oracle model.  The only significant "
"difference is that Informix and MS-SQL both treat NULLs as indistinct in a "
"UNIQUE column."
msgstr ""

#. type: Content of: <html><body><blockquote><p>
#: sedout/nulls.html:174
msgid ""
"The fact that NULLs are distinct for UNIQUE columns but are indistinct for "
"SELECT DISTINCT and UNION continues to be puzzling.  It seems that NULLs "
"should be either distinct everywhere or nowhere.  And the SQL standards "
"documents suggest that NULLs should be distinct everywhere.  Yet as of this "
"writing, no SQL engine tested treats NULLs as distinct in a SELECT DISTINCT "
"statement or in a UNION."
msgstr ""

#. type: Content of: <html><body><p>
#: sedout/nulls.html:185
msgid "The following table shows the results of the NULL handling experiments."
msgstr ""

#. type: Content of: <html><body><table><tr><th>
#: sedout/nulls.html:189 sedout/nulls.html:274
msgid "&nbsp;&nbsp;"
msgstr ""

#. type: Content of: <html><body><table><tr><th>
#: sedout/nulls.html:191
msgid "PostgreSQL"
msgstr ""

#. type: Content of: <html><body><table><tr><th>
#: sedout/nulls.html:192
msgid "Oracle"
msgstr ""

#. type: Content of: <html><body><table><tr><th>
#: sedout/nulls.html:193
msgid "Informix"
msgstr ""

#. type: Content of: <html><body><table><tr><th>
#: sedout/nulls.html:194
msgid "DB2"
msgstr ""

#. type: Content of: <html><body><table><tr><th>
#: sedout/nulls.html:195
msgid "MS-SQL"
msgstr ""

#. type: Content of: <html><body><table><tr><th>
#: sedout/nulls.html:196
msgid "OCELOT"
msgstr ""

#. type: Content of: <html><body><table><tr><td>
#: sedout/nulls.html:199 sedout/nulls.html:282
msgid "Adding anything to null gives null"
msgstr ""

#. type: Content of: <html><body><table><tr><td>
#: sedout/nulls.html:200 sedout/nulls.html:201 sedout/nulls.html:202
#: sedout/nulls.html:203 sedout/nulls.html:204 sedout/nulls.html:205
#: sedout/nulls.html:206 sedout/nulls.html:209 sedout/nulls.html:210
#: sedout/nulls.html:211 sedout/nulls.html:212 sedout/nulls.html:213
#: sedout/nulls.html:214 sedout/nulls.html:215 sedout/nulls.html:218
#: sedout/nulls.html:219 sedout/nulls.html:220 sedout/nulls.html:224
#: sedout/nulls.html:245 sedout/nulls.html:246 sedout/nulls.html:247
#: sedout/nulls.html:248 sedout/nulls.html:249 sedout/nulls.html:250
#: sedout/nulls.html:251 sedout/nulls.html:254 sedout/nulls.html:255
#: sedout/nulls.html:256 sedout/nulls.html:257 sedout/nulls.html:258
#: sedout/nulls.html:259 sedout/nulls.html:260 sedout/nulls.html:263
#: sedout/nulls.html:264 sedout/nulls.html:265 sedout/nulls.html:266
#: sedout/nulls.html:267 sedout/nulls.html:268 sedout/nulls.html:269
#: sedout/nulls.html:283 sedout/nulls.html:284 sedout/nulls.html:285
#: sedout/nulls.html:286 sedout/nulls.html:287 sedout/nulls.html:290
#: sedout/nulls.html:291 sedout/nulls.html:292 sedout/nulls.html:293
#: sedout/nulls.html:294 sedout/nulls.html:297 sedout/nulls.html:298
#: sedout/nulls.html:299 sedout/nulls.html:318 sedout/nulls.html:319
#: sedout/nulls.html:320 sedout/nulls.html:321 sedout/nulls.html:325
#: sedout/nulls.html:326 sedout/nulls.html:327 sedout/nulls.html:328
#: sedout/nulls.html:329 sedout/nulls.html:333 sedout/nulls.html:334
#: sedout/nulls.html:335 sedout/nulls.html:336
msgid "Yes"
msgstr ""

#. type: Content of: <html><body><table><tr><td>
#: sedout/nulls.html:208 sedout/nulls.html:289
msgid "Multiplying null by zero gives null"
msgstr ""

#. type: Content of: <html><body><table><tr><td>
#: sedout/nulls.html:217 sedout/nulls.html:296
msgid "nulls are distinct in a UNIQUE column"
msgstr ""

#. type: Content of: <html><body><table><tr><td>
#: sedout/nulls.html:221 sedout/nulls.html:223 sedout/nulls.html:227
#: sedout/nulls.html:228 sedout/nulls.html:229 sedout/nulls.html:230
#: sedout/nulls.html:231 sedout/nulls.html:232 sedout/nulls.html:233
#: sedout/nulls.html:236 sedout/nulls.html:237 sedout/nulls.html:238
#: sedout/nulls.html:239 sedout/nulls.html:240 sedout/nulls.html:241
#: sedout/nulls.html:242 sedout/nulls.html:304 sedout/nulls.html:305
#: sedout/nulls.html:307 sedout/nulls.html:308 sedout/nulls.html:312
#: sedout/nulls.html:314 sedout/nulls.html:315 sedout/nulls.html:332
msgid "No"
msgstr ""

#. type: Content of: <html><body><table><tr><td>
#: sedout/nulls.html:222 sedout/nulls.html:300 sedout/nulls.html:301
msgid "(Note 4)"
msgstr ""

#. type: Content of: <html><body><table><tr><td>
#: sedout/nulls.html:226 sedout/nulls.html:303
msgid "nulls are distinct in SELECT DISTINCT"
msgstr ""

#. type: Content of: <html><body><table><tr><td>
#: sedout/nulls.html:235 sedout/nulls.html:310
msgid "nulls are distinct in a UNION"
msgstr ""

#. type: Content of: <html><body><table><tr><td>
#: sedout/nulls.html:244 sedout/nulls.html:317
msgid "\"CASE WHEN null THEN 1 ELSE 0 END\" is 0?"
msgstr ""

#. type: Content of: <html><body><table><tr><td>
#: sedout/nulls.html:253 sedout/nulls.html:324
msgid "\"null OR true\" is true"
msgstr ""

#. type: Content of: <html><body><table><tr><td>
#: sedout/nulls.html:262 sedout/nulls.html:331
msgid "\"not (null AND false)\" is true"
msgstr ""

#. type: Content of: <html><body><table><tr><th>
#: sedout/nulls.html:275 sedout/nulls.html:276
msgid "MySQL"
msgstr ""

#. type: Content of: <html><body><table><tr><th><br>
#: sedout/nulls.html:275
msgid "3.23.41"
msgstr ""

#. type: Content of: <html><body><table><tr><th><br>
#: sedout/nulls.html:276
msgid "4.0.16"
msgstr ""

#. type: Content of: <html><body><table><tr><th>
#: sedout/nulls.html:277
msgid "Firebird"
msgstr ""

#. type: Content of: <html><body><table><tr><th>
#: sedout/nulls.html:278
msgid "SQL"
msgstr ""

#. type: Content of: <html><body><table><tr><th><br>
#: sedout/nulls.html:278
msgid "Anywhere"
msgstr ""

#. type: Content of: <html><body><table><tr><th>
#: sedout/nulls.html:279
msgid "Borland"
msgstr ""

#. type: Content of: <html><body><table><tr><th><br>
#: sedout/nulls.html:279
msgid "Interbase"
msgstr ""

#. type: Content of: <html><body><table><tr><td>
#: sedout/nulls.html:306 sedout/nulls.html:313
msgid "No (Note 1)"
msgstr ""

#. type: Content of: <html><body><table><tr><td>
#: sedout/nulls.html:311
msgid "(Note 3)"
msgstr ""

#. type: Content of: <html><body><table><tr><td>
#: sedout/nulls.html:322
msgid "(Note 5)"
msgstr ""

#. type: Content of: <html><body><table><tr><td>
#: sedout/nulls.html:342
msgid "Notes:&nbsp;&nbsp;"
msgstr ""

#. type: Content of: <html><body><table><tr><td>
#: sedout/nulls.html:343
msgid "1.&nbsp;"
msgstr ""

#. type: Content of: <html><body><table><tr><td>
#: sedout/nulls.html:344
msgid ""
"Older versions of firebird omit all NULLs from SELECT DISTINCT and from "
"UNION."
msgstr ""

#. type: Content of: <html><body><table><tr><td>
#: sedout/nulls.html:347
msgid "2.&nbsp;"
msgstr ""

#. type: Content of: <html><body><table><tr><td>
#: sedout/nulls.html:348
msgid "Test data unavailable."
msgstr ""

#. type: Content of: <html><body><table><tr><td>
#: sedout/nulls.html:350
msgid "3.&nbsp;"
msgstr ""

#. type: Content of: <html><body><table><tr><td>
#: sedout/nulls.html:351
msgid "MySQL version 3.23.41 does not support UNION."
msgstr ""

#. type: Content of: <html><body><table><tr><td>
#: sedout/nulls.html:353
msgid "4.&nbsp;"
msgstr ""

#. type: Content of: <html><body><table><tr><td>
#: sedout/nulls.html:354
msgid ""
"DB2, SQL Anywhere, and Borland Interbase do not allow NULLs in a UNIQUE "
"column."
msgstr ""

#. type: Content of: <html><body><table><tr><td>
#: sedout/nulls.html:357
msgid "5.&nbsp;"
msgstr ""

#. type: Content of: <html><body><table><tr><td>
#: sedout/nulls.html:358
msgid "Borland Interbase does not support CASE expressions."
msgstr ""

#. type: Content of: <html><body><br><p>
#: sedout/nulls.html:363
msgid "&nbsp;"
msgstr ""

#. type: Content of: <html><body><br><p>
#: sedout/nulls.html:365
msgid "The following script was used to gather information for the table above."
msgstr ""

#. type: Content of: <html><body><br><pre>
#: sedout/nulls.html:370
#, no-wrap
msgid ""
"-- I have about decided that SQL's treatment of NULLs is capricious and "
"cannot be\n"
"-- deduced by logic.  It must be discovered by experiment.  To that end, I "
"have \n"
"-- prepared the following script to test how various SQL databases deal with "
"NULL.\n"
"-- My aim is to use the information gathered from this script to make SQLite "
"as\n"
"-- much like other databases as possible.\n"
"--\n"
"-- If you could please run this script in your database engine and mail the "
"results\n"
"-- to me at drh@hwaci.com, that will be a big help.  Please be sure to "
"identify the\n"
"-- database engine you use for this test.  Thanks.\n"
"--\n"
"-- If you have to change anything to get this script to run with your "
"database\n"
"-- engine, please send your revised script together with your results.\n"
"--\n"
"\n"
"-- Create a test table with data\n"
"create table t1(a int, b int, c int);\n"
"insert into t1 values(1,0,0);\n"
"insert into t1 values(2,0,1);\n"
"insert into t1 values(3,1,0);\n"
"insert into t1 values(4,1,1);\n"
"insert into t1 values(5,null,0);\n"
"insert into t1 values(6,null,1);\n"
"insert into t1 values(7,null,null);\n"
"\n"
"-- Check to see what CASE does with NULLs in its test expressions\n"
"select a, case when b&lt;&gt;0 then 1 else 0 end from t1;\n"
"select a+10, case when not b&lt;&gt;0 then 1 else 0 end from t1;\n"
"select a+20, case when b&lt;&gt;0 and c"
msgstr ""

#. type: Content of: <html><body><br><pre><>
#: sedout/nulls.html:397
msgid "0 then 1 else 0 end from t1; select a+30, case when not (b&lt;&gt;0 and c"
msgstr ""

#. type: Content of: <html><body><br><pre><><>
#: sedout/nulls.html:398
msgid "0) then 1 else 0 end from t1; select a+40, case when b&lt;&gt;0 or c"
msgstr ""

#. type: Content of: <html><body><br><pre><><><>
#: sedout/nulls.html:399
msgid "0 then 1 else 0 end from t1; select a+50, case when not (b&lt;&gt;0 or c"
msgstr ""

#. type: Content of: <html><body><br><pre><><><><>
#: sedout/nulls.html:400
msgid ""
"0) then 1 else 0 end from t1; select a+60, case b when c then 1 else 0 end "
"from t1; select a+70, case c when b then 1 else 0 end from t1; -- What "
"happens when you multiply a NULL by zero? select a+80, b*0 from t1; select "
"a+90, b*c from t1; -- What happens to NULL for other operators? select "
"a+100, b+c from t1; -- Test the treatment of aggregate operators select "
"count(*), count(b), sum(b), avg(b), min(b), max(b) from t1; -- Check the "
"behavior of NULLs in WHERE clauses select a+110 from t1 where b&lt;10; "
"select a+120 from t1 where not b&gt;10; select a+130 from t1 where b&lt;10 "
"OR c=1; select a+140 from t1 where b&lt;10 AND c=1; select a+150 from t1 "
"where not (b&lt;10 AND c=1); select a+160 from t1 where not (c=1 AND "
"b&lt;10); -- Check the behavior of NULLs in a DISTINCT query select distinct "
"b from t1; -- Check the behavior of NULLs in a UNION query select b from t1 "
"union select b from t1; -- Create a new table with a unique column.  Check "
"to see if NULLs are considered -- to be distinct.  create table t2(a int, b "
"int unique); insert into t2 values(1,1); insert into t2 values(2,null); "
"insert into t2 values(3,null); select * from t2; drop table t1; drop table "
"t2;"
msgstr ""

#. type: Content of: <html><body><br><p>
#: sedout/nulls.html:439
msgid ""
"<small><i>This page last modified on <a "
"href=\"https://sqlite.org/docsrc/honeypot\" id=\"mtimelink\" "
"data-href=\"https://sqlite.org/docsrc/finfo/pages/nulls.in?m=fb46653cda\">2022-04-18 "
"02:55:50</a> UTC </i></small>"
msgstr ""
