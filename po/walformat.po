# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2023-03-16 19:17+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. type: Content of: <html><body><div><div><div>
#: sedout/walformat.html:6 sedout/walformat.html:121
msgid "WAL-mode File Format"
msgstr ""

#. type: Content of: <html><body><div><a>
#: sedout/walformat.html:11
msgid "<a href=\"index.html\">"
msgstr ""

#. type: Attribute 'alt' of: <html><body><div><a><img>
#: sedout/walformat.html:12
msgid "SQLite"
msgstr ""

#. type: Content of: <html><body><div><div>
#: sedout/walformat.html:16
msgid "Small. Fast. Reliable."
msgstr ""

#. type: Content of: <html><body><div><div><br>
#: sedout/walformat.html:16
msgid "Choose any three."
msgstr ""

#. type: Content of: <html><body><div><div><ul><li>
#: sedout/walformat.html:20
msgid "<a href=\"index.html\">Home</a>"
msgstr ""

#. type: Content of: <html><body><div><div><ul><li><li>
#: sedout/walformat.html:21
msgid "<a href=\"javascript:void(0)\" onclick='toggle_div(\"submenu\")'>Menu</a>"
msgstr ""

#. type: Content of: <html><body><div><div><ul><li>
#: sedout/walformat.html:22 sedout/walformat.html:34
msgid "<a href='about.html'>About</a>"
msgstr ""

#. type: Content of: <html><body><div><div><ul><li><li><li><li>
#: sedout/walformat.html:23
msgid "<a href=\"docs.html\">Documentation</a>"
msgstr ""

#. type: Content of: <html><body><div><div><ul><li><li><li><li><li>
#: sedout/walformat.html:24
msgid "<a href=\"download.html\">Download</a>"
msgstr ""

#. type: Content of: <html><body><div><div><ul><li><li><li><li><li><li>
#: sedout/walformat.html:25
msgid "<a href='copyright.html'>License</a>"
msgstr ""

#. type: Content of: <html><body><div><div><ul><li><li><li><li><li><li><li>
#: sedout/walformat.html:26
msgid "<a href=\"support.html\">Support</a>"
msgstr ""

#. type: Content of: <html><body><div><div><ul><li><li><li><li><li><li><li><li>
#: sedout/walformat.html:27
msgid "<a href=\"prosupport.html\">Purchase</a>"
msgstr ""

#. type: Content of: <html><body><div><div><ul><li><li><li><li><li><li><li><li><li>
#: sedout/walformat.html:29
msgid "<a href=\"javascript:void(0)\" onclick='toggle_search()'>Search</a>"
msgstr ""

#. type: Content of: <html><body><div><div><ul><li><li>
#: sedout/walformat.html:35
msgid "<a href='docs.html'>Documentation</a>"
msgstr ""

#. type: Content of: <html><body><div><div><ul><li><li><li>
#: sedout/walformat.html:36
msgid "<a href='download.html'>Download</a>"
msgstr ""

#. type: Content of: <html><body><div><div><ul><li><li><li><li>
#: sedout/walformat.html:37
msgid "<a href='support.html'>Support</a>"
msgstr ""

#. type: Content of: <html><body><div><div><ul><li><li><li><li><li>
#: sedout/walformat.html:38
msgid "<a href='prosupport.html'>Purchase</a>"
msgstr ""

#. type: Content of: <html><body><div><div><form><select>
#: sedout/walformat.html:43
msgid "<select name=\"s\" id=\"searchtype\">"
msgstr ""

#. type: Content of: <html><body><div><div><form><select><option>
#: sedout/walformat.html:44
msgid "Search Documentation"
msgstr ""

#. type: Content of: <html><body><div><div><form><select><option>
#: sedout/walformat.html:45
msgid "Search Changelog"
msgstr ""

#. type: Content of: <html><body><div><div><form>
#: sedout/walformat.html:46
msgid ""
"</select> <input type=\"text\" name=\"q\" id=\"searchbox\" value=\"\"/> "
"<input type=\"submit\" value=\"Go\"/>"
msgstr ""

#. type: Content of: <html><body><script>
#: sedout/walformat.html:53
msgid ""
"function toggle_div(nm) { var w = document.getElementById(nm); if( "
"w.style.display==\"block\" ){ w.style.display = \"none\"; }else{ "
"w.style.display = \"block\"; } } function toggle_search() { var w = "
"document.getElementById(\"searchmenu\"); if( w.style.display==\"block\" ){ "
"w.style.display = \"none\"; } else { w.style.display = \"block\"; "
"setTimeout(function(){ document.getElementById(\"searchbox\").focus()  }, "
"30); } } function "
"div_off(nm){document.getElementById(nm).style.display=\"none\";} "
"window.onbeforeunload = function(e){div_off(\"submenu\");} /* Disable the "
"Search feature if we are not operating from CGI, since */ /* Search is "
"accomplished using CGI and will not work without it. */ if( !location.origin "
"|| !location.origin.match || !location.origin.match(/http/) ){ "
"document.getElementById(\"search_menubutton\").style.display = \"none\"; } "
"/* Used by the Hide/Show button beside syntax diagrams, to toggle the */ "
"function hideorshow(btn,obj){ var x = document.getElementById(obj); var b = "
"document.getElementById(btn); if( x.style.display!='none' ){ x.style.display "
"= 'none'; b.innerHTML='show'; }else{ x.style.display = ''; "
"b.innerHTML='hide'; } return false; } var antiRobot = 0; function "
"antiRobotGo(){ if( antiRobot!=3 ) return; antiRobot = 7; var j = "
"document.getElementById(\"mtimelink\"); if(j && "
"j.hasAttribute(\"data-href\")) j.href=j.getAttribute(\"data-href\"); } "
"function antiRobotDefense(){ document.body.onmousedown=function(){ antiRobot "
"|= 2; antiRobotGo(); document.body.onmousedown=null; } "
"document.body.onmousemove=function(){ antiRobot |= 2; antiRobotGo(); "
"document.body.onmousemove=null; } setTimeout(function(){ antiRobot |= 1; "
"antiRobotGo(); }, 100)  antiRobotGo(); } antiRobotDefense();"
msgstr ""

#. type: Content of: <html><body><div><div><div>
#: sedout/walformat.html:124
msgid ""
"<a onclick=\"toggle_toc()\"> <span class=\"fancy_toc_mark\" "
"id=\"toc_mk\">&#x25ba;</span> Table Of Contents </a>"
msgstr ""

#. type: Content of: <html><body><div><div><div><div><div>
#: sedout/walformat.html:128
msgid "<a href=\"#files_on_disk\">1. Files On Disk</a>"
msgstr ""

#. type: Content of: <html><body><div><div><div><div><div>
#: sedout/walformat.html:129
msgid "<a href=\"#the_main_database_file\">1.1. The Main Database File</a>"
msgstr ""

#. type: Content of: <html><body><div><div><div><div><div>
#: sedout/walformat.html:130
msgid ""
"<a href=\"#the_write_ahead_log_or_wal_file\">1.2. The Write-Ahead-Log or "
"\"-wal\" File</a>"
msgstr ""

#. type: Content of: <html><body><div><div><div><div><div>
#: sedout/walformat.html:131
msgid ""
"<a href=\"#the_wal_index_or_shm_file\">1.3. The Wal-Index or \"-shm\" "
"file</a>"
msgstr ""

#. type: Content of: <html><body><div><div><div><div><div>
#: sedout/walformat.html:132
msgid "<a href=\"#file_lifecycles\">1.4. File Lifecycles</a>"
msgstr ""

#. type: Content of: <html><body><div><div><div><div><div>
#: sedout/walformat.html:133
msgid "<a href=\"#variations\">1.5. Variations</a>"
msgstr ""

#. type: Content of: <html><body><div><div><div><div><div>
#: sedout/walformat.html:134
msgid "<a href=\"#the_wal_index_file_format\">2. The WAL-Index File Format</a>"
msgstr ""

#. type: Content of: <html><body><div><div><div><div><div>
#: sedout/walformat.html:135
msgid "<a href=\"#the_wal_index_header\">2.1. The WAL-Index Header</a>"
msgstr ""

#. type: Content of: <html><body><div><div><div><div><div>
#: sedout/walformat.html:136
msgid "<a href=\"#the_mxframe_field\">2.1.1. The mxFrame field</a>"
msgstr ""

#. type: Content of: <html><body><div><div><div><div><div>
#: sedout/walformat.html:137
msgid "<a href=\"#the_nbackfill_field\">2.1.2. The nBackfill field</a>"
msgstr ""

#. type: Content of: <html><body><div><div><div><div><div>
#: sedout/walformat.html:138
msgid "<a href=\"#wal_locks\">2.1.3. WAL Locks</a>"
msgstr ""

#. type: Content of: <html><body><div><div><div><div><div>
#: sedout/walformat.html:139
msgid "<a href=\"#wal_index_hash_tables\">2.2. WAL-Index Hash Tables</a>"
msgstr ""

#. type: Content of: <html><body><div><div><div><div><div>
#: sedout/walformat.html:140
msgid "<a href=\"#locking_matrix\">2.3. Locking Matrix</a>"
msgstr ""

#. type: Content of: <html><body><div><div><div><div><div>
#: sedout/walformat.html:141
msgid ""
"<a href=\"#how_the_various_locks_are_used\">2.3.1. How the various locks are "
"used</a>"
msgstr ""

#. type: Content of: <html><body><div><div><div><div><div>
#: sedout/walformat.html:142
msgid ""
"<a "
"href=\"#operations_that_require_locks_and_which_locks_those_operations_use\">2.3.2. "
"Operations that require locks and which locks those operations use</a>"
msgstr ""

#. type: Content of: <html><body><div><div><div><div><div>
#: sedout/walformat.html:143
msgid "<a href=\"#recovery\">3. Recovery</a>"
msgstr ""

#. type: Content of: <html><body><div><div><script>
#: sedout/walformat.html:147
msgid ""
"function toggle_toc(){ var sub = document.getElementById(\"toc_sub\")  var "
"mk = document.getElementById(\"toc_mk\")  if( sub.style.display!=\"block\" "
"){ sub.style.display = \"block\"; mk.innerHTML = \"&#x25bc;\"; } else { "
"sub.style.display = \"none\"; mk.innerHTML = \"&#x25ba;\"; } }"
msgstr ""

#. type: Content of: <html><body><div><p>
#: sedout/walformat.html:165
msgid ""
"This document describes low-level details on how <a href=\"wal.html\">WAL "
"mode</a> is implemented on unix and windows."
msgstr ""

#. type: Content of: <html><body><div><p>
#: sedout/walformat.html:168
msgid ""
"The separate <a href=\"fileformat2.html\">file format</a> description "
"provides details on the structure of a database file and of the write-head "
"log file used in <a href=\"wal.html\">WAL mode</a>.  But details of the "
"locking protocol and of the format of the WAL-index are deliberately omitted "
"since those details are left to discretion of individual <a "
"href=\"vfs.html\">VFS</a> implementations.  This document fills in those "
"missing details for the unix and windows <a href=\"vfs.html\">VFSes</a>."
msgstr ""

#. type: Content of: <html><body><div><p>
#: sedout/walformat.html:175
msgid ""
"For completeness, some of the higher level formatting information contains "
"in the <a href=\"fileformat2.html\">file format</a> document and elsewhere "
"is replicated here, when it pertains to WAL mode processing."
msgstr ""

#. type: Content of: <html><body><div><h1>
#: sedout/walformat.html:179
msgid "<span>1. </span>Files On Disk"
msgstr ""

#. type: Content of: <html><body><div><p>
#: sedout/walformat.html:181
msgid ""
"When in active use, the state of a WAL mode database is described by three "
"separate files:"
msgstr ""

#. type: Content of: <html><body><div><p><ol><li>
#: sedout/walformat.html:185
msgid "The main database file with an arbitrary name \"X\"."
msgstr ""

#. type: Content of: <html><body><div><p><ol><li>
#: sedout/walformat.html:186
msgid "The write-ahead log file, usually named \"X-wal\"."
msgstr ""

#. type: Content of: <html><body><div><p><ol><li>
#: sedout/walformat.html:187
msgid "The wal-index file, usually named \"X-shm\"."
msgstr ""

#. type: Content of: <html><body><div><p><h2>
#: sedout/walformat.html:190
msgid "<span>1.1. </span>The Main Database File"
msgstr ""

#. type: Content of: <html><body><div><p><p>
#: sedout/walformat.html:192
msgid ""
"The format of the main database file is as described in the <a "
"href=\"fileformat2.html\">file format</a> document.  The <a "
"href=\"fileformat2.html#vnums\">file format version numbers</a> at offsets "
"18 and 19 into the main database must both be 2 to indicate that the "
"database is in WAL mode.  The main database may have an arbitrary name "
"allowed by the underlying filesystem.  No special file suffixes are "
"required, though \".db\", \".sqlite\", and \".sqlite3\" seem to be popular "
"choices."
msgstr ""

#. type: Content of: <html><body><div><p><h2>
#: sedout/walformat.html:200
msgid "<span>1.2. </span>The Write-Ahead-Log or \"-wal\" File"
msgstr ""

#. type: Content of: <html><body><div><p><p>
#: sedout/walformat.html:201
msgid ""
"The write-ahead log or \"wal\" file is a roll-forward journal that records "
"transactions that have been committed but not yet applied to the main "
"database.  Details on the format of the wal file are describe in the <a "
"href=\"fileformat2.html#walformat\">WAL format</a> subsection of the main <a "
"href=\"fileformat2.html\">file format</a> document.  The wal file is named "
"by appending the four characters \"-wal\" to the end of the name of the main "
"database file.  Except on 8+3 filesystems, such names are not allowed, and "
"in that case the file suffix is changed to \".WAL\".  But as 8+3 filesystems "
"are increasingly rare, that exceptional case can usually be ignored.  <a "
"name=\"shm\"></a>"
msgstr ""

#. type: Content of: <html><body><div><p><h2>
#: sedout/walformat.html:213
msgid "<span>1.3. </span>The Wal-Index or \"-shm\" file"
msgstr ""

#. type: Content of: <html><body><div><p><p>
#: sedout/walformat.html:214
msgid ""
"The wal-index file or \"shm\" file is not actually used as a file.  Rather, "
"individual database clients mmap the shm file and use it as shared memory "
"for coordinating access to the database and as a cache for quickly locating "
"frame within the wal file.  The name of the shm file is the main database "
"file name with the four characters \"-shm\" appended.  Or, for 8+3 "
"filesystems, the shm file is the main database file with the suffix changed "
"to \".SHM\"."
msgstr ""

#. type: Content of: <html><body><div><p><p>
#: sedout/walformat.html:222
msgid ""
"The shm does not contain any database content and is not required to recover "
"the database following a crash.  For that reason, the first client to "
"connect to a quiescent database will normally truncate the shm file if it "
"exists.  Since the content of the shm file does not need to be preserved "
"across a crash, the shm file is never fsync()-ed to disk.  In fact, if there "
"were a mechanism by which SQLite could tell the operating system to never "
"persist the shm file to disk but always hold it in cache memory, SQLite "
"would use that mechanism to avoid any unnecessary disk I/O associated with "
"the shm file.  However, no such mechanism exists in standard posix."
msgstr ""

#. type: Content of: <html><body><div><p><p>
#: sedout/walformat.html:233
msgid ""
"Because the shm is only used to coordinate access between concurrent "
"clients, the shm file is omitted if <a "
"href=\"pragma.html#pragma_locking_mode\">exclusive locking mode</a> is set, "
"as an optimization.  When <a "
"href=\"pragma.html#pragma_locking_mode\">exclusive locking mode</a> is set, "
"SQLite uses heap memory in place of the memory-mapped shm file."
msgstr ""

#. type: Content of: <html><body><div><p><h2>
#: sedout/walformat.html:238
msgid "<span>1.4. </span>File Lifecycles"
msgstr ""

#. type: Content of: <html><body><div><p><p>
#: sedout/walformat.html:240
msgid ""
"When a WAL mode database is in active use, all three of the above files "
"usually exist.  Except, the Wal-Index file is omitted if <a "
"href=\"pragma.html#pragma_locking_mode\">exclusive locking mode</a> is set."
msgstr ""

#. type: Content of: <html><body><div><p><p>
#: sedout/walformat.html:244
msgid ""
"If the last client using the database shuts down cleanly by calling <a "
"href=\"c3ref/close.html\">sqlite3_close()</a>, then a <a "
"href=\"wal.html#ckpt\">checkpoint</a> is run automatically in order to "
"transfer all information from the wal file over into the main database, and "
"both the shm file and the wal file are unlinked.  Thus, when the database is "
"not in use by any client, it is usually the case that only the main database "
"file exists on disk.  However, if the last client did not call <a "
"href=\"c3ref/close.html\">sqlite3_close()</a> before it shut down, or if the "
"last client to disconnect was a read-only client, then the final cleanup "
"operation does not occur and the shm and wal files may still exist on disk "
"even when the database is not in use."
msgstr ""

#. type: Content of: <html><body><div><p><h2>
#: sedout/walformat.html:257
msgid "<span>1.5. </span>Variations"
msgstr ""

#. type: Content of: <html><body><div><p><p>
#: sedout/walformat.html:259
msgid ""
"When <a href=\"pragma.html#pragma_locking_mode\">PRAGMA "
"locking_mode=EXCLUSIVE</a> (exclusive locking mode) is set, only a single "
"client is allowed to have the database open at one time.  Since only a "
"single client can use the database, the shm file is omitted.  The single "
"client uses a buffer in heap memory as a substitute for the memory-mapped "
"shm file."
msgstr ""

#. type: Content of: <html><body><div><p><p>
#: sedout/walformat.html:265
msgid ""
"If a read/write client invokes <a "
"href=\"c3ref/file_control.html\">sqlite3_file_control</a>(<a "
"href=\"c3ref/c_fcntl_begin_atomic_write.html#sqlitefcntlpersistwal\">SQLITE_FCNTL_PERSIST_WAL</a>) "
"prior to shutdown, then at shutdown a checkpoint is still run, but the shm "
"file and wal file are not deleted.  This allows subsequent read-only clients "
"to connect to and read the database.  <a name=\"walidxfmt\"></a>"
msgstr ""

#. type: Content of: <html><body><div><p><h1>
#: sedout/walformat.html:274
msgid "<span>2. </span>The WAL-Index File Format"
msgstr ""

#. type: Content of: <html><body><div><p><p>
#: sedout/walformat.html:277
msgid ""
"The WAL-index or \"shm\" file is used to coordinate access to the database "
"by multiple clients, and as a cache to help clients quickly locate frames "
"within the wal file."
msgstr ""

#. type: Content of: <html><body><div><p><p>
#: sedout/walformat.html:282
msgid ""
"Because the shm file is not involved in recovery, the shm file does not need "
"to be machine byte-order independent.  Hence, numeric values in the shm file "
"are written in the native byte order of the host computer, rather than being "
"converted into a specific cross-platform byte order as is done with the main "
"database file and the wal file."
msgstr ""

#. type: Content of: <html><body><div><p><p>
#: sedout/walformat.html:289
msgid ""
"The shm file consists of one or more hash tables, where each hash table is "
"32768 bytes in size.  Except, a 136-byte header is carved out of the front "
"of the very first hash table, so the first hash table is only 32632 bytes in "
"size.  The total size of the shm file is always a multiple of 32768.  In "
"most cases, the total size of the shm file is exactly 32768 bytes.  The shm "
"file only needs to grow beyond a single hash table if when the wal file "
"grows very large (more than 4079 frames).  Since the default <a "
"href=\"c3ref/wal_autocheckpoint.html\">automatic checkpoint threshold</a> is "
"1000, WAL files rare reach the 4079 threshold needed to make the shm file "
"grow."
msgstr ""

#. type: Content of: <html><body><div><p><h2>
#: sedout/walformat.html:300
msgid "<span>2.1. </span>The WAL-Index Header"
msgstr ""

#. type: Content of: <html><body><div><p><p>
#: sedout/walformat.html:302
msgid ""
"The first 136 bytes of the shm file are a header.  The shm header has three "
"main divisions as follows:"
msgstr ""

#. type: Content of: <html><body><div><p><center>
#: sedout/walformat.html:306
msgid "<i>WAL-Index Header Divisions</i>"
msgstr ""

#. type: Content of: <html><body><div><p><center><br><table><tr><th>
#: sedout/walformat.html:308 sedout/walformat.html:327
msgid "Bytes"
msgstr ""

#. type: Content of: <html><body><div><p><center><br><table><tr><th>
#: sedout/walformat.html:308
msgid "Description"
msgstr ""

#. type: Content of: <html><body><div><p><center><br><table><tr><td>
#: sedout/walformat.html:309
msgid "0..47"
msgstr ""

#. type: Content of: <html><body><div><p><center><br><table><tr><td>
#: sedout/walformat.html:309
msgid "First copy of the WAL Index Information"
msgstr ""

#. type: Content of: <html><body><div><p><center><br><table><tr><td>
#: sedout/walformat.html:310 sedout/walformat.html:377
msgid "48..95"
msgstr ""

#. type: Content of: <html><body><div><p><center><br><table><tr><td>
#: sedout/walformat.html:310
msgid "Second copy of the WAL Index Information"
msgstr ""

#. type: Content of: <html><body><div><p><center><br><table><tr><td>
#: sedout/walformat.html:311
msgid "96..135"
msgstr ""

#. type: Content of: <html><body><div><p><center><br><table><tr><td>
#: sedout/walformat.html:311
msgid "Checkpoint Information and Locks"
msgstr ""

#. type: Content of: <html><body><div><p><p>
#: sedout/walformat.html:315
msgid ""
"Individual fields of the shm header, except for the salt values copied from "
"the WAL header, are unsigned integers in the native byte-order of the host "
"machine.  The salt values are exact copies from the WAL header and are in "
"whatever byte order is used by the WAL file.  The size of integers may be 8, "
"16, 32, or 64 bits.  A detailed breakout of the individual fields of the shm "
"header follows:"
msgstr ""

#. type: Content of: <html><body><div><p><center>
#: sedout/walformat.html:325
msgid "<i>WAL-Index Header Details</i>"
msgstr ""

#. type: Content of: <html><body><div><p><center><br><table><tr><th>
#: sedout/walformat.html:327 sedout/walformat.html:463
msgid "Name"
msgstr ""

#. type: Content of: <html><body><div><p><center><br><table><tr><th>
#: sedout/walformat.html:327
msgid "Meaning"
msgstr ""

#. type: Content of: <html><body><div><p><center><br><table><tr><td>
#: sedout/walformat.html:329
msgid "0..3"
msgstr ""

#. type: Content of: <html><body><div><p><center><br><table><tr><td>
#: sedout/walformat.html:329
msgid "iVersion"
msgstr ""

#. type: Content of: <html><body><div><p><center><br><table><tr><td>
#: sedout/walformat.html:330
msgid "The WAL-index format version number.  Always 3007000."
msgstr ""

#. type: Content of: <html><body><div><p><center><br><table><tr><td>
#: sedout/walformat.html:333
msgid "4..7"
msgstr ""

#. type: Content of: <html><body><div><p><center><br><table><tr><td>
#: sedout/walformat.html:333 sedout/walformat.html:377
#: sedout/walformat.html:390 sedout/walformat.html:399
msgid "&nbsp;"
msgstr ""

#. type: Content of: <html><body><div><p><center><br><table><tr><td>
#: sedout/walformat.html:334
msgid "Unused padding space.  Must be zero."
msgstr ""

#. type: Content of: <html><body><div><p><center><br><table><tr><td>
#: sedout/walformat.html:337
msgid "8..11"
msgstr ""

#. type: Content of: <html><body><div><p><center><br><table><tr><td>
#: sedout/walformat.html:337
msgid "iChange"
msgstr ""

#. type: Content of: <html><body><div><p><center><br><table><tr><td>
#: sedout/walformat.html:338
msgid "Unsigned integer counter, incremented with each transaction"
msgstr ""

#. type: Content of: <html><body><div><p><center><br><table><tr><td>
#: sedout/walformat.html:341
msgid "12"
msgstr ""

#. type: Content of: <html><body><div><p><center><br><table><tr><td>
#: sedout/walformat.html:341
msgid "isInit"
msgstr ""

#. type: Content of: <html><body><div><p><center><br><table><tr><td>
#: sedout/walformat.html:342
msgid "The \"isInit\" flag.  1 when the shm file has been initialized."
msgstr ""

#. type: Content of: <html><body><div><p><center><br><table><tr><td>
#: sedout/walformat.html:345
msgid "13"
msgstr ""

#. type: Content of: <html><body><div><p><center><br><table><tr><td>
#: sedout/walformat.html:345
msgid "bigEndCksum"
msgstr ""

#. type: Content of: <html><body><div><p><center><br><table><tr><td>
#: sedout/walformat.html:346
msgid ""
"True if the WAL file uses big-ending checksums.  0 if the WAL uses "
"little-endian checksums."
msgstr ""

#. type: Content of: <html><body><div><p><center><br><table><tr><td>
#: sedout/walformat.html:350
msgid "14..15"
msgstr ""

#. type: Content of: <html><body><div><p><center><br><table><tr><td>
#: sedout/walformat.html:350
msgid "szPage"
msgstr ""

#. type: Content of: <html><body><div><p><center><br><table><tr><td>
#: sedout/walformat.html:351
msgid "The database page size in bytes, or 1 if the page size is 65536."
msgstr ""

#. type: Content of: <html><body><div><p><center><br><table><tr><td>
#: sedout/walformat.html:354
msgid "16..19"
msgstr ""

#. type: Content of: <html><body><div><p><center><br><table><tr><td>
#: sedout/walformat.html:354
msgid "mxFrame"
msgstr ""

#. type: Content of: <html><body><div><p><center><br><table><tr><td>
#: sedout/walformat.html:355
msgid "Number of valid and committed frames in the WAL file."
msgstr ""

#. type: Content of: <html><body><div><p><center><br><table><tr><td>
#: sedout/walformat.html:358
msgid "20..23"
msgstr ""

#. type: Content of: <html><body><div><p><center><br><table><tr><td>
#: sedout/walformat.html:358
msgid "nPage"
msgstr ""

#. type: Content of: <html><body><div><p><center><br><table><tr><td>
#: sedout/walformat.html:359
msgid "Size of the database file in pages."
msgstr ""

#. type: Content of: <html><body><div><p><center><br><table><tr><td>
#: sedout/walformat.html:362
msgid "24..31"
msgstr ""

#. type: Content of: <html><body><div><p><center><br><table><tr><td>
#: sedout/walformat.html:362
msgid "aFrameCksum"
msgstr ""

#. type: Content of: <html><body><div><p><center><br><table><tr><td>
#: sedout/walformat.html:363
msgid "Checksum of the last frame in the WAL file."
msgstr ""

#. type: Content of: <html><body><div><p><center><br><table><tr><td>
#: sedout/walformat.html:366
msgid "32..39"
msgstr ""

#. type: Content of: <html><body><div><p><center><br><table><tr><td>
#: sedout/walformat.html:366
msgid "aSalt"
msgstr ""

#. type: Content of: <html><body><div><p><center><br><table><tr><td>
#: sedout/walformat.html:367
msgid ""
"The two salt value copied from the WAL file header.  These values are in the "
"byte-order of the WAL file, which might be different from the native "
"byte-order of the machine."
msgstr ""

#. type: Content of: <html><body><div><p><center><br><table><tr><td>
#: sedout/walformat.html:373
msgid "40..47"
msgstr ""

#. type: Content of: <html><body><div><p><center><br><table><tr><td>
#: sedout/walformat.html:373
msgid "aCksum"
msgstr ""

#. type: Content of: <html><body><div><p><center><br><table><tr><td>
#: sedout/walformat.html:374
msgid "A checksum over bytes 0 through 39 of this header."
msgstr ""

#. type: Content of: <html><body><div><p><center><br><table><tr><td>
#: sedout/walformat.html:378
msgid "A copy of bytes 0 through 47 of this header."
msgstr ""

#. type: Content of: <html><body><div><p><center><br><table><tr><td>
#: sedout/walformat.html:381
msgid "96..99"
msgstr ""

#. type: Content of: <html><body><div><p><center><br><table><tr><td>
#: sedout/walformat.html:381
msgid "nBackfill"
msgstr ""

#. type: Content of: <html><body><div><p><center><br><table><tr><td>
#: sedout/walformat.html:382
msgid ""
"Number of WAL frames that have already been backfilled into the database by "
"prior checkpoints"
msgstr ""

#. type: Content of: <html><body><div><p><center><br><table><tr><td>
#: sedout/walformat.html:386
msgid "100..119"
msgstr ""

#. type: Content of: <html><body><div><p><center><br><table><tr><td>
#: sedout/walformat.html:386
msgid "read-mark&#91;0..4&#93;"
msgstr ""

#. type: Content of: <html><body><div><p><center><br><table><tr><td>
#: sedout/walformat.html:387
msgid "Five \"read marks\".  Each read mark is a 32-bit unsigned integer (4 bytes)."
msgstr ""

#. type: Content of: <html><body><div><p><center><br><table><tr><td>
#: sedout/walformat.html:390
msgid "120..127"
msgstr ""

#. type: Content of: <html><body><div><p><center><br><table><tr><td>
#: sedout/walformat.html:391
msgid "Unused space set aside for 8 file locks."
msgstr ""

#. type: Content of: <html><body><div><p><center><br><table><tr><td>
#: sedout/walformat.html:394
msgid "128..132"
msgstr ""

#. type: Content of: <html><body><div><p><center><br><table><tr><td>
#: sedout/walformat.html:394
msgid "nBackfillAttempted"
msgstr ""

#. type: Content of: <html><body><div><p><center><br><table><tr><td>
#: sedout/walformat.html:395
msgid ""
"Number of WAL frames that have attempted to be backfilled but which might "
"not have been backfilled successfully."
msgstr ""

#. type: Content of: <html><body><div><p><center><br><table><tr><td>
#: sedout/walformat.html:399
msgid "132..136"
msgstr ""

#. type: Content of: <html><body><div><p><center><br><table><tr><td>
#: sedout/walformat.html:400
msgid "Unused space reserved for further expansion."
msgstr ""

#. type: Content of: <html><body><div><p>
#: sedout/walformat.html:405
msgid "<a name=\"mxframe\"></a>"
msgstr ""

#. type: Content of: <html><body><div><p><h3>
#: sedout/walformat.html:407
msgid "<span>2.1.1. </span>The mxFrame field"
msgstr ""

#. type: Content of: <html><body><div><p><p>
#: sedout/walformat.html:409
msgid ""
"The 32-bit unsigned integer at offset 16 (and repeated at offset 64)  is the "
"number of valid frames in the WAL.  Because WAL frame are numbered starting "
"with 1, mxFrame is also the index of the last valid commit frame in the "
"WAL. A commit frame is a frame that has a non-zero \"size of database\" "
"value in bytes 4 through 7 of the frame header, and that indicates the end "
"of a transaction."
msgstr ""

#. type: Content of: <html><body><div><p><p>
#: sedout/walformat.html:416
msgid ""
"When mxFrame field is zero, it indicates that the WAL is empty and that all "
"content should be obtained directly from the database file."
msgstr ""

#. type: Content of: <html><body><div><p><p>
#: sedout/walformat.html:419
msgid ""
"When mxFrame is equal to <a href=\"walformat.html#nbackfill\">nBackfill</a>, "
"that indicates that all content in the WAL has been written back into the "
"database.  In that case, all content can be read directly from the "
"database.  Furthermore, the next writer is free to <a "
"href=\"fileformat2.html#walreset\">reset the WAL</a> if no other connections "
"hold locks on WAL_READ_LOCK(N) for N>0."
msgstr ""

#. type: Content of: <html><body><div><p><p>
#: sedout/walformat.html:425
msgid ""
"The mxFrame value is always greater than or equal to both <a "
"href=\"walformat.html#nbackfill\">nBackfill</a> and nBackfillAttempted.  <a "
"name=\"nbackfill\"></a>"
msgstr ""

#. type: Content of: <html><body><div><p><h3>
#: sedout/walformat.html:431
msgid "<span>2.1.2. </span>The nBackfill field"
msgstr ""

#. type: Content of: <html><body><div><p><p>
#: sedout/walformat.html:433
msgid ""
"The 32-bit unsigned integer at offset 128 in the WAL-index header is called "
"the \"nBackfill\".  this field holds the number of frames in the WAL file "
"which have been copied back into the main database."
msgstr ""

#. type: Content of: <html><body><div><p><p>
#: sedout/walformat.html:438
msgid ""
"The nBackfill number is never greater than <a "
"href=\"walformat.html#mxframe\">mxFrame</a>.  When nBackfill equals <a "
"href=\"walformat.html#mxframe\">mxFrame</a>, that means that the WAL content "
"has been completely written back into the database and it is ok to <a "
"href=\"fileformat2.html#walreset\">reset the WAL</a> if there are no locks "
"held on any of WAL_READ_LOCK(N)  for N>0."
msgstr ""

#. type: Content of: <html><body><div><p><p>
#: sedout/walformat.html:444
msgid ""
"The nBackfill can only be increased while holding the WAL_CKPT_LOCK.  "
"However, nBackfill is changed to zero during a <a "
"href=\"fileformat2.html#walreset\">WAL reset</a>, and this happens while "
"holding the WAL_WRITE_LOCK.  <a name=\"locks\"></a>"
msgstr ""

#. type: Content of: <html><body><div><p><h3>
#: sedout/walformat.html:451
msgid "<span>2.1.3. </span>WAL Locks"
msgstr ""

#. type: Content of: <html><body><div><p><p>
#: sedout/walformat.html:453
msgid ""
"Eight bytes of space are set aside in the header to support file locking "
"using the xShmLock() method in the <a "
"href=\"c3ref/io_methods.html\">sqlite3_io_methods</a> object.  These eight "
"bytes are never read nor written by SQLite since some VFSes (ex: Windows) "
"might implement locks using mandatory file locks."
msgstr ""

#. type: Content of: <html><body><div><p><p>
#: sedout/walformat.html:458
msgid "These are the eight locks supported:"
msgstr ""

#. type: Content of: <html><body><div><p><center>
#: sedout/walformat.html:461
msgid "<i>WAL-Index Locks Controlled By xShmLock()</i>"
msgstr ""

#. type: Content of: <html><body><div><p><center><br><table><tr><th>
#: sedout/walformat.html:463
msgid "Offset"
msgstr ""

#. type: Content of: <html><body><div><p><center><br><table><tr><th>
#: sedout/walformat.html:464
msgid "xShmLock"
msgstr ""

#. type: Content of: <html><body><div><p><center><br><table><tr><th>
#: sedout/walformat.html:464
msgid "File"
msgstr ""

#. type: Content of: <html><body><div><p><center><br><table><tr><td>
#: sedout/walformat.html:466
msgid "WAL_WRITE_LOCK"
msgstr ""

#. type: Content of: <html><body><div><p><center><br><table><tr><td>
#: sedout/walformat.html:467
msgid "0"
msgstr ""

#. type: Content of: <html><body><div><p><center><br><table><tr><td>
#: sedout/walformat.html:468
msgid "120"
msgstr ""

#. type: Content of: <html><body><div><p><center><br><table><tr><td>
#: sedout/walformat.html:472
msgid "WAL_CKPT_LOCK"
msgstr ""

#. type: Content of: <html><body><div><p><center><br><table><tr><td>
#: sedout/walformat.html:473
msgid "1"
msgstr ""

#. type: Content of: <html><body><div><p><center><br><table><tr><td>
#: sedout/walformat.html:474
msgid "121"
msgstr ""

#. type: Content of: <html><body><div><p><center><br><table><tr><td>
#: sedout/walformat.html:478
msgid "WAL_RECOVER_LOCK"
msgstr ""

#. type: Content of: <html><body><div><p><center><br><table><tr><td>
#: sedout/walformat.html:479
msgid "2"
msgstr ""

#. type: Content of: <html><body><div><p><center><br><table><tr><td>
#: sedout/walformat.html:480
msgid "122"
msgstr ""

#. type: Content of: <html><body><div><p><p><p><p><ul><li><center><table><tr><td>
#: sedout/walformat.html:484 sedout/walformat.html:742
msgid "WAL_READ_LOCK(0)"
msgstr ""

#. type: Content of: <html><body><div><p><center><br><table><tr><td>
#: sedout/walformat.html:485
msgid "3"
msgstr ""

#. type: Content of: <html><body><div><p><p><p><p><ul><li><center><table><tr><td>
#: sedout/walformat.html:486 sedout/walformat.html:742
msgid "123"
msgstr ""

#. type: Content of: <html><body><div><p><p><p><p><ul><li><center><table><tr><td>
#: sedout/walformat.html:490 sedout/walformat.html:743
msgid "WAL_READ_LOCK(1)"
msgstr ""

#. type: Content of: <html><body><div><p><center><br><table><tr><td>
#: sedout/walformat.html:491
msgid "4"
msgstr ""

#. type: Content of: <html><body><div><p><p><p><p><ul><li><center><table><tr><td>
#: sedout/walformat.html:492 sedout/walformat.html:743
msgid "124"
msgstr ""

#. type: Content of: <html><body><div><p><p><p><p><ul><li><center><table><tr><td>
#: sedout/walformat.html:496 sedout/walformat.html:744
msgid "WAL_READ_LOCK(2)"
msgstr ""

#. type: Content of: <html><body><div><p><center><br><table><tr><td>
#: sedout/walformat.html:497
msgid "5"
msgstr ""

#. type: Content of: <html><body><div><p><p><p><p><ul><li><center><table><tr><td>
#: sedout/walformat.html:498 sedout/walformat.html:744
msgid "125"
msgstr ""

#. type: Content of: <html><body><div><p><p><p><p><ul><li><center><table><tr><td>
#: sedout/walformat.html:502 sedout/walformat.html:745
msgid "WAL_READ_LOCK(3)"
msgstr ""

#. type: Content of: <html><body><div><p><center><br><table><tr><td>
#: sedout/walformat.html:503
msgid "6"
msgstr ""

#. type: Content of: <html><body><div><p><p><p><p><ul><li><center><table><tr><td>
#: sedout/walformat.html:504 sedout/walformat.html:745
msgid "126"
msgstr ""

#. type: Content of: <html><body><div><p><p><p><p><ul><li><center><table><tr><td>
#: sedout/walformat.html:508 sedout/walformat.html:746
msgid "WAL_READ_LOCK(4)"
msgstr ""

#. type: Content of: <html><body><div><p><center><br><table><tr><td>
#: sedout/walformat.html:509
msgid "7"
msgstr ""

#. type: Content of: <html><body><div><p><p><p><p><ul><li><center><table><tr><td>
#: sedout/walformat.html:510 sedout/walformat.html:746
msgid "127"
msgstr ""

#. type: Content of: <html><body><div><p><p>
#: sedout/walformat.html:517
msgid "<i>TBD: More information about the header</i>"
msgstr ""

#. type: Content of: <html><body><div><p><h2>
#: sedout/walformat.html:519
msgid "<span>2.2. </span>WAL-Index Hash Tables"
msgstr ""

#. type: Content of: <html><body><div><p><p>
#: sedout/walformat.html:521
msgid ""
"The hash tables in the shm file are designed to answer the following "
"question quickly:"
msgstr ""

#. type: Content of: <html><body><div><p><blockquote>
#: sedout/walformat.html:524
msgid ""
"<i> FindFrame(P,M): Given a page number P and a maximum WAL frame index M, "
"return the largest WAL frame index for page P that does not exceed M, or "
"return NULL if there are no frames for page P that do not exceed M.  </i>"
msgstr ""

#. type: Content of: <html><body><div><p><p>
#: sedout/walformat.html:532
msgid ""
"Let the datatypes \"u8\", \"u16\", and \"u32\" mean unsigned integers of "
"length 8, 16, and 32 bits, respectively.  Then, the first 32768-byte unit of "
"the shm file is organized as follows:"
msgstr ""

#. type: Content of: <html><body><div><p><blockquote><pre>
#: sedout/walformat.html:537
#, no-wrap
msgid ""
"u8 aWalIndexHeader[136];\n"
"u32 aPgno[4062];\n"
"u16 aHash[8192];\n"
msgstr ""

#. type: Content of: <html><body><div><p><p>
#: sedout/walformat.html:542
msgid ""
"The second and all subsequent 32768-byte units of the shm file are like "
"this:"
msgstr ""

#. type: Content of: <html><body><div><p><blockquote><pre>
#: sedout/walformat.html:546
#, no-wrap
msgid ""
"u32 aPgno[4096];\n"
"u16 aHash[8192];\n"
msgstr ""

#. type: Content of: <html><body><div><p><p>
#: sedout/walformat.html:550
msgid ""
"Collectively, the aPgno entries record the database page number stored in "
"all frames of the WAL file.  The aPgno[0] entry on the first hash table "
"records the database page number stored in the very first frame in the WAL "
"file. The aPgno[i] entry from the first hash table is the database page "
"number for the i-th frame in the WAL file.  The aPgno[k] entry for the "
"second hash table is the database page number for the (k+4062)-th frame in "
"the WAL file.  The aPgno[k] entry for the n-th 32768-byte hash table in the "
"shm file (for n>1) holds the database page number stored in the "
"(k+4062+4096*(n-2))-th frame of the WAL file."
msgstr ""

#. type: Content of: <html><body><div><p><p>
#: sedout/walformat.html:560
msgid ""
"Here is a slightly different way to describe the aPgno values: If you think "
"of all aPgno values as a contiguous array, then the database page number "
"stored in the i-th frame of the WAL file is stored in aPgno[i].  Of course, "
"aPgno is not a contiguous array.  The first 4062 entries are on the first "
"32768-byte unit of the shm file and subsequent values are in 4096 entry "
"chunks in later units of the shm file."
msgstr ""

#. type: Content of: <html><body><div><p><p>
#: sedout/walformat.html:568
msgid ""
"One way to compute FindFrame(P,M) would be to scan the aPgno array starting "
"with the M-th entry and working backwards towards the beginning and return J "
"where aPgno[J]==P.  Such an algorithm would work, and it would be faster "
"than searching the whole WAL file for the latest frame with page number P.  "
"But the search can be made much faster still by using the aHash structure."
msgstr ""

#. type: Content of: <html><body><div><p><p>
#: sedout/walformat.html:575
msgid ""
"A database page number P is mapped into a hash value using the following "
"hash function:"
msgstr ""

#. type: Content of: <html><body><div><p><blockquote>
#: sedout/walformat.html:579
msgid "h = (P * 383)%8192"
msgstr ""

#. type: Content of: <html><body><div><p><p>
#: sedout/walformat.html:582
msgid ""
"This function maps every page number into an integer between 0 and 8191 "
"inclusive.  The aHash field of each 32768-byte shm file unit maps P values "
"into indexes of the aPgno field of the same unit as follows:"
msgstr ""

#. type: Content of: <html><body><div><p><p><ol><li>
#: sedout/walformat.html:588
msgid "Compute the hash value: h = P * 383"
msgstr ""

#. type: Content of: <html><body><div><p><p><ol><li>
#: sedout/walformat.html:589
msgid ""
"Let X be the largest set of consecutive integers {h, h+1, h+2, ..., h+N} "
"such that for every j in X, aPgno&#91;j%8192]!=0.  The X set will be empty "
"if aPgno&#91;h%8192]==0.  The X set is easily computed by starting with the "
"value h%8192, and adding h%8192 to X and incrementing h until encountering "
"the first aPgno&#91;h%8192] entry that is zero."
msgstr ""

#. type: Content of: <html><body><div><p><p><ol><li>
#: sedout/walformat.html:594
msgid ""
"The set X contains the index in aPgno of every entry in the current "
"32768-byte unit of the shm file that might possible be a solution to the "
"FindFrame(P,M) function.  Each of these entries must be checked separately "
"to ensure that the aPgno value is P and that the frame number does not "
"exceed M.  The largest frame number that passes those two tests is the "
"answer."
msgstr ""

#. type: Content of: <html><body><div><p><p><p>
#: sedout/walformat.html:602
msgid ""
"Each entry in the aPgno array has a single corresponding entry in the aHash "
"array.  There are more available slots in aHash than there are in aPgno.  "
"The unused slots in aHash are filled with zero.  And since there are "
"guaranteed to be unused slots in aHash, that means the loop that computes X "
"is guaranteed to terminate.  The expected size of X is less than 2.  The "
"worst case is that X will be the same as the number of entries in aPgno, in "
"which case the algorithm runs at about the same speed as a linear scan of "
"aPgno.  But that worst case performance is exceedingly rare.  Usually, the "
"size of X will be small and the use of the aHash array allows one to compute "
"FindFrame(P,M) much faster."
msgstr ""

#. type: Content of: <html><body><div><p><p><p>
#: sedout/walformat.html:613
msgid ""
"Here is an alternative way of describing the hash look-up algorithm: Start "
"with h = (P * 383)%8192 and look at aHash[h] and subsequent entries, "
"wrapping around to zero when h reaches 8192, until finding an entry with "
"aHash[h]==0.  All aPgno entries having a page number of P will have an index "
"that is one of the aHash[h] values thusly computed.  But not all the "
"computed aHash[h] values will meet the matching criteria, so you must check "
"them independently.  The speed advantage comes about because normally this "
"set of h values is very small."
msgstr ""

#. type: Content of: <html><body><div><p><p><p>
#: sedout/walformat.html:623
msgid ""
"Note that each 32768-byte unit of the shm file has its own aHash and aPgno "
"arrays.  The aHash array for a single unit is only helpful in finding aPgno "
"entries in that same unit.  The overall FindFrame(P,M) function needs to do "
"hash lookups beginning with the latest unit and working backwards to the "
"oldest unit until it finds an answer."
msgstr ""

#. type: Content of: <html><body><div><p><p><h2>
#: sedout/walformat.html:629
msgid "<span>2.3. </span>Locking Matrix"
msgstr ""

#. type: Content of: <html><body><div><p><p><p>
#: sedout/walformat.html:631
msgid ""
"Access is coordinated in WAL mode using both the legacy DELETE-mode locks "
"controlled by the xLock and xUnlock methods of the <a "
"href=\"c3ref/io_methods.html\">sqlite3_io_methods</a> object and the WAL "
"locks controlled by the xShmLock method of the <a "
"href=\"c3ref/io_methods.html\">sqlite3_io_methods</a> object."
msgstr ""

#. type: Content of: <html><body><div><p><p><p>
#: sedout/walformat.html:636
msgid ""
"Conceptually, there is just a single DELETE-mode lock.  The DELETE-mode lock "
"for a single database connection can be in exactly one of the following "
"states:"
msgstr ""

#. type: Content of: <html><body><div><p><p><p><ol><li>
#: sedout/walformat.html:640
msgid "SQLITE_LOCK_NONE (unlocked)"
msgstr ""

#. type: Content of: <html><body><div><p><p><p><ol><li>
#: sedout/walformat.html:641
msgid "SQLITE_LOCK_SHARED (reading)"
msgstr ""

#. type: Content of: <html><body><div><p><p><p><ol><li>
#: sedout/walformat.html:642
msgid "SQLITE_LOCK_RESERVED (reading, waiting to write)"
msgstr ""

#. type: Content of: <html><body><div><p><p><p><ol><li>
#: sedout/walformat.html:643
msgid "SQLITE_LOCK_PENDING (new readers blocked, waiting to write)"
msgstr ""

#. type: Content of: <html><body><div><p><p><p><ol><li>
#: sedout/walformat.html:644
msgid "SQLITE_LOCK_EXCLUSIVE (writing)"
msgstr ""

#. type: Content of: <html><body><div><p><p><p><p>
#: sedout/walformat.html:646
msgid ""
"The DELETE-mode locks are stored on the <a "
"href=\"fileformat2.html#lockbyte\">lock-byte page</a> of the main database "
"file.  Only SQLITE_LOCK_SHARED and SQLITE_LOCK_EXCLUSIVE are factors for "
"WAL-mode databases.  The other locking states are used in rollback-mode, but "
"not in WAL-mode."
msgstr ""

#. type: Content of: <html><body><div><p><p><p><p>
#: sedout/walformat.html:652
msgid "The <a href=\"walformat.html#locks\">WAL-mode locks</a> are described above."
msgstr ""

#. type: Content of: <html><body><div><p><p><p><h3>
#: sedout/walformat.html:654
msgid "<span>2.3.1. </span>How the various locks are used"
msgstr ""

#. type: Content of: <html><body><div><p><p><p><p>
#: sedout/walformat.html:656
msgid "The following rules show how each of the locks is used."
msgstr ""

#. type: Content of: <html><body><div><p><p><p><p><ul><li>
#: sedout/walformat.html:659
msgid ""
"<b>SQLITE_LOCK_SHARED</b> All connections hold SQLITE_LOCK_SHARED "
"continuously while attached to a WAL-mode database.  This is true for both "
"read/write connections and read-only connections.  The SQLITE_LOCK_SHARED "
"lock is held even by connections that are not within transaction.  This is "
"different from rollback mode, where the SQLITE_LOCK_SHARED is released at "
"the end of each transaction."
msgstr ""

#. type: Content of: <html><body><div><p><p><p><p><ul><li>
#: sedout/walformat.html:669
msgid ""
"<b>SQLITE_LOCK_EXCLUSIVE</b> Connections hold an exclusive lock when change "
"in between WAL mode and any of the various rollback-modes.  Connections "
"might also attempt to obtain an EXCLUSIVE lock when they disconnect from WAL "
"mode.  If a connection is able to obtain an EXCLUSIVE lock, that means it is "
"the only connection to the database and so it may attempt to checkpoint and "
"then delete the WAL-index and WAL files.  When a connection is holding a "
"SHARED lock on the main database, that will prevent any other connection "
"from acquiring the EXCLUSIVE lock, which in turn prevents the WAL-index and "
"WAL files from being deleted out from under other users, and prevents a "
"transition out of WAL-mode while other users are accessing the database in "
"WAL-mode."
msgstr ""

#. type: Content of: <html><body><div><p><p><p><p><ul><li>
#: sedout/walformat.html:685
msgid ""
"<b>WAL_WRITE_LOCK</b> The WAL_WRITE_LOCK is only locked exclusively.  There "
"is never a shared lock taken on WAL_WRITE_LOCK.  An EXCLUSIVE WAL_WRITE_LOCK "
"is held by any connection that is appending content to the end of the WAL.  "
"Hence, only a single process at a time can append content to the WAL.  If a "
"<a href=\"fileformat2.html#walreset\">WAL reset</a> occurs as a consequence "
"of a write, then the <a href=\"walformat.html#nbackfill\">nBackfill</a> "
"field of the WAL-index header is reset to zero while holding this lock.  An "
"EXCLUSIVE is also held WAL_WRITE_LOCK, and on several other locking bytes, "
"when a connection is running <a "
"href=\"walformat.html#recovery\">recovery</a> on the shared WAL-index."
msgstr ""

#. type: Content of: <html><body><div><p><p><p><p><ul><li>
#: sedout/walformat.html:698
msgid ""
"<b>WAL_CKPT_LOCK</b> The WAL_CKPT_LOCK is only locked exclusively.  There is "
"never a shared lock taken on WAL_CKPT_LOCK.  An EXCLUSIVE WAL_CKPT_LOCK is "
"held by any connection that is running a <a "
"href=\"wal.html#ckpt\">checkpoint</a>.  The <a "
"href=\"walformat.html#nbackfill\">nBackfill</a> field of the WAL-index "
"header may be increased while holding this exclusive lock, but it may not be "
"decreased.  An EXCLUSIVE is also held WAL_CKPT_LOCK, and on several other "
"locking bytes, when a connection is running <a "
"href=\"walformat.html#recovery\">recovery</a> on the shared WAL-index."
msgstr ""

#. type: Content of: <html><body><div><p><p><p><p><ul><li>
#: sedout/walformat.html:709
msgid ""
"<b>WAL_RECOVER_LOCK</b> The WAL_RECOVER_LOCK is only locked exclusively.  "
"There is never a shared lock taken on WAL_RECOVER_LOCK.  An EXCLUSIVE "
"WAL_RECOVER_LOCK is held by any connection that is running <a "
"href=\"walformat.html#recovery\">recovery</a> to reconstruct the shared "
"WAL-index.  A read-only connection that is rebuilding its private "
"heap-memory WAL-index does not hold this lock.  (It cannot, since read-only "
"connections are not allowed to hold any exclusive locks.)  This lock is only "
"held when rebuilding the global shared WAL-index contained in the "
"memory-mapped SHM file.  In addition to locking this byte, a connection "
"running <a href=\"walformat.html#recovery\">recovery</a> also gets an "
"exclusive lock on all other WAL locks except for WAL_READ_LOCK(0)."
msgstr ""

#. type: Content of: <html><body><div><p><p><p><p><ul><li>
#: sedout/walformat.html:725
msgid ""
"<b>WAL_READ_LOCK(N)</b> There are five separate read locks, numbers 0 "
"through 4.  Read locks may be either SHARED or EXCLUSIVE.  Connections "
"obtain a shared lock on one of the read locks bytes while they are within a "
"transaction.  Connections also obtain an exclusive lock on read locks, one "
"at a time, for the brief moment while they are updating the values of the "
"corresponding read-marks.  Read locks 1 through 4 are held exclusively when "
"running <a href=\"walformat.html#recovery\">recovery</a>.  Each read lock "
"byte corresponds to one of the five 32-bit read-mark integers located in "
"bytes 100 through 119 of the WAL-index header, as follows:"
msgstr ""

#. type: Content of: <html><body><div><p><p><p><p><ul><li><center><table><tr><th>
#: sedout/walformat.html:741
msgid "Lock Name"
msgstr ""

#. type: Content of: <html><body><div><p><p><p><p><ul><li><center><table><tr><th>
#: sedout/walformat.html:741
msgid "Lock offset"
msgstr ""

#. type: Content of: <html><body><div><p><p><p><p><ul><li><center><table><tr><th>
#: sedout/walformat.html:741
msgid "Read-mark name"
msgstr ""

#. type: Content of: <html><body><div><p><p><p><p><ul><li><center><table><tr><th>
#: sedout/walformat.html:741
msgid "Read-mark offset"
msgstr ""

#. type: Content of: <html><body><div><p><p><p><p><ul><li><center><table><tr><td>
#: sedout/walformat.html:742
msgid "read-mark[0]"
msgstr ""

#. type: Content of: <html><body><div><p><p><p><p><ul><li><center><table><tr><td>
#: sedout/walformat.html:742
msgid "100..103"
msgstr ""

#. type: Content of: <html><body><div><p><p><p><p><ul><li><center><table><tr><td>
#: sedout/walformat.html:743
msgid "read-mark[1]"
msgstr ""

#. type: Content of: <html><body><div><p><p><p><p><ul><li><center><table><tr><td>
#: sedout/walformat.html:743
msgid "104..107"
msgstr ""

#. type: Content of: <html><body><div><p><p><p><p><ul><li><center><table><tr><td>
#: sedout/walformat.html:744
msgid "read-mark[2]"
msgstr ""

#. type: Content of: <html><body><div><p><p><p><p><ul><li><center><table><tr><td>
#: sedout/walformat.html:744
msgid "108..111"
msgstr ""

#. type: Content of: <html><body><div><p><p><p><p><ul><li><center><table><tr><td>
#: sedout/walformat.html:745
msgid "read-mark[3]"
msgstr ""

#. type: Content of: <html><body><div><p><p><p><p><ul><li><center><table><tr><td>
#: sedout/walformat.html:745
msgid "112..115"
msgstr ""

#. type: Content of: <html><body><div><p><p><p><p><ul><li><center><table><tr><td>
#: sedout/walformat.html:746
msgid "read-mark[4]"
msgstr ""

#. type: Content of: <html><body><div><p><p><p><p><ul><li><center><table><tr><td>
#: sedout/walformat.html:746
msgid "116..119"
msgstr ""

#. type: Content of: <html><body><div><p><p><p><p><ul><li>
#: sedout/walformat.html:750
msgid ""
"When a connection holds a shared lock on WAL_READ_LOCK(N), that is a promise "
"by the connection that it will use the WAL and not the database file for any "
"database pages that are modified by the first read-mark[N] entries in the "
"WAL.  The read-mark[0] is always zero.  If a connection holds a shared lock "
"on WAL_READ_LOCK(0), that means the connection expects to be able to ignore "
"the WAL and read any content it wants from the main database.  If N>0 then "
"the connection is free to use more of the WAL file beyond read-mark[N] if it "
"wants to, up to the first mxFrame frames.  But when a connection holds a "
"shared lock on WAL_READ_LOCK(0), that is a promise that it will never read "
"content from the WAL and will acquire all content directly from the main "
"database.  When a checkpoint runs, if it sees a lock on WAL_READ_LOCK(N), "
"then it must not move WAL content into the main database for more than the "
"first read-mark[N] frames.  Were it to do so, it would overwrite content "
"that the process holding the lock was expecting to be able to read out of "
"the main database file.  A consequence of if this is that f the WAL file "
"contains more than read-mark[N] frames (if mxFrame>read-mark[N] for any "
"read-mark for which WAL_READ_LOCK(N) is held by another process), then the "
"checkpoint cannot run to completion.  When a writer wants to <a "
"href=\"fileformat2.html#walreset\">reset the WAL</a>, it must ensure that "
"there are no locks on WAL_READ_LOCK(N) for N>0 because such locks indicate "
"that some other connection is still using the current WAL file and a <a "
"href=\"fileformat2.html#walreset\">WAL reset</a> would delete content out "
"from those other connections.  It is ok for a <a "
"href=\"fileformat2.html#walreset\">WAL reset</a> to occur if other "
"connections are holding WAL_READ_LOCK(0)  because by holding "
"WAL_READ_LOCK(0), those other connections are promising not to use any "
"content from the WAL."
msgstr ""

#. type: Content of: <html><body><div><p><p><p><p><h3>
#: sedout/walformat.html:781
msgid ""
"<span>2.3.2. </span>Operations that require locks and which locks those "
"operations use"
msgstr ""

#. type: Content of: <html><body><div><p><p><p><p><ul><li>
#: sedout/walformat.html:784
msgid ""
"<b>Transition into and out of WAL-mode</b> The SQLITE_LOCK_EXCLUSIVE lock "
"must be held by a connection that wants to transition into our out of WAL "
"mode.  Transitioning into WAL mode is, therefore, just like any other write "
"transaction, since every write transaction in rollback mode requires the "
"SQLITE_LOCK_EXCLUSIVE lock.  If the database file is already in WAL mode "
"(hence if the desire it to change it back into rollback mode) and if there "
"are two or more connections to the database, then each of these connections "
"will be holding an SQLITE_LOCK_SHARED lock.  That means that the "
"SQLITE_LOCK_EXCLUSIVE cannot be obtained, and the transition out of WAL mode "
"will not be allowed.  This prevents one connection from deleting WAL mode "
"out from under another.  It also means that the only way to move a database "
"from WAL mode into rollback mode is to close all but one connection to the "
"database."
msgstr ""

#. type: Content of: <html><body><div><p><p><p><p><ul><li>
#: sedout/walformat.html:802
msgid ""
"<b>Close a connection to a WAL mode database</b> When a database connection "
"closes (via <a href=\"c3ref/close.html\">sqlite3_close()</a> or <a "
"href=\"c3ref/close.html\">sqlite3_close_v2()</a>), an attempt is made to "
"acquire SQLITE_LOCK_EXCLUSIVE.  If this attempt is successful, that means "
"the connection that is closing is the last connection to the database.  In "
"that case, it is desirable to clean up the WAL and WAL-index files, so the "
"closing connection runs a <a href=\"wal.html#ckpt\">checkpoint</a> (while "
"holding SQLITE_LOCK_EXCLUSIVE) and the deletes both the WAL and WAL-index "
"files.  The SQLITE_LOCK_EXCLUSIVE is not released until after both the WAL "
"and WAL-index files have been deleted.  If the application invokes <a "
"href=\"c3ref/file_control.html\">sqlite3_file_control</a>(<a "
"href=\"c3ref/c_fcntl_begin_atomic_write.html#sqlitefcntlpersistwal\">SQLITE_FCNTL_PERSIST_WAL</a>) "
"on the database connection prior to closing, then the final checkpoint is "
"still run but the WAL and WAL-index files are not deleted as they normally "
"would be.  This leaves the database in a state that allows other processes "
"without write permission on the database, WAL, or WAL-index files to open "
"the database read-only.  If the WAL and WAL-index files are missing, then a "
"process that lacks permission to create and initialize those files will not "
"be able to open the database, unless the database is designated as immutable "
"using the <a href=\"uri.html#uriimmutable\">immutable query parameter</a>."
msgstr ""

#. type: Content of: <html><body><div><p><p><p><p><ul><li>
#: sedout/walformat.html:827
msgid ""
"<b>Reconstruct the global shared WAL-index during <a "
"href=\"walformat.html#recovery\">recovery</a></b> All of the WAL-index "
"locks, except for WAL_READ_LOCK(0), are held exclusively while "
"reconstructing the global shared WAL-index during <a "
"href=\"walformat.html#recovery\">recovery</a>."
msgstr ""

#. type: Content of: <html><body><div><p><p><p><p><ul><li>
#: sedout/walformat.html:833
msgid ""
"<b>Append a new transaction to the end of the WAL</b> An exclusive lock is "
"held on WAL_WRITE_LOCK while adding new frame onto the end of a WAL file."
msgstr ""

#. type: Content of: <html><body><div><p><p><p><p><ul><li>
#: sedout/walformat.html:838
msgid "<b>Read content from the database and WAL as part of a transaction</b>"
msgstr ""

#. type: Content of: <html><body><div><p><p><p><p><ul><li>
#: sedout/walformat.html:840
msgid "<b>Run a checkpoint</b>"
msgstr ""

#. type: Content of: <html><body><div><p><p><p><p><ul><li>
#: sedout/walformat.html:842
msgid ""
"<b>Reset the WAL file</b> A <a href=\"fileformat2.html#walreset\">WAL "
"reset</a> means to rewind the WAL and start adding new frames at the "
"beginning.  This occurs while appending new frames to a WAL that has <a "
"href=\"walformat.html#mxframe\">mxFrame</a> equal to <a "
"href=\"walformat.html#nbackfill\">nBackfill</a> and which has no locks on "
"WAL_READ_LOCK(1) through WAL_READ_LOCK(4).  The WAL_WRITE_LOCK is held."
msgstr ""

#. type: Content of: <html><body><div><p><p><p><p>
#: sedout/walformat.html:852
msgid "<a name=\"recovery\"></a>"
msgstr ""

#. type: Content of: <html><body><div><p><p><p><p><h1>
#: sedout/walformat.html:854
msgid "<span>3. </span>Recovery"
msgstr ""

#. type: Content of: <html><body><div><p><p><p><p><p>
#: sedout/walformat.html:857
msgid ""
"Recovery is the process of rebuilding the WAL-index so that it is "
"synchronized with the WAL."
msgstr ""

#. type: Content of: <html><body><div><p><p><p><p><p>
#: sedout/walformat.html:861
msgid ""
"Recovery is run by the first thread to connect to a WAL-mode database.  "
"Recovery restores the WAL-index so that it accurately describes the WAL "
"file.  If there is no WAL file present when the first thread connects to the "
"database, there is nothing to recover, but the recovery process still runs "
"to initialize the WAL-index."
msgstr ""

#. type: Content of: <html><body><div><p><p><p><p><p>
#: sedout/walformat.html:868
msgid ""
"If the WAL-index is implemented as a memory-mapped file and that file is "
"read-only to the first thread to connect, then that thread creates an "
"private heap-memory ersazt WAL-index and runs the recovery routine to "
"populate that private WAL-index.  The same data results, but it is held "
"privately rather that being written into the public shared memory area."
msgstr ""

#. type: Content of: <html><body><div><p><p><p><p><p>
#: sedout/walformat.html:875
msgid ""
"Recovery works by doing a single pass over the WAL, from beginning to end.  "
"The checksums are verified on each frame of the WAL as it is read.  The scan "
"stops at the end of the file or at the first invalid checksum.  The <a "
"href=\"walformat.html#mxframe\">mxFrame</a> field is set to the index of the "
"last valid commit frame in WAL.  Since WAL frame numbers are indexed "
"starting with 1, mxFrame is also the number of valid frames in the WAL.  A "
"\"commit frame\" is a frame that has a non-zero value in bytes 4 through 7 "
"of the frame header.  Since the recovery procedure has no way of knowing how "
"many frames of the WAL might have previously been copied back into the "
"database, it initializes the <a "
"href=\"walformat.html#nbackfill\">nBackfill</a> value to zero."
msgstr ""

#. type: Content of: <html><body><div><p><p><p><p><p>
#: sedout/walformat.html:887
msgid ""
"During recovery of the global shared-memory WAL-index, exclusive locks are "
"held on WAL_WRITE_LOCK, WAL_CKPT_LOCK, WAL_RECOVER_LOCK, and "
"WAL_READ_LOCK(1) through WAL_READ_LOCK(4).  In other words, all locks "
"associated with the WAL-index except for WAL_READ_LOCK(0) are held "
"exclusively.  This prevents any other thread from writing the database and "
"from reading any transactions that are held in the WAL, until the recovery "
"is complete."
msgstr ""

#. type: Content of: <html><body><div><p><p><p><p><p>
#: sedout/walformat.html:892
msgid ""
"<small><i>This page last modified on <a "
"href=\"https://sqlite.org/docsrc/honeypot\" id=\"mtimelink\" "
"data-href=\"https://sqlite.org/docsrc/finfo/pages/walformat.in?m=2499474847\">2022-01-08 "
"05:02:57</a> UTC </i></small>"
msgstr ""
