# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2023-03-15 23:12+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. type: Content of: <html><body><div><div><div>
#: sedout/lemon.html:6 sedout/lemon.html:121
msgid "The Lemon LALR(1) Parser Generator"
msgstr ""

#. type: Content of: <html><body><div><a>
#: sedout/lemon.html:11
msgid "<a href=\"index.html\">"
msgstr ""

#. type: Attribute 'alt' of: <html><body><div><a><img>
#: sedout/lemon.html:12
msgid "SQLite"
msgstr ""

#. type: Content of: <html><body><div><div>
#: sedout/lemon.html:16
msgid "Small. Fast. Reliable."
msgstr ""

#. type: Content of: <html><body><div><div><br>
#: sedout/lemon.html:16
msgid "Choose any three."
msgstr ""

#. type: Content of: <html><body><div><div><ul><li>
#: sedout/lemon.html:20
msgid "<a href=\"index.html\">Home</a>"
msgstr ""

#. type: Content of: <html><body><div><div><ul><li><li>
#: sedout/lemon.html:21
msgid "<a href=\"javascript:void(0)\" onclick='toggle_div(\"submenu\")'>Menu</a>"
msgstr ""

#. type: Content of: <html><body><div><div><ul><li>
#: sedout/lemon.html:22 sedout/lemon.html:34
msgid "<a href='about.html'>About</a>"
msgstr ""

#. type: Content of: <html><body><div><div><ul><li><li><li><li>
#: sedout/lemon.html:23
msgid "<a href=\"docs.html\">Documentation</a>"
msgstr ""

#. type: Content of: <html><body><div><div><ul><li><li><li><li><li>
#: sedout/lemon.html:24
msgid "<a href=\"download.html\">Download</a>"
msgstr ""

#. type: Content of: <html><body><div><div><ul><li><li><li><li><li><li>
#: sedout/lemon.html:25
msgid "<a href='copyright.html'>License</a>"
msgstr ""

#. type: Content of: <html><body><div><div><ul><li><li><li><li><li><li><li>
#: sedout/lemon.html:26
msgid "<a href=\"support.html\">Support</a>"
msgstr ""

#. type: Content of: <html><body><div><div><ul><li><li><li><li><li><li><li><li>
#: sedout/lemon.html:27
msgid "<a href=\"prosupport.html\">Purchase</a>"
msgstr ""

#. type: Content of: <html><body><div><div><ul><li><li><li><li><li><li><li><li><li>
#: sedout/lemon.html:29
msgid "<a href=\"javascript:void(0)\" onclick='toggle_search()'>Search</a>"
msgstr ""

#. type: Content of: <html><body><div><div><ul><li><li>
#: sedout/lemon.html:35
msgid "<a href='docs.html'>Documentation</a>"
msgstr ""

#. type: Content of: <html><body><div><div><ul><li><li><li>
#: sedout/lemon.html:36
msgid "<a href='download.html'>Download</a>"
msgstr ""

#. type: Content of: <html><body><div><div><ul><li><li><li><li>
#: sedout/lemon.html:37
msgid "<a href='support.html'>Support</a>"
msgstr ""

#. type: Content of: <html><body><div><div><ul><li><li><li><li><li>
#: sedout/lemon.html:38
msgid "<a href='prosupport.html'>Purchase</a>"
msgstr ""

#. type: Content of: <html><body><div><div><form><select>
#: sedout/lemon.html:43
msgid "<select name=\"s\" id=\"searchtype\">"
msgstr ""

#. type: Content of: <html><body><div><div><form><select><option>
#: sedout/lemon.html:44
msgid "Search Documentation"
msgstr ""

#. type: Content of: <html><body><div><div><form><select><option>
#: sedout/lemon.html:45
msgid "Search Changelog"
msgstr ""

#. type: Content of: <html><body><div><div><form>
#: sedout/lemon.html:46
msgid ""
"</select> <input type=\"text\" name=\"q\" id=\"searchbox\" value=\"\"/> "
"<input type=\"submit\" value=\"Go\"/>"
msgstr ""

#. type: Content of: <html><body><script>
#: sedout/lemon.html:53
msgid ""
"function toggle_div(nm) { var w = document.getElementById(nm); if( "
"w.style.display==\"block\" ){ w.style.display = \"none\"; }else{ "
"w.style.display = \"block\"; } } function toggle_search() { var w = "
"document.getElementById(\"searchmenu\"); if( w.style.display==\"block\" ){ "
"w.style.display = \"none\"; } else { w.style.display = \"block\"; "
"setTimeout(function(){ document.getElementById(\"searchbox\").focus()  }, "
"30); } } function "
"div_off(nm){document.getElementById(nm).style.display=\"none\";} "
"window.onbeforeunload = function(e){div_off(\"submenu\");} /* Disable the "
"Search feature if we are not operating from CGI, since */ /* Search is "
"accomplished using CGI and will not work without it. */ if( !location.origin "
"|| !location.origin.match || !location.origin.match(/http/) ){ "
"document.getElementById(\"search_menubutton\").style.display = \"none\"; } "
"/* Used by the Hide/Show button beside syntax diagrams, to toggle the */ "
"function hideorshow(btn,obj){ var x = document.getElementById(obj); var b = "
"document.getElementById(btn); if( x.style.display!='none' ){ x.style.display "
"= 'none'; b.innerHTML='show'; }else{ x.style.display = ''; "
"b.innerHTML='hide'; } return false; } var antiRobot = 0; function "
"antiRobotGo(){ if( antiRobot!=3 ) return; antiRobot = 7; var j = "
"document.getElementById(\"mtimelink\"); if(j && "
"j.hasAttribute(\"data-href\")) j.href=j.getAttribute(\"data-href\"); } "
"function antiRobotDefense(){ document.body.onmousedown=function(){ antiRobot "
"|= 2; antiRobotGo(); document.body.onmousedown=null; } "
"document.body.onmousemove=function(){ antiRobot |= 2; antiRobotGo(); "
"document.body.onmousemove=null; } setTimeout(function(){ antiRobot |= 1; "
"antiRobotGo(); }, 100)  antiRobotGo(); } antiRobotDefense();"
msgstr ""

#. type: Content of: <html><body><div><div><div>
#: sedout/lemon.html:124
msgid ""
"<a onclick=\"toggle_toc()\"> <span class=\"fancy_toc_mark\" "
"id=\"toc_mk\">&#x25ba;</span> Table Of Contents </a>"
msgstr ""

#. type: Content of: <html><body><div><div><div><div><div>
#: sedout/lemon.html:128
msgid "<a href=\"#overview\">1. Overview</a>"
msgstr ""

#. type: Content of: <html><body><div><div><div><div><div>
#: sedout/lemon.html:129
msgid ""
"<a href=\"#lemon_source_files_and_documentation\">1.1. Lemon Source Files "
"And Documentation</a>"
msgstr ""

#. type: Content of: <html><body><div><div><div><div><div>
#: sedout/lemon.html:130
msgid "<a href=\"#advantages_of_lemon\">2. Advantages of Lemon</a>"
msgstr ""

#. type: Content of: <html><body><div><div><div><div><div>
#: sedout/lemon.html:131
msgid "<a href=\"#use_of_lemon_within_sqlite\">2.1. Use of Lemon Within SQLite</a>"
msgstr ""

#. type: Content of: <html><body><div><div><div><div><div>
#: sedout/lemon.html:132
msgid ""
"<a href=\"#lemon_customizations_especially_for_sqlite\">2.2. Lemon "
"Customizations Especially For SQLite</a>"
msgstr ""

#. type: Content of: <html><body><div><div><div><div><div>
#: sedout/lemon.html:133
msgid "<a href=\"#history_of_lemon\">3. History Of Lemon</a>"
msgstr ""

#. type: Content of: <html><body><div><div><script>
#: sedout/lemon.html:137
msgid ""
"function toggle_toc(){ var sub = document.getElementById(\"toc_sub\")  var "
"mk = document.getElementById(\"toc_mk\")  if( sub.style.display!=\"block\" "
"){ sub.style.display = \"block\"; mk.innerHTML = \"&#x25bc;\"; } else { "
"sub.style.display = \"none\"; mk.innerHTML = \"&#x25ba;\"; } }"
msgstr ""

#. type: Content of: <html><body><div><h1>
#: sedout/lemon.html:155
msgid "<span>1. </span>Overview"
msgstr ""

#. type: Content of: <html><body><div><p>
#: sedout/lemon.html:157
msgid ""
"The SQL language parser for SQLite is generated using a code-generator "
"program called \"Lemon\".  The Lemon program reads a grammar of the input "
"language and emits C-code to implement a parser for that language."
msgstr ""

#. type: Content of: <html><body><div><h2>
#: sedout/lemon.html:162
msgid "<span>1.1. </span>Lemon Source Files And Documentation"
msgstr ""

#. type: Content of: <html><body><div><p>
#: sedout/lemon.html:164
msgid ""
"Lemon does not have its own source repository.  Rather, Lemon consists of a "
"few files in the SQLite source tree:"
msgstr ""

#. type: Content of: <html><body><div><p><ul><li>
#: sedout/lemon.html:169
msgid ""
"<a href=\"https://sqlite.org/src/doc/trunk/doc/lemon.html\">lemon.html</a> "
"&rarr; The original detailed usage documentation and programmers reference "
"for Lemon."
msgstr ""

#. type: Content of: <html><body><div><p><ul><li>
#: sedout/lemon.html:173
msgid ""
"<a href=\"https://sqlite.org/src/file/tool/lemon.c\">lemon.c</a> &rarr; The "
"source code for the utility program that reads a grammar file and generates "
"corresponding parser C-code."
msgstr ""

#. type: Content of: <html><body><div><p><ul><li>
#: sedout/lemon.html:177
msgid ""
"<a href=\"https://sqlite.org/src/file/tool/lempar.c\">lempar.c</a> &rarr; A "
"template for the generated parser C-code.  The \"lemon\" utility program "
"reads this template and inserts additional code in order to generate a "
"parser."
msgstr ""

#. type: Content of: <html><body><div><p><h1>
#: sedout/lemon.html:182
msgid "<span>2. </span>Advantages of Lemon"
msgstr ""

#. type: Content of: <html><body><div><p><p>
#: sedout/lemon.html:184
msgid ""
"Lemon generates an LALR(1) parser.  Its operation is similar to the more "
"familiar tools <a href=\"https://en.wikipedia.org/wiki/Yacc\">Yacc</a> and "
"<a href=\"https://en.wikipedia.org/wiki/GNU_bison\">Bison</a>, but Lemon "
"adds important improvements, including:"
msgstr ""

#. type: Content of: <html><body><div><p><p><ul><li>
#: sedout/lemon.html:191
msgid ""
"The grammar syntax is less error prone - using symbolic names for semantic "
"values rather that the \"$1\"-style positional notation of Yacc."
msgstr ""

#. type: Content of: <html><body><div><p><p><ul><li>
#: sedout/lemon.html:195
msgid ""
"In Lemon, the tokenizer calls the parser.  Yacc operates the other way "
"around, with the parser calling the tokenizer.  The Lemon approach is "
"reentrant and threadsafe, whereas Yacc uses global variables and is "
"therefore neither.  Reentrancy is especially important for SQLite since some "
"SQL statements make recursive calls to the parser.  For example, when "
"parsing a CREATE TABLE statement, SQLite invokes the parser recursively to "
"generate an INSERT statement to make a new entry in the <a "
"href=\"schematab.html\">sqlite_schema</a> table."
msgstr ""

#. type: Content of: <html><body><div><p><p><ul><li>
#: sedout/lemon.html:204
msgid ""
"Lemon has the concept of a non-terminal destructor that can be used to "
"reclaim memory or other resources following a syntax error or other aborted "
"parse."
msgstr ""

#. type: Content of: <html><body><div><p><p><h2>
#: sedout/lemon.html:209
msgid "<span>2.1. </span>Use of Lemon Within SQLite"
msgstr ""

#. type: Content of: <html><body><div><p><p><p>
#: sedout/lemon.html:211
msgid "Lemon is used in two places in SQLite."
msgstr ""

#. type: Content of: <html><body><div><p><p><p>
#: sedout/lemon.html:213
msgid ""
"The primary use of Lemon is to create the SQL language parser.  A grammar "
"file (<a href=\"https://sqlite.org/src/file/src/parse.y\">parse.y</a>) is "
"compiled by Lemon into parse.c and parse.h.  The parse.c file is "
"incorporated into the <a href=\"amalgamation.html\">amalgamation</a> without "
"further modification."
msgstr ""

#. type: Content of: <html><body><div><p><p><p>
#: sedout/lemon.html:218
msgid ""
"Lemon is also used to generate the parser for the query pattern expressions "
"in the <a href=\"fts5.html\">FTS5</a> extension.  In this case, the input "
"grammar file is <a "
"href=\"https://sqlite.org/src/file/ext/fts5/fts5parse.y\">fts5parse.y</a>."
msgstr ""

#. type: Content of: <html><body><div><p><p><h2>
#: sedout/lemon.html:222
msgid "<span>2.2. </span>Lemon Customizations Especially For SQLite"
msgstr ""

#. type: Content of: <html><body><div><p><p><p>
#: sedout/lemon.html:224
msgid ""
"One of the advantages of hosting code generator tools as part of the project "
"is that the tools can be optimized to serve specific needs of the overall "
"project.  Lemon has benefited from this effect. Over the years, the Lemon "
"parser generator has been extended and enhanced to provide new capabilities "
"and improved performance to SQLite.  A few of the specific enhancements to "
"Lemon that are specifically designed for use by SQLite include:"
msgstr ""

#. type: Content of: <html><body><div><p><p><p><ul><li>
#: sedout/lemon.html:234
msgid ""
"Lemon has the concept of a \"fallback\" token.  The SQL language contains a "
"large number of keywords and these keywords have the potential to collide "
"with identifier names.  Lemon has the ability to designate some keywords as "
"being able to \"fallback\" to an identifier.  If the keyword appears in the "
"input token stream in a context that would otherwise be a syntax error, the "
"token is automatically transformed into its fallback before the syntax error "
"is raised.  This feature allows the parser to be very forgiving of reserved "
"words used as identifiers, which is a problem that comes up frequently in "
"the SQL language."
msgstr ""

#. type: Content of: <html><body><div><p><p><p><ul><li>
#: sedout/lemon.html:246
msgid ""
"In support of the <a href=\"testing.html#mcdc\">100% MC/DC testing</a> goal "
"for SQLite, the parser code generated by Lemon has no unreachable branches, "
"and contains extra (compile-time selected) instrumentation useful for "
"measuring test coverage."
msgstr ""

#. type: Content of: <html><body><div><p><p><p><ul><li>
#: sedout/lemon.html:252
msgid ""
"Lemon supports conditional compilation of grammar file rules, so that a "
"different parser can be generated depending on compile-time options."
msgstr ""

#. type: Content of: <html><body><div><p><p><p><ul><li>
#: sedout/lemon.html:256
msgid ""
"As a performance optimization, reduce actions in the Lemon input grammar are "
"allowed to contain comments of the form \"/*A-overwrites-Z*/\" to indicate "
"that the semantic value \"A\" on the right-hand side of the rule is allowed "
"to directly overwrite the semantic value \"Z\" on the left-hand side.  This "
"simple optimization reduces the number of stack operations in the push-down "
"automaton used to parse the input grammar, and thus improve performance of "
"the parser.  It also makes the generated code a little smaller."
msgstr ""

#. type: Content of: <html><body><div><p><p><p><p>
#: sedout/lemon.html:265
msgid ""
"The parsing of SQL statements is a significant consumer of CPU cycles in any "
"SQL database engine.  On-going efforts to optimize SQLite have caused the "
"developers to spend a lot of time tweaking Lemon to generate faster "
"parsers.  These efforts have benefited all users of the Lemon parser "
"generator, not just SQLite.  But if Lemon had been a separately maintained "
"tool, it would have been more difficult to make coordinated changes to both "
"SQLite and Lemon, and as a result not as much optimization would have been "
"accomplished.  Hence, the fact that the parser generator tool is included in "
"the source tree for SQLite has turned out to be a net benefit for both the "
"tool itself and for SQLite."
msgstr ""

#. type: Content of: <html><body><div><p><p><p><h1>
#: sedout/lemon.html:276
msgid "<span>3. </span>History Of Lemon"
msgstr ""

#. type: Content of: <html><body><div><p><p><p><p>
#: sedout/lemon.html:278
msgid ""
"Lemon was originally written by D. Richard Hipp (also the creator of SQLite)  "
"while he was in graduate school at Duke University between 1987 and 1992.  "
"The original creation date of Lemon has been lost, but was probably sometime "
"around 1990.  Lemon generates an LALR(1) parser.  There was a companion "
"LL(1) parser generator tool named \"Lime\", but the source code for Lime has "
"been lost."
msgstr ""

#. type: Content of: <html><body><div><p><p><p><p>
#: sedout/lemon.html:285
msgid ""
"The Lemon source code was originally written as separate source files, and "
"only later merged into a single \"lemon.c\" source file."
msgstr ""

#. type: Content of: <html><body><div><p><p><p><p>
#: sedout/lemon.html:288
msgid ""
"The author of Lemon and SQLite (Hipp) reports that his C programming skills "
"were greatly enhanced by studying John Ousterhout's original source code to "
"Tcl.  Hipp discovered and studied Tcl in 1993.  Lemon was written before "
"then, and SQLite afterwards.  There is a clear difference in the coding "
"styles of these two products, with SQLite seeming to be cleaner, more "
"readable, and easier to maintain."
msgstr ""

#. type: Content of: <html><body><div><p><p><p><p>
#: sedout/lemon.html:294
msgid ""
"<small><i>This page last modified on <a "
"href=\"https://sqlite.org/docsrc/honeypot\" id=\"mtimelink\" "
"data-href=\"https://sqlite.org/docsrc/finfo/pages/lemon.in?m=b11f8f15fd\">2022-04-18 "
"02:55:50</a> UTC </i></small>"
msgstr ""
