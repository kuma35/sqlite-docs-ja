# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2023-03-15 23:05+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. type: Content of: <html><body><div><div><div>
#: sedout/lang_corefunc.html:6 sedout/lang_corefunc.html:121
msgid "Built-In Scalar SQL Functions"
msgstr ""

#. type: Content of: <html><body><div><a>
#: sedout/lang_corefunc.html:11
msgid "<a href=\"index.html\">"
msgstr ""

#. type: Attribute 'alt' of: <html><body><div><a><img>
#: sedout/lang_corefunc.html:12
msgid "SQLite"
msgstr ""

#. type: Content of: <html><body><div><div>
#: sedout/lang_corefunc.html:16
msgid "Small. Fast. Reliable."
msgstr ""

#. type: Content of: <html><body><div><div><br>
#: sedout/lang_corefunc.html:16
msgid "Choose any three."
msgstr ""

#. type: Content of: <html><body><div><div><ul><li>
#: sedout/lang_corefunc.html:20
msgid "<a href=\"index.html\">Home</a>"
msgstr ""

#. type: Content of: <html><body><div><div><ul><li><li>
#: sedout/lang_corefunc.html:21
msgid "<a href=\"javascript:void(0)\" onclick='toggle_div(\"submenu\")'>Menu</a>"
msgstr ""

#. type: Content of: <html><body><div><div><ul><li>
#: sedout/lang_corefunc.html:22 sedout/lang_corefunc.html:34
msgid "<a href='about.html'>About</a>"
msgstr ""

#. type: Content of: <html><body><div><div><ul><li><li><li><li>
#: sedout/lang_corefunc.html:23
msgid "<a href=\"docs.html\">Documentation</a>"
msgstr ""

#. type: Content of: <html><body><div><div><ul><li><li><li><li><li>
#: sedout/lang_corefunc.html:24
msgid "<a href=\"download.html\">Download</a>"
msgstr ""

#. type: Content of: <html><body><div><div><ul><li><li><li><li><li><li>
#: sedout/lang_corefunc.html:25
msgid "<a href='copyright.html'>License</a>"
msgstr ""

#. type: Content of: <html><body><div><div><ul><li><li><li><li><li><li><li>
#: sedout/lang_corefunc.html:26
msgid "<a href=\"support.html\">Support</a>"
msgstr ""

#. type: Content of: <html><body><div><div><ul><li><li><li><li><li><li><li><li>
#: sedout/lang_corefunc.html:27
msgid "<a href=\"prosupport.html\">Purchase</a>"
msgstr ""

#. type: Content of: <html><body><div><div><ul><li><li><li><li><li><li><li><li><li>
#: sedout/lang_corefunc.html:29
msgid "<a href=\"javascript:void(0)\" onclick='toggle_search()'>Search</a>"
msgstr ""

#. type: Content of: <html><body><div><div><ul><li><li>
#: sedout/lang_corefunc.html:35
msgid "<a href='docs.html'>Documentation</a>"
msgstr ""

#. type: Content of: <html><body><div><div><ul><li><li><li>
#: sedout/lang_corefunc.html:36
msgid "<a href='download.html'>Download</a>"
msgstr ""

#. type: Content of: <html><body><div><div><ul><li><li><li><li>
#: sedout/lang_corefunc.html:37
msgid "<a href='support.html'>Support</a>"
msgstr ""

#. type: Content of: <html><body><div><div><ul><li><li><li><li><li>
#: sedout/lang_corefunc.html:38
msgid "<a href='prosupport.html'>Purchase</a>"
msgstr ""

#. type: Content of: <html><body><div><div><form><select>
#: sedout/lang_corefunc.html:43
msgid "<select name=\"s\" id=\"searchtype\">"
msgstr ""

#. type: Content of: <html><body><div><div><form><select><option>
#: sedout/lang_corefunc.html:44
msgid "Search Documentation"
msgstr ""

#. type: Content of: <html><body><div><div><form><select><option>
#: sedout/lang_corefunc.html:45
msgid "Search Changelog"
msgstr ""

#. type: Content of: <html><body><div><div><form>
#: sedout/lang_corefunc.html:46
msgid ""
"</select> <input type=\"text\" name=\"q\" id=\"searchbox\" value=\"\"/> "
"<input type=\"submit\" value=\"Go\"/>"
msgstr ""

#. type: Content of: <html><body><script>
#: sedout/lang_corefunc.html:53
msgid ""
"function toggle_div(nm) { var w = document.getElementById(nm); if( "
"w.style.display==\"block\" ){ w.style.display = \"none\"; }else{ "
"w.style.display = \"block\"; } } function toggle_search() { var w = "
"document.getElementById(\"searchmenu\"); if( w.style.display==\"block\" ){ "
"w.style.display = \"none\"; } else { w.style.display = \"block\"; "
"setTimeout(function(){ document.getElementById(\"searchbox\").focus()  }, "
"30); } } function "
"div_off(nm){document.getElementById(nm).style.display=\"none\";} "
"window.onbeforeunload = function(e){div_off(\"submenu\");} /* Disable the "
"Search feature if we are not operating from CGI, since */ /* Search is "
"accomplished using CGI and will not work without it. */ if( !location.origin "
"|| !location.origin.match || !location.origin.match(/http/) ){ "
"document.getElementById(\"search_menubutton\").style.display = \"none\"; } "
"/* Used by the Hide/Show button beside syntax diagrams, to toggle the */ "
"function hideorshow(btn,obj){ var x = document.getElementById(obj); var b = "
"document.getElementById(btn); if( x.style.display!='none' ){ x.style.display "
"= 'none'; b.innerHTML='show'; }else{ x.style.display = ''; "
"b.innerHTML='hide'; } return false; } var antiRobot = 0; function "
"antiRobotGo(){ if( antiRobot!=3 ) return; antiRobot = 7; var j = "
"document.getElementById(\"mtimelink\"); if(j && "
"j.hasAttribute(\"data-href\")) j.href=j.getAttribute(\"data-href\"); } "
"function antiRobotDefense(){ document.body.onmousedown=function(){ antiRobot "
"|= 2; antiRobotGo(); document.body.onmousedown=null; } "
"document.body.onmousemove=function(){ antiRobot |= 2; antiRobotGo(); "
"document.body.onmousemove=null; } setTimeout(function(){ antiRobot |= 1; "
"antiRobotGo(); }, 100)  antiRobotGo(); } antiRobotDefense();"
msgstr ""

#. type: Content of: <html><body><div><h1>
#: sedout/lang_corefunc.html:129
msgid "<span>1. </span>Overview"
msgstr ""

#. type: Content of: <html><body><div><p>
#: sedout/lang_corefunc.html:131
msgid ""
"The core functions shown below are available by default.  <a "
"href=\"lang_datefunc.html\">Date &amp; Time functions</a>, <a "
"href=\"lang_aggfunc.html\">aggregate functions</a>, <a "
"href=\"windowfunctions.html#biwinfunc\">window functions</a>, <a "
"href=\"lang_mathfunc.html\">math functions</a>, and <a "
"href=\"json1.html\">JSON functions</a> are documented separately.  An "
"application may define additional functions written in C and added to the "
"database engine using the <a "
"href=\"c3ref/create_function.html\">sqlite3_create_function()</a> API."
msgstr ""

#. type: Content of: <html><body><div><p><div><ul><li>
#: sedout/lang_corefunc.html:144
msgid "<a href='lang_corefunc.html#abs'>abs(X)</a>"
msgstr ""

#. type: Content of: <html><body><div><p><div><ul><li>
#: sedout/lang_corefunc.html:145
msgid "<a href='lang_corefunc.html#changes'>changes()</a>"
msgstr ""

#. type: Content of: <html><body><div><p><div><ul><li>
#: sedout/lang_corefunc.html:146
msgid "<a href='lang_corefunc.html#char'>char(X1,X2,...,XN)</a>"
msgstr ""

#. type: Content of: <html><body><div><p><div><ul><li>
#: sedout/lang_corefunc.html:147
msgid "<a href='lang_corefunc.html#coalesce'>coalesce(X,Y,...)</a>"
msgstr ""

#. type: Content of: <html><body><div><p><div><ul><li>
#: sedout/lang_corefunc.html:148
msgid "<a href='lang_corefunc.html#format'>format(FORMAT,...)</a>"
msgstr ""

#. type: Content of: <html><body><div><p><div><ul><li>
#: sedout/lang_corefunc.html:149
msgid "<a href='lang_corefunc.html#glob'>glob(X,Y)</a>"
msgstr ""

#. type: Content of: <html><body><div><p><div><ul><li>
#: sedout/lang_corefunc.html:150
msgid "<a href='lang_corefunc.html#hex'>hex(X)</a>"
msgstr ""

#. type: Content of: <html><body><div><p><div><ul><li>
#: sedout/lang_corefunc.html:151
msgid "<a href='lang_corefunc.html#ifnull'>ifnull(X,Y)</a>"
msgstr ""

#. type: Content of: <html><body><div><p><div><ul><li>
#: sedout/lang_corefunc.html:152
msgid "<a href='lang_corefunc.html#iif'>iif(X,Y,Z)</a>"
msgstr ""

#. type: Content of: <html><body><div><p><div><ul><li>
#: sedout/lang_corefunc.html:153
msgid "<a href='lang_corefunc.html#instr'>instr(X,Y)</a>"
msgstr ""

#. type: Content of: <html><body><div><p><div><ul><li>
#: sedout/lang_corefunc.html:154
msgid "<a href='lang_corefunc.html#last_insert_rowid'>last_insert_rowid()</a>"
msgstr ""

#. type: Content of: <html><body><div><p><div><ul><li>
#: sedout/lang_corefunc.html:155
msgid "<a href='lang_corefunc.html#length'>length(X)</a>"
msgstr ""

#. type: Content of: <html><body><div><p><div><ul><li>
#: sedout/lang_corefunc.html:156
msgid "<a href='lang_corefunc.html#like'>like(X,Y)</a>"
msgstr ""

#. type: Content of: <html><body><div><p><div><ul><li>
#: sedout/lang_corefunc.html:157
msgid "<a href='lang_corefunc.html#like'>like(X,Y,Z)</a>"
msgstr ""

#. type: Content of: <html><body><div><p><div><ul><li>
#: sedout/lang_corefunc.html:158
msgid "<a href='lang_corefunc.html#likelihood'>likelihood(X,Y)</a>"
msgstr ""

#. type: Content of: <html><body><div><p><div><ul><li>
#: sedout/lang_corefunc.html:159
msgid "<a href='lang_corefunc.html#likely'>likely(X)</a>"
msgstr ""

#. type: Content of: <html><body><div><p><div><ul><li>
#: sedout/lang_corefunc.html:160
msgid "<a href='lang_corefunc.html#load_extension'>load_extension(X)</a>"
msgstr ""

#. type: Content of: <html><body><div><p><div><ul><li>
#: sedout/lang_corefunc.html:161
msgid "<a href='lang_corefunc.html#load_extension'>load_extension(X,Y)</a>"
msgstr ""

#. type: Content of: <html><body><div><p><div><ul><li>
#: sedout/lang_corefunc.html:162
msgid "<a href='lang_corefunc.html#lower'>lower(X)</a>"
msgstr ""

#. type: Content of: <html><body><div><p><div><ul><li>
#: sedout/lang_corefunc.html:163
msgid "<a href='lang_corefunc.html#ltrim'>ltrim(X)</a>"
msgstr ""

#. type: Content of: <html><body><div><p><div><ul><li>
#: sedout/lang_corefunc.html:164
msgid "<a href='lang_corefunc.html#ltrim'>ltrim(X,Y)</a>"
msgstr ""

#. type: Content of: <html><body><div><p><div><ul><li>
#: sedout/lang_corefunc.html:165
msgid "<a href='lang_corefunc.html#max_scalar'>max(X,Y,...)</a>"
msgstr ""

#. type: Content of: <html><body><div><p><div><ul><li>
#: sedout/lang_corefunc.html:166
msgid "<a href='lang_corefunc.html#min_scalar'>min(X,Y,...)</a>"
msgstr ""

#. type: Content of: <html><body><div><p><div><ul><li>
#: sedout/lang_corefunc.html:167
msgid "<a href='lang_corefunc.html#nullif'>nullif(X,Y)</a>"
msgstr ""

#. type: Content of: <html><body><div><p><div><ul><li>
#: sedout/lang_corefunc.html:168
msgid "<a href='lang_corefunc.html#printf'>printf(FORMAT,...)</a>"
msgstr ""

#. type: Content of: <html><body><div><p><div><ul><li>
#: sedout/lang_corefunc.html:169
msgid "<a href='lang_corefunc.html#quote'>quote(X)</a>"
msgstr ""

#. type: Content of: <html><body><div><p><div><ul><li>
#: sedout/lang_corefunc.html:170
msgid "<a href='lang_corefunc.html#random'>random()</a>"
msgstr ""

#. type: Content of: <html><body><div><p><div><ul><li>
#: sedout/lang_corefunc.html:171
msgid "<a href='lang_corefunc.html#randomblob'>randomblob(N)</a>"
msgstr ""

#. type: Content of: <html><body><div><p><div><ul><li>
#: sedout/lang_corefunc.html:172
msgid "<a href='lang_corefunc.html#replace'>replace(X,Y,Z)</a>"
msgstr ""

#. type: Content of: <html><body><div><p><div><ul><li>
#: sedout/lang_corefunc.html:173
msgid "<a href='lang_corefunc.html#round'>round(X)</a>"
msgstr ""

#. type: Content of: <html><body><div><p><div><ul><li>
#: sedout/lang_corefunc.html:174
msgid "<a href='lang_corefunc.html#round'>round(X,Y)</a>"
msgstr ""

#. type: Content of: <html><body><div><p><div><ul><li>
#: sedout/lang_corefunc.html:175
msgid "<a href='lang_corefunc.html#rtrim'>rtrim(X)</a>"
msgstr ""

#. type: Content of: <html><body><div><p><div><ul><li>
#: sedout/lang_corefunc.html:176
msgid "<a href='lang_corefunc.html#rtrim'>rtrim(X,Y)</a>"
msgstr ""

#. type: Content of: <html><body><div><p><div><ul><li>
#: sedout/lang_corefunc.html:177
msgid "<a href='lang_corefunc.html#sign'>sign(X)</a>"
msgstr ""

#. type: Content of: <html><body><div><p><div><ul><li>
#: sedout/lang_corefunc.html:178
msgid "<a href='lang_corefunc.html#soundex'>soundex(X)</a>"
msgstr ""

#. type: Content of: <html><body><div><p><div><ul><li>
#: sedout/lang_corefunc.html:179
msgid ""
"<a "
"href='lang_corefunc.html#sqlite_compileoption_get'>sqlite_compileoption_get(N)</a>"
msgstr ""

#. type: Content of: <html><body><div><p><div><ul><li>
#: sedout/lang_corefunc.html:180
msgid ""
"<a "
"href='lang_corefunc.html#sqlite_compileoption_used'>sqlite_compileoption_used(X)</a>"
msgstr ""

#. type: Content of: <html><body><div><p><div><ul><li>
#: sedout/lang_corefunc.html:181
msgid "<a href='lang_corefunc.html#sqlite_offset'>sqlite_offset(X)</a>"
msgstr ""

#. type: Content of: <html><body><div><p><div><ul><li>
#: sedout/lang_corefunc.html:182
msgid "<a href='lang_corefunc.html#sqlite_source_id'>sqlite_source_id()</a>"
msgstr ""

#. type: Content of: <html><body><div><p><div><ul><li>
#: sedout/lang_corefunc.html:183
msgid "<a href='lang_corefunc.html#sqlite_version'>sqlite_version()</a>"
msgstr ""

#. type: Content of: <html><body><div><p><div><ul><li>
#: sedout/lang_corefunc.html:184
msgid "<a href='lang_corefunc.html#substr'>substr(X,Y)</a>"
msgstr ""

#. type: Content of: <html><body><div><p><div><ul><li>
#: sedout/lang_corefunc.html:185
msgid "<a href='lang_corefunc.html#substr'>substr(X,Y,Z)</a>"
msgstr ""

#. type: Content of: <html><body><div><p><div><ul><li>
#: sedout/lang_corefunc.html:186
msgid "<a href='lang_corefunc.html#substr'>substring(X,Y)</a>"
msgstr ""

#. type: Content of: <html><body><div><p><div><ul><li>
#: sedout/lang_corefunc.html:187
msgid "<a href='lang_corefunc.html#substr'>substring(X,Y,Z)</a>"
msgstr ""

#. type: Content of: <html><body><div><p><div><ul><li>
#: sedout/lang_corefunc.html:188
msgid "<a href='lang_corefunc.html#total_changes'>total_changes()</a>"
msgstr ""

#. type: Content of: <html><body><div><p><div><ul><li>
#: sedout/lang_corefunc.html:189
msgid "<a href='lang_corefunc.html#trim'>trim(X)</a>"
msgstr ""

#. type: Content of: <html><body><div><p><div><ul><li>
#: sedout/lang_corefunc.html:190
msgid "<a href='lang_corefunc.html#trim'>trim(X,Y)</a>"
msgstr ""

#. type: Content of: <html><body><div><p><div><ul><li>
#: sedout/lang_corefunc.html:191
msgid "<a href='lang_corefunc.html#typeof'>typeof(X)</a>"
msgstr ""

#. type: Content of: <html><body><div><p><div><ul><li>
#: sedout/lang_corefunc.html:192
msgid "<a href='lang_corefunc.html#unhex'>unhex(X)</a>"
msgstr ""

#. type: Content of: <html><body><div><p><div><ul><li>
#: sedout/lang_corefunc.html:193
msgid "<a href='lang_corefunc.html#unhex'>unhex(X,Y)</a>"
msgstr ""

#. type: Content of: <html><body><div><p><div><ul><li>
#: sedout/lang_corefunc.html:194
msgid "<a href='lang_corefunc.html#unicode'>unicode(X)</a>"
msgstr ""

#. type: Content of: <html><body><div><p><div><ul><li>
#: sedout/lang_corefunc.html:195
msgid "<a href='lang_corefunc.html#unlikely'>unlikely(X)</a>"
msgstr ""

#. type: Content of: <html><body><div><p><div><ul><li>
#: sedout/lang_corefunc.html:196
msgid "<a href='lang_corefunc.html#upper'>upper(X)</a>"
msgstr ""

#. type: Content of: <html><body><div><p><div><ul><li>
#: sedout/lang_corefunc.html:197
msgid "<a href='lang_corefunc.html#zeroblob'>zeroblob(N)</a>"
msgstr ""

#. type: Content of: <html><body><div><p><h1>
#: sedout/lang_corefunc.html:202
msgid "<span>2. </span>Descriptions of built-in scalar SQL functions"
msgstr ""

#. type: Content of: <html><body><div><p><dl>
#: sedout/lang_corefunc.html:205
msgid "<a name=\"abs\"></a>"
msgstr ""

#. type: Content of: <html><body><div><p><dl><dt>
#: sedout/lang_corefunc.html:206
msgid "<b>abs(<i>X</i>)</b>"
msgstr ""

#. type: Content of: <html><body><div><p><dl><dd>
#: sedout/lang_corefunc.html:207
msgid ""
"The abs(X) function returns the absolute value of the numeric argument X.  "
"Abs(X) returns NULL if X is NULL.  Abs(X) returns 0.0 if X is a string or "
"blob that cannot be converted to a numeric value.  If X is the integer "
"-9223372036854775808 then abs(X) throws an integer overflow error since "
"there is no equivalent positive 64-bit two complement value."
msgstr ""

#. type: Content of: <html><body><div><p><dl>
#: sedout/lang_corefunc.html:214
msgid "<a name=\"changes\"></a>"
msgstr ""

#. type: Content of: <html><body><div><p><dl><dt>
#: sedout/lang_corefunc.html:215
msgid "<b>changes()</b>"
msgstr ""

#. type: Content of: <html><body><div><p><dl><dd>
#: sedout/lang_corefunc.html:216
msgid ""
"The changes() function returns the number of database rows that were changed "
"or inserted or deleted by the most recently completed INSERT, DELETE, or "
"UPDATE statement, exclusive of statements in lower-level triggers.  The "
"changes() SQL function is a wrapper around the <a "
"href=\"c3ref/changes.html\">sqlite3_changes64()</a> C/C++ function and hence "
"follows the same rules for counting changes."
msgstr ""

#. type: Content of: <html><body><div><p><dl>
#: sedout/lang_corefunc.html:222
msgid "<a name=\"char\"></a>"
msgstr ""

#. type: Content of: <html><body><div><p><dl><dt>
#: sedout/lang_corefunc.html:223
msgid "<b>char(<i>X1</i>,<i>X2</i>,...,<i>XN</i>)</b>"
msgstr ""

#. type: Content of: <html><body><div><p><dl><dd>
#: sedout/lang_corefunc.html:224
msgid ""
"The char(X1,X2,...,XN) function returns a string composed of characters "
"having the unicode code point values of integers X1 through XN, "
"respectively."
msgstr ""

#. type: Content of: <html><body><div><p><dl>
#: sedout/lang_corefunc.html:227
msgid "<a name=\"coalesce\"></a>"
msgstr ""

#. type: Content of: <html><body><div><p><dl><dt>
#: sedout/lang_corefunc.html:228
msgid "<b>coalesce(<i>X</i>,<i>Y</i>,...)</b>"
msgstr ""

#. type: Content of: <html><body><div><p><dl><dd>
#: sedout/lang_corefunc.html:229
msgid ""
"The coalesce() function returns a copy of its first non-NULL argument, or "
"NULL if all arguments are NULL.  Coalesce() must have at least 2 arguments."
msgstr ""

#. type: Content of: <html><body><div><p><dl>
#: sedout/lang_corefunc.html:233
msgid "<a name=\"format\"></a>"
msgstr ""

#. type: Content of: <html><body><div><p><dl><dt>
#: sedout/lang_corefunc.html:234
msgid "<b>format(<i>FORMAT</i>,...)</b>"
msgstr ""

#. type: Content of: <html><body><div><p><dl><dd>
#: sedout/lang_corefunc.html:235
msgid ""
"The format(FORMAT,...) SQL function works like the <a "
"href=\"c3ref/mprintf.html\">sqlite3_mprintf()</a> C-language function and "
"the printf() function from the standard C library.  The first argument is a "
"format string that specifies how to construct the output string using values "
"taken from subsequent arguments.  If the FORMAT argument is missing or NULL "
"then the result is NULL.  The %n format is silently ignored and does not "
"consume an argument.  The %p format is an alias for %X.  The %z format is "
"interchangeable with %s.  If there are too few arguments in the argument "
"list, missing arguments are assumed to have a NULL value, which is "
"translated into 0 or 0.0 for numeric formats or an empty string for %s.  See "
"the <a href=\"printf.html\">built-in printf()</a> documentation for "
"additional information."
msgstr ""

#. type: Content of: <html><body><div><p><dl>
#: sedout/lang_corefunc.html:246
msgid "<a name=\"glob\"></a>"
msgstr ""

#. type: Content of: <html><body><div><p><dl><dt>
#: sedout/lang_corefunc.html:247
msgid "<b>glob(<i>X</i>,<i>Y</i>)</b>"
msgstr ""

#. type: Content of: <html><body><div><p><dl><dd>
#: sedout/lang_corefunc.html:248
msgid ""
"The glob(X,Y) function is equivalent to the expression \"<b>Y GLOB X</b>\".  "
"Note that the X and Y arguments are reversed in the glob() function relative "
"to the infix <a href=\"lang_expr.html#glob\">GLOB</a> operator.  Y is the "
"string and X is the pattern.  So, for example, the following expressions are "
"equivalent:"
msgstr ""

#. type: Content of: <html><body><div><p><dl><dd><blockquote><pre>
#: sedout/lang_corefunc.html:254
#, no-wrap
msgid ""
"     name GLOB '*helium*'\n"
"     glob('*helium*',name)\n"
"  "
msgstr ""

#. type: Content of: <html><body><div><p><dl><dd>
#: sedout/lang_corefunc.html:257
msgid ""
"If the <a href=\"c3ref/create_function.html\">sqlite3_create_function()</a> "
"interface is used to override the glob(X,Y) function with an alternative "
"implementation then the <a href=\"lang_expr.html#glob\">GLOB</a> operator "
"will invoke the alternative implementation."
msgstr ""

#. type: Content of: <html><body><div><p><dl>
#: sedout/lang_corefunc.html:261
msgid "<a name=\"hex\"></a>"
msgstr ""

#. type: Content of: <html><body><div><p><dl><dt>
#: sedout/lang_corefunc.html:262
msgid "<b>hex(<i>X</i>)</b>"
msgstr ""

#. type: Content of: <html><body><div><p><dl><dd>
#: sedout/lang_corefunc.html:263
msgid ""
"The hex() function interprets its argument as a BLOB and returns a string "
"which is the upper-case hexadecimal rendering of the content of that blob.  "
"If the argument <i>X</i> in \"hex(<i>X</i>)\" is an integer or floating "
"point number, then \"interprets its argument as a BLOB\" means that the "
"binary number is first converted into a UTF8 text representation, then that "
"text is interpreted as a BLOB.  Hence, \"hex(12345678)\" renders as "
"\"3132333435363738\" not the binary representation of the integer value "
"\"0000000000BC614E\".  See also: <a "
"href=\"lang_corefunc.html#unhex\">unhex()</a>"
msgstr ""

#. type: Content of: <html><body><div><p><dl>
#: sedout/lang_corefunc.html:276
msgid "<a name=\"ifnull\"></a>"
msgstr ""

#. type: Content of: <html><body><div><p><dl><dt>
#: sedout/lang_corefunc.html:277
msgid "<b>ifnull(<i>X</i>,<i>Y</i>)</b>"
msgstr ""

#. type: Content of: <html><body><div><p><dl><dd>
#: sedout/lang_corefunc.html:278
msgid ""
"The ifnull() function returns a copy of its first non-NULL argument, or NULL "
"if both arguments are NULL.  Ifnull() must have exactly 2 arguments.  The "
"ifnull() function is equivalent to <a "
"href=\"lang_corefunc.html#coalesce\">coalesce()</a> with two arguments."
msgstr ""

#. type: Content of: <html><body><div><p><dl>
#: sedout/lang_corefunc.html:282
msgid "<a name=\"iif\"></a>"
msgstr ""

#. type: Content of: <html><body><div><p><dl><dt>
#: sedout/lang_corefunc.html:283
msgid "<b>iif(<i>X</i>,<i>Y</i>,<i>Z</i>)</b>"
msgstr ""

#. type: Content of: <html><body><div><p><dl><dd>
#: sedout/lang_corefunc.html:284
msgid ""
"The iif(X,Y,Z) function returns the value Y if X is true, and Z otherwise.  "
"The iif(X,Y,Z) function is logically equivalent to and generates the same <a "
"href=\"opcode.html\">bytecode</a> as the <a "
"href=\"lang_expr.html#case\">CASE expression</a> \"CASE WHEN X THEN Y ELSE Z "
"END\"."
msgstr ""

#. type: Content of: <html><body><div><p><dl>
#: sedout/lang_corefunc.html:288
msgid "<a name=\"instr\"></a>"
msgstr ""

#. type: Content of: <html><body><div><p><dl><dt>
#: sedout/lang_corefunc.html:289
msgid "<b>instr(<i>X</i>,<i>Y</i>)</b>"
msgstr ""

#. type: Content of: <html><body><div><p><dl><dd>
#: sedout/lang_corefunc.html:290
msgid ""
"The instr(X,Y) function finds the first occurrence of string Y within string "
"X and returns the number of prior characters plus 1, or 0 if Y is nowhere "
"found within X.  Or, if X and Y are both BLOBs, then instr(X,Y) returns one "
"more than the number bytes prior to the first occurrence of Y, or 0 if Y "
"does not occur anywhere within X.  If both arguments X and Y to instr(X,Y) "
"are non-NULL and are not BLOBs then both are interpreted as strings.  If "
"either X or Y are NULL in instr(X,Y) then the result is NULL."
msgstr ""

#. type: Content of: <html><body><div><p><dl>
#: sedout/lang_corefunc.html:300
msgid "<a name=\"last_insert_rowid\"></a>"
msgstr ""

#. type: Content of: <html><body><div><p><dl><dt>
#: sedout/lang_corefunc.html:301
msgid "<b>last_insert_rowid()</b>"
msgstr ""

#. type: Content of: <html><body><div><p><dl><dd>
#: sedout/lang_corefunc.html:302
msgid ""
"The last_insert_rowid() function returns the <a "
"href=\"lang_createtable.html#rowid\">ROWID</a> of the last row insert from "
"the database connection which invoked the function.  The last_insert_rowid() "
"SQL function is a wrapper around the <a "
"href=\"c3ref/last_insert_rowid.html\">sqlite3_last_insert_rowid()</a> C/C++ "
"interface function."
msgstr ""

#. type: Content of: <html><body><div><p><dl>
#: sedout/lang_corefunc.html:308
msgid "<a name=\"length\"></a>"
msgstr ""

#. type: Content of: <html><body><div><p><dl><dt>
#: sedout/lang_corefunc.html:309
msgid "<b>length(<i>X</i>)</b>"
msgstr ""

#. type: Content of: <html><body><div><p><dl><dd>
#: sedout/lang_corefunc.html:310
msgid ""
"For a string value X, the length(X) function returns the number of "
"characters (not bytes) in X prior to the first NUL character.  Since SQLite "
"strings do not normally contain NUL characters, the length(X)  function will "
"usually return the total number of characters in the string X.  For a blob "
"value X, length(X) returns the number of bytes in the blob.  If X is NULL "
"then length(X) is NULL.  If X is numeric then length(X) returns the length "
"of a string representation of X.  Note that for strings, the length(X) "
"function returns the <i>character</i> length of the string, not the byte "
"length.  The character length is the number of characters in the string.  "
"The character length is always different from the byte length for UTF-16 "
"strings, and can be different from the byte length for UTF-8 strings if the "
"string contains multi-byte characters.  For BLOB values, length(X) always "
"returns the byte-length of the BLOB.  For string values, length(X) must read "
"the entire string into memory in order to compute the character length.  But "
"for BLOB values, that is not necessary as SQLite knows how many bytes are in "
"the BLOB.  Hence, for multi-megabyte values, the length(X) function is "
"usually much faster for BLOBs than for strings, since it does not need to "
"load the value into memory."
msgstr ""

#. type: Content of: <html><body><div><p><dl>
#: sedout/lang_corefunc.html:333
msgid "<a name=\"like\"></a>"
msgstr ""

#. type: Content of: <html><body><div><p><dl><dt><b>
#: sedout/lang_corefunc.html:334
msgid "<b>like(<i>X</i>,<i>Y</i>)"
msgstr ""

#. type: Content of: <html><body><div><p><dl><dt>
#: sedout/lang_corefunc.html:334
msgid "like(<i>X</i>,<i>Y</i>,<i>Z</i>)</b>"
msgstr ""

#. type: Content of: <html><body><div><p><dl><dd>
#: sedout/lang_corefunc.html:335
msgid ""
"The like() function is used to implement the \"<b>Y LIKE X &#91;ESCAPE "
"Z&#93;</b>\" expression.  If the optional ESCAPE clause is present, then the "
"like() function is invoked with three arguments.  Otherwise, it is invoked "
"with two arguments only. Note that the X and Y parameters are reversed in "
"the like() function relative to the infix <a "
"href=\"lang_expr.html#like\">LIKE</a> operator.  X is the pattern and Y is "
"the string to match against that pattern.  Hence, the following expressions "
"are equivalent:"
msgstr ""

#. type: Content of: <html><body><div><p><dl><dd><blockquote><pre>
#: sedout/lang_corefunc.html:344
#, no-wrap
msgid ""
"     name LIKE '%neon%'\n"
"     like('%neon%',name)\n"
"  "
msgstr ""

#. type: Content of: <html><body><div><p><dl><dd>
#: sedout/lang_corefunc.html:347
msgid ""
"The <a href=\"c3ref/create_function.html\">sqlite3_create_function()</a> "
"interface can be used to override the like() function and thereby change the "
"operation of the <a href=\"lang_expr.html#like\">LIKE</a> operator.  When "
"overriding the like() function, it may be important to override both the two "
"and three argument versions of the like()  function. Otherwise, different "
"code may be called to implement the <a href=\"lang_expr.html#like\">LIKE</a> "
"operator depending on whether or not an ESCAPE clause was specified."
msgstr ""

#. type: Content of: <html><body><div><p><dl>
#: sedout/lang_corefunc.html:355
msgid "<a name=\"likelihood\"></a>"
msgstr ""

#. type: Content of: <html><body><div><p><dl><dt>
#: sedout/lang_corefunc.html:356
msgid "<b>likelihood(<i>X</i>,<i>Y</i>)</b>"
msgstr ""

#. type: Content of: <html><body><div><p><dl><dd>
#: sedout/lang_corefunc.html:357
msgid ""
"The likelihood(X,Y) function returns argument X unchanged.  The value Y in "
"likelihood(X,Y) must be a floating point constant between 0.0 and 1.0, "
"inclusive.  The likelihood(X) function is a no-op that the code generator "
"optimizes away so that it consumes no CPU cycles during run-time (that is, "
"during calls to <a href=\"c3ref/step.html\">sqlite3_step()</a>).  The "
"purpose of the likelihood(X,Y) function is to provide a hint to the query "
"planner that the argument X is a boolean that is true with a probability of "
"approximately Y.  The <a "
"href=\"lang_corefunc.html#unlikely\">unlikely(X)</a> function is short-hand "
"for likelihood(X,0.0625).  The <a "
"href=\"lang_corefunc.html#likely\">likely(X)</a> function is short-hand for "
"likelihood(X,0.9375)."
msgstr ""

#. type: Content of: <html><body><div><p><dl>
#: sedout/lang_corefunc.html:369
msgid "<a name=\"likely\"></a>"
msgstr ""

#. type: Content of: <html><body><div><p><dl><dt>
#: sedout/lang_corefunc.html:370
msgid "<b>likely(<i>X</i>)</b>"
msgstr ""

#. type: Content of: <html><body><div><p><dl><dd>
#: sedout/lang_corefunc.html:371
msgid ""
"The likely(X) function returns the argument X unchanged.  The likely(X) "
"function is a no-op that the code generator optimizes away so that it "
"consumes no CPU cycles at run-time (that is, during calls to <a "
"href=\"c3ref/step.html\">sqlite3_step()</a>).  The purpose of the likely(X) "
"function is to provide a hint to the query planner that the argument X is a "
"boolean value that is usually true. The likely(X) function is equivalent to "
"<a href=\"lang_corefunc.html#likelihood\">likelihood</a>(X,0.9375). See "
"also: <a href=\"lang_corefunc.html#unlikely\">unlikely(X)</a>."
msgstr ""

#. type: Content of: <html><body><div><p><dl>
#: sedout/lang_corefunc.html:380
msgid "<a name=\"load_extension\"></a>"
msgstr ""

#. type: Content of: <html><body><div><p><dl><dt><b>
#: sedout/lang_corefunc.html:381
msgid "<b>load_extension(<i>X</i>)"
msgstr ""

#. type: Content of: <html><body><div><p><dl><dt>
#: sedout/lang_corefunc.html:381
msgid "load_extension(<i>X</i>,<i>Y</i>)</b>"
msgstr ""

#. type: Content of: <html><body><div><p><dl><dd>
#: sedout/lang_corefunc.html:382
msgid ""
"The load_extension(X,Y) function loads <a href=\"loadext.html\">SQLite "
"extensions</a> out of the shared library file named X using the entry point "
"Y.  The result of load_extension()  is always a NULL.  If Y is omitted then "
"the default entry point name is used.  The load_extension() function raises "
"an exception if the extension fails to load or initialize correctly.  The "
"load_extension() function will fail if the extension attempts to modify or "
"delete an SQL function or collating sequence.  The extension can add new "
"functions or collating sequences, but cannot modify or delete existing "
"functions or collating sequences because those functions and/or collating "
"sequences might be used elsewhere in the currently running SQL statement.  "
"To load an extension that changes or deletes functions or collating "
"sequences, use the <a "
"href=\"c3ref/load_extension.html\">sqlite3_load_extension()</a> C-language "
"API.  For security reasons, extension loading is disabled by default and "
"must be enabled by a prior call to <a "
"href=\"c3ref/enable_load_extension.html\">sqlite3_enable_load_extension()</a>."
msgstr ""

#. type: Content of: <html><body><div><p><dl>
#: sedout/lang_corefunc.html:400
msgid "<a name=\"lower\"></a>"
msgstr ""

#. type: Content of: <html><body><div><p><dl><dt>
#: sedout/lang_corefunc.html:401
msgid "<b>lower(<i>X</i>)</b>"
msgstr ""

#. type: Content of: <html><body><div><p><dl><dd>
#: sedout/lang_corefunc.html:402
msgid ""
"The lower(X) function returns a copy of string X with all ASCII characters "
"converted to lower case.  The default built-in lower() function works for "
"ASCII characters only.  To do case conversions on non-ASCII characters, load "
"the ICU extension."
msgstr ""

#. type: Content of: <html><body><div><p><dl>
#: sedout/lang_corefunc.html:407
msgid "<a name=\"ltrim\"></a>"
msgstr ""

#. type: Content of: <html><body><div><p><dl><dt><b>
#: sedout/lang_corefunc.html:408
msgid "<b>ltrim(<i>X</i>)"
msgstr ""

#. type: Content of: <html><body><div><p><dl><dt>
#: sedout/lang_corefunc.html:408
msgid "ltrim(<i>X</i>,<i>Y</i>)</b>"
msgstr ""

#. type: Content of: <html><body><div><p><dl><dd>
#: sedout/lang_corefunc.html:409
msgid ""
"The ltrim(X,Y) function returns a string formed by removing any and all "
"characters that appear in Y from the left side of X.  If the Y argument is "
"omitted, ltrim(X) removes spaces from the left side of X."
msgstr ""

#. type: Content of: <html><body><div><p><dl>
#: sedout/lang_corefunc.html:414
msgid "<a name=\"max_scalar\"></a>"
msgstr ""

#. type: Content of: <html><body><div><p><dl><dt>
#: sedout/lang_corefunc.html:415
msgid "<b>max(<i>X</i>,<i>Y</i>,...)</b>"
msgstr ""

#. type: Content of: <html><body><div><p><dl><dd>
#: sedout/lang_corefunc.html:416
msgid ""
"The multi-argument max() function returns the argument with the maximum "
"value, or return NULL if any argument is NULL.  The multi-argument max() "
"function searches its arguments from left to right for an argument that "
"defines a collating function and uses that collating function for all string "
"comparisons.  If none of the arguments to max()  define a collating "
"function, then the BINARY collating function is used.  Note that "
"<b>max()</b> is a simple function when it has 2 or more arguments but "
"operates as an <a href=\"lang_aggfunc.html#max_agg\">aggregate function</a> "
"if given only a single argument."
msgstr ""

#. type: Content of: <html><body><div><p><dl>
#: sedout/lang_corefunc.html:426
msgid "<a name=\"min_scalar\"></a>"
msgstr ""

#. type: Content of: <html><body><div><p><dl><dt>
#: sedout/lang_corefunc.html:427
msgid "<b>min(<i>X</i>,<i>Y</i>,...)</b>"
msgstr ""

#. type: Content of: <html><body><div><p><dl><dd>
#: sedout/lang_corefunc.html:428
msgid ""
"The multi-argument min() function returns the argument with the minimum "
"value.  The multi-argument min() function searches its arguments from left "
"to right for an argument that defines a collating function and uses that "
"collating function for all string comparisons.  If none of the arguments to "
"min()  define a collating function, then the BINARY collating function is "
"used.  Note that <b>min()</b> is a simple function when it has 2 or more "
"arguments but operates as an <a href=\"lang_aggfunc.html#min_agg\">aggregate "
"function</a> if given only a single argument."
msgstr ""

#. type: Content of: <html><body><div><p><dl>
#: sedout/lang_corefunc.html:439
msgid "<a name=\"nullif\"></a>"
msgstr ""

#. type: Content of: <html><body><div><p><dl><dt>
#: sedout/lang_corefunc.html:440
msgid "<b>nullif(<i>X</i>,<i>Y</i>)</b>"
msgstr ""

#. type: Content of: <html><body><div><p><dl><dd>
#: sedout/lang_corefunc.html:441
msgid ""
"The nullif(X,Y) function returns its first argument if the arguments are "
"different and NULL if the arguments are the same.  The nullif(X,Y) function "
"searches its arguments from left to right for an argument that defines a "
"collating function and uses that collating function for all string "
"comparisons.  If neither argument to nullif() defines a collating function "
"then the BINARY collating function is used."
msgstr ""

#. type: Content of: <html><body><div><p><dl>
#: sedout/lang_corefunc.html:448
msgid "<a name=\"printf\"></a>"
msgstr ""

#. type: Content of: <html><body><div><p><dl><dt>
#: sedout/lang_corefunc.html:449
msgid "<b>printf(<i>FORMAT</i>,...)</b>"
msgstr ""

#. type: Content of: <html><body><div><p><dl><dd>
#: sedout/lang_corefunc.html:450
msgid ""
"The printf() SQL function is an alias for the <a "
"href=\"lang_corefunc.html#format\">format() SQL function</a>.  The format() "
"SQL function was original named printf(). But the name was later changed to "
"format() for compatibility with other database engines.  The original "
"printf() name is retained as an alias so as not to break any legacy code."
msgstr ""

#. type: Content of: <html><body><div><p><dl>
#: sedout/lang_corefunc.html:455
msgid "<a name=\"quote\"></a>"
msgstr ""

#. type: Content of: <html><body><div><p><dl><dt>
#: sedout/lang_corefunc.html:456
msgid "<b>quote(<i>X</i>)</b>"
msgstr ""

#. type: Content of: <html><body><div><p><dl><dd>
#: sedout/lang_corefunc.html:457
msgid ""
"The quote(X) function returns the text of an SQL literal which is the value "
"of its argument suitable for inclusion into an SQL statement.  Strings are "
"surrounded by single-quotes with escapes on interior quotes as needed.  "
"BLOBs are encoded as hexadecimal literals.  Strings with embedded NUL "
"characters cannot be represented as string literals in SQL and hence the "
"returned string literal is truncated prior to the first NUL."
msgstr ""

#. type: Content of: <html><body><div><p><dl>
#: sedout/lang_corefunc.html:465
msgid "<a name=\"random\"></a>"
msgstr ""

#. type: Content of: <html><body><div><p><dl><dt>
#: sedout/lang_corefunc.html:466
msgid "<b>random()</b>"
msgstr ""

#. type: Content of: <html><body><div><p><dl><dd>
#: sedout/lang_corefunc.html:467
msgid ""
"The random() function returns a pseudo-random integer between "
"-9223372036854775808 and +9223372036854775807."
msgstr ""

#. type: Content of: <html><body><div><p><dl>
#: sedout/lang_corefunc.html:470
msgid "<a name=\"randomblob\"></a>"
msgstr ""

#. type: Content of: <html><body><div><p><dl><dt>
#: sedout/lang_corefunc.html:471
msgid "<b>randomblob(<i>N</i>)</b>"
msgstr ""

#. type: Content of: <html><body><div><p><dl><dd>
#: sedout/lang_corefunc.html:472
msgid ""
"The randomblob(N) function return an N-byte blob containing pseudo-random "
"bytes. If N is less than 1 then a 1-byte random blob is returned.  Hint: "
"applications can generate globally unique identifiers using this function "
"together with <a href=\"lang_corefunc.html#hex\">hex()</a> and/or <a "
"href=\"lang_corefunc.html#lower\">lower()</a> like this:"
msgstr ""

#. type: Content of: <html><body><div><p><dl><dd><blockquote>
#: sedout/lang_corefunc.html:480
msgid "hex(randomblob(16))"
msgstr ""

#. type: Content of: <html><body><div><p><dl><dd><blockquote>
#: sedout/lang_corefunc.html:481
msgid "lower(hex(randomblob(16)))"
msgstr ""

#. type: Content of: <html><body><div><p><dl>
#: sedout/lang_corefunc.html:484
msgid "<a name=\"replace\"></a>"
msgstr ""

#. type: Content of: <html><body><div><p><dl><dt>
#: sedout/lang_corefunc.html:485
msgid "<b>replace(<i>X</i>,<i>Y</i>,<i>Z</i>)</b>"
msgstr ""

#. type: Content of: <html><body><div><p><dl><dd>
#: sedout/lang_corefunc.html:486
msgid ""
"The replace(X,Y,Z) function returns a string formed by substituting string Z "
"for every occurrence of string Y in string X.  The <a "
"href=\"datatype3.html#collation\">BINARY</a> collating sequence is used for "
"comparisons.  If Y is an empty string then return X unchanged.  If Z is not "
"initially a string, it is cast to a UTF-8 string prior to processing."
msgstr ""

#. type: Content of: <html><body><div><p><dl>
#: sedout/lang_corefunc.html:492
msgid "<a name=\"round\"></a>"
msgstr ""

#. type: Content of: <html><body><div><p><dl><dt><b>
#: sedout/lang_corefunc.html:493
msgid "<b>round(<i>X</i>)"
msgstr ""

#. type: Content of: <html><body><div><p><dl><dt>
#: sedout/lang_corefunc.html:493
msgid "round(<i>X</i>,<i>Y</i>)</b>"
msgstr ""

#. type: Content of: <html><body><div><p><dl><dd>
#: sedout/lang_corefunc.html:494
msgid ""
"The round(X,Y) function returns a floating-point value X rounded to Y digits "
"to the right of the decimal point.  If the Y argument is omitted or "
"negative, it is taken to be 0."
msgstr ""

#. type: Content of: <html><body><div><p><dl>
#: sedout/lang_corefunc.html:498
msgid "<a name=\"rtrim\"></a>"
msgstr ""

#. type: Content of: <html><body><div><p><dl><dt><b>
#: sedout/lang_corefunc.html:499
msgid "<b>rtrim(<i>X</i>)"
msgstr ""

#. type: Content of: <html><body><div><p><dl><dt>
#: sedout/lang_corefunc.html:499
msgid "rtrim(<i>X</i>,<i>Y</i>)</b>"
msgstr ""

#. type: Content of: <html><body><div><p><dl><dd>
#: sedout/lang_corefunc.html:500
msgid ""
"The rtrim(X,Y) function returns a string formed by removing any and all "
"characters that appear in Y from the right side of X.  If the Y argument is "
"omitted, rtrim(X) removes spaces from the right side of X."
msgstr ""

#. type: Content of: <html><body><div><p><dl>
#: sedout/lang_corefunc.html:505
msgid "<a name=\"sign\"></a>"
msgstr ""

#. type: Content of: <html><body><div><p><dl><dt>
#: sedout/lang_corefunc.html:506
msgid "<b>sign(<i>X</i>)</b>"
msgstr ""

#. type: Content of: <html><body><div><p><dl><dd>
#: sedout/lang_corefunc.html:507
msgid ""
"The sign(X) function returns -1, 0, or +1 if the argument X is a numeric "
"value that is negative, zero, or positive, respectively.  If the argument to "
"sign(X) is NULL or is a string or blob that cannot be losslessly converted "
"into a number, then sign(X) returns NULL."
msgstr ""

#. type: Content of: <html><body><div><p><dl>
#: sedout/lang_corefunc.html:512
msgid "<a name=\"soundex\"></a>"
msgstr ""

#. type: Content of: <html><body><div><p><dl><dt>
#: sedout/lang_corefunc.html:513
msgid "<b>soundex(<i>X</i>)</b>"
msgstr ""

#. type: Content of: <html><body><div><p><dl><dd>
#: sedout/lang_corefunc.html:514
msgid ""
"The soundex(X) function returns a string that is the soundex encoding of the "
"string X.  The string \"?000\" is returned if the argument is NULL or "
"contains no ASCII alphabetic characters.  This function is omitted from "
"SQLite by default.  It is only available if the <a "
"href=\"compile.html#soundex\">SQLITE_SOUNDEX</a> compile-time option is used "
"when SQLite is built."
msgstr ""

#. type: Content of: <html><body><div><p><dl>
#: sedout/lang_corefunc.html:522
msgid "<a name=\"sqlite_compileoption_get\"></a>"
msgstr ""

#. type: Content of: <html><body><div><p><dl><dt>
#: sedout/lang_corefunc.html:523
msgid "<b>sqlite_compileoption_get(<i>N</i>)</b>"
msgstr ""

#. type: Content of: <html><body><div><p><dl><dd>
#: sedout/lang_corefunc.html:524
msgid ""
"The sqlite_compileoption_get() SQL function is a wrapper around the <a "
"href=\"c3ref/compileoption_get.html\">sqlite3_compileoption_get()</a> C/C++ "
"function.  This routine returns the N-th compile-time option used to build "
"SQLite or NULL if N is out of range.  See also the <a "
"href=\"pragma.html#pragma_compile_options\">compile_options pragma</a>."
msgstr ""

#. type: Content of: <html><body><div><p><dl>
#: sedout/lang_corefunc.html:529
msgid "<a name=\"sqlite_compileoption_used\"></a>"
msgstr ""

#. type: Content of: <html><body><div><p><dl><dt>
#: sedout/lang_corefunc.html:530
msgid "<b>sqlite_compileoption_used(<i>X</i>)</b>"
msgstr ""

#. type: Content of: <html><body><div><p><dl><dd>
#: sedout/lang_corefunc.html:531
msgid ""
"The sqlite_compileoption_used() SQL function is a wrapper around the <a "
"href=\"c3ref/compileoption_get.html\">sqlite3_compileoption_used()</a> C/C++ "
"function.  When the argument X to sqlite_compileoption_used(X) is a string "
"which is the name of a compile-time option, this routine returns true (1) or "
"false (0) depending on whether or not that option was used during the build."
msgstr ""

#. type: Content of: <html><body><div><p><dl>
#: sedout/lang_corefunc.html:538
msgid "<a name=\"sqlite_offset\"></a>"
msgstr ""

#. type: Content of: <html><body><div><p><dl><dt>
#: sedout/lang_corefunc.html:539
msgid "<b>sqlite_offset(<i>X</i>)</b>"
msgstr ""

#. type: Content of: <html><body><div><p><dl><dd>
#: sedout/lang_corefunc.html:540
msgid ""
"The sqlite_offset(X) function returns the byte offset in the database file "
"for the beginning of the record from which value would be read.  If X is not "
"a column in an ordinary table, then sqlite_offset(X) returns NULL.  The "
"value returned by sqlite_offset(X) might reference either the original table "
"or an index, depending on the query.  If the value X would normally be "
"extracted from an index, the sqlite_offset(X) returns the offset to the "
"corresponding index record.  If the value X would be extracted from the "
"original table, then sqlite_offset(X) returns the offset to the table "
"record.  The sqlite_offset(X) SQL function is only available if SQLite is "
"built using the <a "
"href=\"compile.html#enable_offset_sql_func\">-DSQLITE_ENABLE_OFFSET_SQL_FUNC</a> "
"compile-time option."
msgstr ""

#. type: Content of: <html><body><div><p><dl>
#: sedout/lang_corefunc.html:553
msgid "<a name=\"sqlite_source_id\"></a>"
msgstr ""

#. type: Content of: <html><body><div><p><dl><dt>
#: sedout/lang_corefunc.html:554
msgid "<b>sqlite_source_id()</b>"
msgstr ""

#. type: Content of: <html><body><div><p><dl><dd>
#: sedout/lang_corefunc.html:555
msgid ""
"The sqlite_source_id() function returns a string that identifies the "
"specific version of the source code that was used to build the SQLite "
"library.  The string returned by sqlite_source_id() is the date and time "
"that the source code was checked in followed by the SHA3-256 hash for that "
"check-in.  This function is an SQL wrapper around the <a "
"href=\"c3ref/libversion.html\">sqlite3_sourceid()</a> C interface."
msgstr ""

#. type: Content of: <html><body><div><p><dl>
#: sedout/lang_corefunc.html:562
msgid "<a name=\"sqlite_version\"></a>"
msgstr ""

#. type: Content of: <html><body><div><p><dl><dt>
#: sedout/lang_corefunc.html:563
msgid "<b>sqlite_version()</b>"
msgstr ""

#. type: Content of: <html><body><div><p><dl><dd>
#: sedout/lang_corefunc.html:564
msgid ""
"The sqlite_version() function returns the version string for the SQLite "
"library that is running.  This function is an SQL wrapper around the <a "
"href=\"c3ref/libversion.html\">sqlite3_libversion()</a> C-interface."
msgstr ""

#. type: Content of: <html><body><div><p><dl>
#: sedout/lang_corefunc.html:568
msgid "<a name=\"substr\"></a>"
msgstr ""

#. type: Content of: <html><body><div><p><dl><dt><b>
#: sedout/lang_corefunc.html:569
msgid "<b>substr(<i>X</i>,<i>Y</i>,<i>Z</i>)"
msgstr ""

#. type: Content of: <html><body><div><p><dl><dt><b>
#: sedout/lang_corefunc.html:569
msgid "substr(<i>X</i>,<i>Y</i>)"
msgstr ""

#. type: Content of: <html><body><div><p><dl><dt><b>
#: sedout/lang_corefunc.html:569
msgid "substring(<i>X</i>,<i>Y</i>,<i>Z</i>)"
msgstr ""

#. type: Content of: <html><body><div><p><dl><dt>
#: sedout/lang_corefunc.html:569
msgid "substring(<i>X</i>,<i>Y</i>)</b>"
msgstr ""

#. type: Content of: <html><body><div><p><dl><dd>
#: sedout/lang_corefunc.html:570
msgid ""
"The substr(X,Y,Z) function returns a substring of input string X that begins "
"with the Y-th character and which is Z characters long.  If Z is omitted "
"then substr(X,Y) returns all characters through the end of the string X "
"beginning with the Y-th.  The left-most character of X is number 1.  If Y is "
"negative then the first character of the substring is found by counting from "
"the right rather than the left.  If Z is negative then the abs(Z) characters "
"preceding the Y-th character are returned.  If X is a string then characters "
"indices refer to actual UTF-8 characters.  If X is a BLOB then the indices "
"refer to bytes.  \"substring()\" is an alias for \"substr()\" beginning with "
"SQLite version 3.34."
msgstr ""

#. type: Content of: <html><body><div><p><dl>
#: sedout/lang_corefunc.html:583
msgid "<a name=\"total_changes\"></a>"
msgstr ""

#. type: Content of: <html><body><div><p><dl><dt>
#: sedout/lang_corefunc.html:584
msgid "<b>total_changes()</b>"
msgstr ""

#. type: Content of: <html><body><div><p><dl><dd>
#: sedout/lang_corefunc.html:585
msgid ""
"The total_changes() function returns the number of row changes caused by "
"INSERT, UPDATE or DELETE statements since the current database connection "
"was opened.  This function is a wrapper around the <a "
"href=\"c3ref/total_changes.html\">sqlite3_total_changes64()</a> C/C++ "
"interface."
msgstr ""

#. type: Content of: <html><body><div><p><dl>
#: sedout/lang_corefunc.html:591
msgid "<a name=\"trim\"></a>"
msgstr ""

#. type: Content of: <html><body><div><p><dl><dt><b>
#: sedout/lang_corefunc.html:592
msgid "<b>trim(<i>X</i>)"
msgstr ""

#. type: Content of: <html><body><div><p><dl><dt>
#: sedout/lang_corefunc.html:592
msgid "trim(<i>X</i>,<i>Y</i>)</b>"
msgstr ""

#. type: Content of: <html><body><div><p><dl><dd>
#: sedout/lang_corefunc.html:593
msgid ""
"The trim(X,Y) function returns a string formed by removing any and all "
"characters that appear in Y from both ends of X.  If the Y argument is "
"omitted, trim(X) removes spaces from both ends of X."
msgstr ""

#. type: Content of: <html><body><div><p><dl>
#: sedout/lang_corefunc.html:597
msgid "<a name=\"typeof\"></a>"
msgstr ""

#. type: Content of: <html><body><div><p><dl><dt>
#: sedout/lang_corefunc.html:598
msgid "<b>typeof(<i>X</i>)</b>"
msgstr ""

#. type: Content of: <html><body><div><p><dl><dd>
#: sedout/lang_corefunc.html:599
msgid ""
"The typeof(X) function returns a string that indicates the <a "
"href=\"datatype3.html\">datatype</a> of the expression X: \"null\", "
"\"integer\", \"real\", \"text\", or \"blob\"."
msgstr ""

#. type: Content of: <html><body><div><p><dl>
#: sedout/lang_corefunc.html:602
msgid "<a name=\"unhex\"></a>"
msgstr ""

#. type: Content of: <html><body><div><p><dl><dt><b>
#: sedout/lang_corefunc.html:603
msgid "<b>unhex(<i>X</i>)"
msgstr ""

#. type: Content of: <html><body><div><p><dl><dt>
#: sedout/lang_corefunc.html:603
msgid "unhex(<i>X</i>,<i>Y</i>)</b>"
msgstr ""

#. type: Content of: <html><body><div><p><dl><dd>
#: sedout/lang_corefunc.html:604
msgid ""
"The unhex(X,Y) function returns a BLOB value which is the decoding of the "
"hexadecimal string X.  If X contains any characters that are not hexadecimal "
"digits and which are not in Y, then unhex(X,Y) returns NULL. If Y is "
"omitted, it is understood to be an empty string and hence X must be a pure "
"hexadecimal string.  All hexadecimal digits in X must occur in pairs, with "
"both digits of each pair beginning immediately adjacent to one another, or "
"else unhex(X,Y)  returns NULL.  If either parameter X or Y is NULL, then "
"unhex(X,Y) returns NULL.  The X input may contain an arbitrary mix of upper "
"and lower case hexadecimal digits.  Hexadecimal digits in Y have no affect "
"on the translation of X.  Only characters in Y that are not hexadecimal "
"digits are ignored in X.  See also: <a "
"href=\"lang_corefunc.html#hex\">hex()</a>"
msgstr ""

#. type: Content of: <html><body><div><p><dl>
#: sedout/lang_corefunc.html:620
msgid "<a name=\"unicode\"></a>"
msgstr ""

#. type: Content of: <html><body><div><p><dl><dt>
#: sedout/lang_corefunc.html:621
msgid "<b>unicode(<i>X</i>)</b>"
msgstr ""

#. type: Content of: <html><body><div><p><dl><dd>
#: sedout/lang_corefunc.html:622
msgid ""
"The unicode(X) function returns the numeric unicode code point corresponding "
"to the first character of the string X.  If the argument to unicode(X) is "
"not a string then the result is undefined."
msgstr ""

#. type: Content of: <html><body><div><p><dl>
#: sedout/lang_corefunc.html:626
msgid "<a name=\"unlikely\"></a>"
msgstr ""

#. type: Content of: <html><body><div><p><dl><dt>
#: sedout/lang_corefunc.html:627
msgid "<b>unlikely(<i>X</i>)</b>"
msgstr ""

#. type: Content of: <html><body><div><p><dl><dd>
#: sedout/lang_corefunc.html:628
msgid ""
"The unlikely(X) function returns the argument X unchanged.  The unlikely(X) "
"function is a no-op that the code generator optimizes away so that it "
"consumes no CPU cycles at run-time (that is, during calls to <a "
"href=\"c3ref/step.html\">sqlite3_step()</a>).  The purpose of the "
"unlikely(X) function is to provide a hint to the query planner that the "
"argument X is a boolean value that is usually not true. The unlikely(X) "
"function is equivalent to <a "
"href=\"lang_corefunc.html#likelihood\">likelihood</a>(X, 0.0625)."
msgstr ""

#. type: Content of: <html><body><div><p><dl>
#: sedout/lang_corefunc.html:637
msgid "<a name=\"upper\"></a>"
msgstr ""

#. type: Content of: <html><body><div><p><dl><dt>
#: sedout/lang_corefunc.html:638
msgid "<b>upper(<i>X</i>)</b>"
msgstr ""

#. type: Content of: <html><body><div><p><dl><dd>
#: sedout/lang_corefunc.html:639
msgid ""
"The upper(X) function returns a copy of input string X in which all "
"lower-case ASCII characters are converted to their upper-case equivalent."
msgstr ""

#. type: Content of: <html><body><div><p><dl>
#: sedout/lang_corefunc.html:642
msgid "<a name=\"zeroblob\"></a>"
msgstr ""

#. type: Content of: <html><body><div><p><dl><dt>
#: sedout/lang_corefunc.html:643
msgid "<b>zeroblob(<i>N</i>)</b>"
msgstr ""

#. type: Content of: <html><body><div><p><dl><dd>
#: sedout/lang_corefunc.html:644
msgid ""
"The zeroblob(N) function returns a BLOB consisting of N bytes of 0x00.  "
"SQLite manages these zeroblobs very efficiently.  Zeroblobs can be used to "
"reserve space for a BLOB that is later written using <a "
"href=\"c3ref/blob_open.html\">incremental BLOB I/O</a>.  This SQL function "
"is implemented using the <a "
"href=\"c3ref/result_blob.html\">sqlite3_result_zeroblob()</a> routine from "
"the C/C++ interface."
msgstr ""

#. type: Content of: <html><body><div><p><p>
#: sedout/lang_corefunc.html:653
msgid ""
"<small><i>This page last modified on <a "
"href=\"https://sqlite.org/docsrc/honeypot\" id=\"mtimelink\" "
"data-href=\"https://sqlite.org/docsrc/finfo/pages/lang_corefunc.in?m=1a94b5b49f\">2023-01-27 "
"13:42:47</a> UTC </i></small>"
msgstr ""
