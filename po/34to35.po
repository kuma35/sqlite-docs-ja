# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR "sqlite3"
# This file is distributed under the same license as the "sqlite3-docs-ja" package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
msgid ""
msgstr ""
"Project-Id-Version: sqlite3-docs-ja 0.0\n"
"POT-Creation-Date: 2023-03-16 09:59+0900\n"
"PO-Revision-Date: 2023-03-17 02:18+0900\n"
"Last-Translator: kuma35\n"
"Language-Team: Japanese\n"
"Language: ja_JP\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. type: Content of: <html><head><meta><meta><link><title>
#: sedout/34to35.html:6
msgid "SQLite Changes From Version 3.4.2 To 3.5.0"
msgstr ""

#. type: Content of: <html><body><div><a>
#: sedout/34to35.html:11
msgid "<a href=\"index.html\">"
msgstr "<a href=\"index.html\">"

#. type: Attribute 'alt' of: <html><body><div><a><img>
#: sedout/34to35.html:12
msgid "SQLite"
msgstr ""

#. type: Content of: <html><body><div><div>
#: sedout/34to35.html:16
msgid "Small. Fast. Reliable."
msgstr ""

#. type: Content of: <html><body><div><div><br>
#: sedout/34to35.html:16
msgid "Choose any three."
msgstr ""

#. type: Content of: <html><body><div><div><ul><li>
#: sedout/34to35.html:20
msgid "<a href=\"index.html\">Home</a>"
msgstr "<a href=\"index.html\">Home</a>"

#. type: Content of: <html><body><div><div><ul><li><li>
#: sedout/34to35.html:21
msgid ""
"<a href=\"javascript:void(0)\" onclick='toggle_div(\"submenu\")'>Menu</a>"
msgstr "<a href=\"javascript:void(0)\" onclick='toggle_div(\"submenu\")'>Menu</a>"

#. type: Content of: <html><body><div><div><ul><li>
#: sedout/34to35.html:22 sedout/34to35.html:34
msgid "<a href='about.html'>About</a>"
msgstr "<a href='about.html'>About</a>"

#. type: Content of: <html><body><div><div><ul><li><li><li><li>
#: sedout/34to35.html:23
msgid "<a href=\"docs.html\">Documentation</a>"
msgstr "<a href=\"docs.html\">Documentation</a>"

#. type: Content of: <html><body><div><div><ul><li><li><li><li><li>
#: sedout/34to35.html:24
msgid "<a href=\"download.html\">Download</a>"
msgstr "<a href=\"download.html\">Download</a>"

#. type: Content of: <html><body><div><div><ul><li><li><li><li><li><li>
#: sedout/34to35.html:25
msgid "<a href='copyright.html'>License</a>"
msgstr "<a href='copyright.html'>License</a>"

#. type: Content of: <html><body><div><div><ul><li><li><li><li><li><li><li>
#: sedout/34to35.html:26
msgid "<a href=\"support.html\">Support</a>"
msgstr "<a href=\"support.html\">Support</a>"

#. type: Content of: <html><body><div><div><ul><li><li><li><li><li><li><li><li>
#: sedout/34to35.html:27
msgid "<a href=\"prosupport.html\">Purchase</a>"
msgstr "<a href=\"prosupport.html\">Purchase</a>"

#. type: Content of: <html><body><div><div><ul><li><li><li><li><li><li><li><li><li>
#: sedout/34to35.html:29
msgid "<a href=\"javascript:void(0)\" onclick='toggle_search()'>Search</a>"
msgstr "<a href=\"javascript:void(0)\" onclick='toggle_search()'>Search</a>"

#. type: Content of: <html><body><div><div><ul><li><li>
#: sedout/34to35.html:35
msgid "<a href='docs.html'>Documentation</a>"
msgstr "<a href='docs.html'>Documentation</a>"

#. type: Content of: <html><body><div><div><ul><li><li><li>
#: sedout/34to35.html:36
msgid "<a href='download.html'>Download</a>"
msgstr "<a href='download.html'>Download</a>"

#. type: Content of: <html><body><div><div><ul><li><li><li><li>
#: sedout/34to35.html:37
msgid "<a href='support.html'>Support</a>"
msgstr "<a href='support.html'>Support</a>"

#. type: Content of: <html><body><div><div><ul><li><li><li><li><li>
#: sedout/34to35.html:38
msgid "<a href='prosupport.html'>Purchase</a>"
msgstr "<a href='prosupport.html'>Purchase</a>"

#. type: Content of: <html><body><div><div><form><select>
#: sedout/34to35.html:43
msgid "<select name=\"s\" id=\"searchtype\">"
msgstr "<select name=\"s\" id=\"searchtype\">"

#. type: Content of: <html><body><div><div><form><select><option>
#: sedout/34to35.html:44
msgid "Search Documentation"
msgstr ""

#. type: Content of: <html><body><div><div><form><select><option>
#: sedout/34to35.html:45
msgid "Search Changelog"
msgstr ""

#. type: Content of: <html><body><div><div><form>
#: sedout/34to35.html:46
msgid ""
"</select> <input type=\"text\" name=\"q\" id=\"searchbox\" value=\"\"/> "
"<input type=\"submit\" value=\"Go\"/>"
msgstr "</select> <input type=\"text\" name=\"q\" id=\"searchbox\" value=\"\"/> <input type=\"submit\" value=\"Go\"/>"

#. type: Content of: <html><body><script>
#: sedout/34to35.html:53
msgid ""
"function toggle_div(nm) { var w = document.getElementById(nm); if( w.style."
"display==\"block\" ){ w.style.display = \"none\"; }else{ w.style.display = "
"\"block\"; } } function toggle_search() { var w = document."
"getElementById(\"searchmenu\"); if( w.style.display==\"block\" ){ w.style."
"display = \"none\"; } else { w.style.display = \"block\"; "
"setTimeout(function(){ document.getElementById(\"searchbox\").focus()  }, "
"30); } } function div_off(nm){document.getElementById(nm).style."
"display=\"none\";} window.onbeforeunload = function(e)"
"{div_off(\"submenu\");} /* Disable the Search feature if we are not "
"operating from CGI, since */ /* Search is accomplished using CGI and will "
"not work without it. */ if( !location.origin || !location.origin.match || !"
"location.origin.match(/http/) ){ document."
"getElementById(\"search_menubutton\").style.display = \"none\"; } /* Used by "
"the Hide/Show button beside syntax diagrams, to toggle the */ function "
"hideorshow(btn,obj){ var x = document.getElementById(obj); var b = document."
"getElementById(btn); if( x.style.display!='none' ){ x.style.display = "
"'none'; b.innerHTML='show'; }else{ x.style.display = ''; b."
"innerHTML='hide'; } return false; } var antiRobot = 0; function antiRobotGo()"
"{ if( antiRobot!=3 ) return; antiRobot = 7; var j = document."
"getElementById(\"mtimelink\"); if(j && j.hasAttribute(\"data-href\")) j."
"href=j.getAttribute(\"data-href\"); } function antiRobotDefense(){ document."
"body.onmousedown=function(){ antiRobot |= 2; antiRobotGo(); document.body."
"onmousedown=null; } document.body.onmousemove=function(){ antiRobot |= 2; "
"antiRobotGo(); document.body.onmousemove=null; } setTimeout(function()"
"{ antiRobot |= 1; antiRobotGo(); }, 100)  antiRobotGo(); } "
"antiRobotDefense();"
msgstr "function toggle_div(nm) { var w = document.getElementById(nm); if( w.style.display==\"block\" ){ w.style.display = \"none\"; }else{ w.style.display = \"block\"; } } function toggle_search() { var w = document.getElementById(\"searchmenu\"); if( w.style.display==\"block\" ){ w.style.display = \"none\"; } else { w.style.display = \"block\"; setTimeout(function(){ document.getElementById(\"searchbox\").focus()  }, 30); } } function div_off(nm){document.getElementById(nm).style.display=\"none\";} window.onbeforeunload = function(e){div_off(\"submenu\");} /* Disable the Search feature if we are not operating from CGI, since */ /* Search is accomplished using CGI and will not work without it. */ if( !location.origin || !location.origin.match || !location.origin.match(/http/) ){ document.getElementById(\"search_menubutton\").style.display = \"none\"; } /* Used by the Hide/Show button beside syntax diagrams, to toggle the */ function hideorshow(btn,obj){ var x = document.getElementById(obj); var b = document.getElementById(btn); if( x.style.display!='none' ){ x.style.display = 'none'; b.innerHTML='show'; }else{ x.style.display = ''; b.innerHTML='hide'; } return false; } var antiRobot = 0; function antiRobotGo(){ if( antiRobot!=3 ) return; antiRobot = 7; var j = document.getElementById(\"mtimelink\"); if(j && j.hasAttribute(\"data-href\")) j.href=j.getAttribute(\"data-href\"); } function antiRobotDefense(){ document.body.onmousedown=function(){ antiRobot |= 2; antiRobotGo(); document.body.onmousedown=null; } document.body.onmousemove=function(){ antiRobot |= 2; antiRobotGo(); document.body.onmousemove=null; } setTimeout(function(){ antiRobot |= 1; antiRobotGo(); }, 100)  antiRobotGo(); } antiRobotDefense();"

#. type: Content of: <html><body><h1>
#: sedout/34to35.html:120
msgid "Moving From SQLite 3.4.2 to 3.5.0"
msgstr ""

#. type: Content of: <html><body><p>
#: sedout/34to35.html:121
msgid ""
"SQLite version 3.5.0 (2007-09-04) introduces a new OS interface layer that "
"is incompatible with all prior versions of SQLite.  In addition, a few "
"existing interfaces have been generalized to work across all database "
"connections within a process rather than just all connections within a "
"thread.  The purpose of this article is to describe the changes to 3.5.0 in "
"detail so that users of prior versions of SQLite can judge what, if any, "
"effort will be required to upgrade to newer versions."
msgstr ""

#. type: Content of: <html><body><h2>
#: sedout/34to35.html:130
msgid "1.0 Overview Of Changes"
msgstr ""

#. type: Content of: <html><body><p>
#: sedout/34to35.html:131
msgid ""
"A quick enumeration of the changes in SQLite version 3.5.0 is provided "
"here.  Subsequent sections will describe these changes in more detail."
msgstr ""

#. type: Content of: <html><body><p><ol><li>
#: sedout/34to35.html:137
msgid "The OS interface layer has been completely reworked:"
msgstr ""

#. type: Content of: <html><body><p><ol><li><ol><li>
#: sedout/34to35.html:139
msgid "The undocumented <b>sqlite3_os_switch()</b> interface has been removed."
msgstr ""

#. type: Content of: <html><body><p><ol><li><ol><li>
#: sedout/34to35.html:141
msgid ""
"The <b>SQLITE_ENABLE_REDEF_IO</b> compile-time flag no longer functions.  I/"
"O procedures are now always redefinable."
msgstr ""

#. type: Content of: <html><body><p><ol><li><ol><li>
#: sedout/34to35.html:143
msgid ""
"Three new objects are defined for specifying I/O procedures: <a href=\"c3ref/"
"vfs.html\">sqlite3_vfs</a>, <a href=\"c3ref/file.html\">sqlite3_file</a>, "
"and <a href=\"c3ref/io_methods.html\">sqlite3_io_methods</a>."
msgstr ""

#. type: Content of: <html><body><p><ol><li><ol><li>
#: sedout/34to35.html:145
msgid ""
"Three new interfaces are used to create alternative OS interfaces: <a "
"href=\"c3ref/vfs_find.html\">sqlite3_vfs_register()</a>, <a href=\"c3ref/"
"vfs_find.html\">sqlite3_vfs_unregister()</a>, and <a href=\"c3ref/vfs_find."
"html\">sqlite3_vfs_find()</a>."
msgstr ""

#. type: Content of: <html><body><p><ol><li><ol><li>
#: sedout/34to35.html:148
msgid ""
"A new interface has been added to provided additional control over the "
"creation of new database connections: <a href=\"c3ref/open."
"html\">sqlite3_open_v2()</a>.  The legacy interfaces of <a href=\"c3ref/open."
"html\">sqlite3_open()</a> and <a href=\"c3ref/open.html\">sqlite3_open16()</"
"a> continue to be fully supported."
msgstr ""

#. type: Content of: <html><body><p><ol><li>
#: sedout/34to35.html:153
msgid ""
"The optional shared cache and memory management features that were "
"introduced in version 3.3.0 can now be used across multiple threads within "
"the same process.  Formerly, these extensions only applied to database "
"connections operating within a single thread."
msgstr ""

#. type: Content of: <html><body><p><ol><li><ol><li>
#: sedout/34to35.html:158
msgid ""
"The <a href=\"c3ref/enable_shared_cache."
"html\">sqlite3_enable_shared_cache()</a> interface now applies to all "
"threads within a process, not to just the one thread in which it was run."
msgstr ""

#. type: Content of: <html><body><p><ol><li><ol><li>
#: sedout/34to35.html:161
msgid ""
"The <a href=\"c3ref/soft_heap_limit.html\">sqlite3_soft_heap_limit()</a> "
"interface now applies to all threads within a process, not to just the one "
"thread in which it was run."
msgstr ""

#. type: Content of: <html><body><p><ol><li><ol><li>
#: sedout/34to35.html:163
msgid ""
"The <a href=\"c3ref/release_memory.html\">sqlite3_release_memory()</a> "
"interface will now attempt to reduce the memory usages across all database "
"connections in all threads, not just connections in the thread where the "
"interface is called."
msgstr ""

#. type: Content of: <html><body><p><ol><li><ol><li>
#: sedout/34to35.html:166
msgid ""
"The <a href=\"c3ref/aggregate_count.html\">sqlite3_thread_cleanup()</a> "
"interface has become a no-op."
msgstr ""

#. type: Content of: <html><body><p><ol><li>
#: sedout/34to35.html:168
msgid ""
"Restrictions on the use of the same database connection by multiple threads "
"have been dropped.  It is now safe for multiple threads to use the same "
"database connection at the same time."
msgstr ""

#. type: Content of: <html><body><p><ol><li>
#: sedout/34to35.html:172
msgid ""
"There is now a compile-time option that allows an application to define "
"alternative malloc()/free() implementations without having to modify any "
"core SQLite code."
msgstr ""

#. type: Content of: <html><body><p><ol><li>
#: sedout/34to35.html:175
msgid ""
"There is now a compile-time option that allows an application to define "
"alternative mutex implementations without having to modify any core SQLite "
"code."
msgstr ""

#. type: Content of: <html><body><p><p>
#: sedout/34to35.html:181
msgid ""
"Of these changes, only 1a and 2a through 2c are incompatibilities in any "
"formal sense.  But users who have previously made custom modifications to "
"the SQLite source (for example to add a custom OS layer for embedded "
"hardware) might find that these changes have a larger impact.  On the other "
"hand, an important goal of these changes is to make it much easier to "
"customize SQLite for use on different operating systems."
msgstr ""

#. type: Content of: <html><body><p><h2>
#: sedout/34to35.html:190
msgid "2.0 The OS Interface Layer"
msgstr ""

#. type: Content of: <html><body><p><p>
#: sedout/34to35.html:191
msgid ""
"If your system defines a custom OS interface for SQLite or if you were using "
"the undocumented <b>sqlite3_os_switch()</b> interface, then you will need to "
"make modifications in order to upgrade to SQLite version 3.5.0.  This may "
"seem painful at first glance.  But as you look more closely, you will "
"probably discover that your changes are made smaller and easier to "
"understand and manage by the new SQLite interface.  It is likely that your "
"changes will now also work seamlessly with the SQLite amalgamation.  You "
"will no longer need to make any changes to the code SQLite source code.  All "
"of your changes can be effected by application code and you can link against "
"a standard, unmodified version of the SQLite amalgamation.  Furthermore, the "
"OS interface layer, which was formerly undocumented, is now an officially "
"support interface for SQLite.  So you have some assurance that this will be "
"a one-time change and that your new backend will continue to work in future "
"versions of SQLite."
msgstr ""

#. type: Content of: <html><body><p><h3>
#: sedout/34to35.html:207
msgid "2.1 The Virtual File System Object"
msgstr ""

#. type: Content of: <html><body><p><p>
#: sedout/34to35.html:208
msgid ""
"The new OS interface for SQLite is built around an object named <a "
"href=\"c3ref/vfs.html\">sqlite3_vfs</a>.  The \"vfs\" stands for \"Virtual "
"File System\".  The sqlite3_vfs object is basically a structure containing "
"pointers to functions that implement the primitive disk I/O operations that "
"SQLite needs to perform in order to read and write databases.  In this "
"article, we will often refer to an sqlite3_vfs objects as a \"VFS\"."
msgstr ""

#. type: Content of: <html><body><p><p>
#: sedout/34to35.html:216
msgid ""
"SQLite is able to use multiple VFSes at the same time.  Each individual "
"database connection is associated with just one VFS.  But if you have "
"multiple database connections, each connection can be associated with a "
"different VFS."
msgstr ""

#. type: Content of: <html><body><p><p>
#: sedout/34to35.html:222
msgid ""
"There is always a default VFS.  The legacy interfaces <a href=\"c3ref/open."
"html\">sqlite3_open()</a> and <a href=\"c3ref/open.html\">sqlite3_open16()</"
"a> always use the default VFS.  The new interface for creating database "
"connections, <a href=\"c3ref/open.html\">sqlite3_open_v2()</a>, allows you "
"to specify which VFS you want to use by name."
msgstr ""

#. type: Content of: <html><body><p><h4>
#: sedout/34to35.html:229
msgid "2.1.1 Registering New VFS Objects"
msgstr ""

#. type: Content of: <html><body><p><p>
#: sedout/34to35.html:230
msgid ""
"Standard builds of SQLite for Unix or Windows come with a single VFS named "
"\"unix\" or \"win32\", as appropriate.  This one VFS is also the default.  "
"So if you are using the legacy open functions, everything will continue to "
"operate as it has before.  The change is that an application now has the "
"flexibility of adding new VFS modules to implement a customized OS layer.  "
"The <a href=\"c3ref/vfs_find.html\">sqlite3_vfs_register()</a> API can be "
"used to tell SQLite about one or more application-defined VFS modules:"
msgstr ""

#. type: Content of: <html><body><p><blockquote><pre>
#: sedout/34to35.html:239
#, no-wrap
msgid "int sqlite3_vfs_register(sqlite3_vfs*, int makeDflt);\n"
msgstr ""

#. type: Content of: <html><body><p><p>
#: sedout/34to35.html:241
msgid ""
"Applications can call sqlite3_vfs_register() at any time, though of course a "
"VFS needs to be registered before it can be used.  The first argument is a "
"pointer to a customized VFS object that the application has prepared.  The "
"second argument is true to make the new VFS the default VFS so that it will "
"be used by the legacy <a href=\"c3ref/open.html\">sqlite3_open()</a> and <a "
"href=\"c3ref/open.html\">sqlite3_open16()</a> APIs.  If the new VFS is not "
"the default, then you will probably have to use the new <a href=\"c3ref/open."
"html\">sqlite3_open_v2()</a> API to use it.  Note, however, that if a new "
"VFS is the only VFS known to SQLite (if SQLite was compiled without its "
"usual default VFS or if the precompiled default VFS was removed using <a "
"href=\"c3ref/vfs_find.html\">sqlite3_vfs_unregister()</a>) then the new VFS "
"automatically becomes the default VFS regardless of the makeDflt argument to "
"<a href=\"c3ref/vfs_find.html\">sqlite3_vfs_register()</a>."
msgstr ""

#. type: Content of: <html><body><p><p>
#: sedout/34to35.html:254
msgid ""
"Standard builds include the default \"unix\" or \"win32\" VFSes.  But if you "
"use the -DOS_OTHER=1 compile-time option, then SQLite is built without a "
"default VFS.  In that case, the application must register at least one VFS "
"prior to calling <a href=\"c3ref/open.html\">sqlite3_open()</a>.  This is "
"the approach that embedded applications should use.  Rather than modifying "
"the SQLite source to insert an alternative OS layer as was done in prior "
"releases of SQLite, instead compile an unmodified SQLite source file "
"(preferably the amalgamation)  with the -DOS_OTHER=1 option, then invoke <a "
"href=\"c3ref/vfs_find.html\">sqlite3_vfs_register()</a> to define the "
"interface to the underlying filesystem prior to creating any database "
"connections."
msgstr ""

#. type: Content of: <html><body><p><h4>
#: sedout/34to35.html:266
msgid "2.1.2 Additional Control Over VFS Objects"
msgstr ""

#. type: Content of: <html><body><p><p>
#: sedout/34to35.html:267
msgid ""
"The <a href=\"c3ref/vfs_find.html\">sqlite3_vfs_unregister()</a> API is used "
"to remove an existing VFS from the system."
msgstr ""

#. type: Content of: <html><body><p><blockquote><pre>
#: sedout/34to35.html:271
#, no-wrap
msgid "int sqlite3_vfs_unregister(sqlite3_vfs*);\n"
msgstr ""

#. type: Content of: <html><body><p><p>
#: sedout/34to35.html:273
msgid ""
"The <a href=\"c3ref/vfs_find.html\">sqlite3_vfs_find()</a> API is used to "
"locate a particular VFS by name.  Its prototype is as follows:"
msgstr ""

#. type: Content of: <html><body><p><blockquote><pre>
#: sedout/34to35.html:277
#, no-wrap
msgid "sqlite3_vfs *sqlite3_vfs_find(const char *zVfsName);\n"
msgstr ""

#. type: Content of: <html><body><p><p>
#: sedout/34to35.html:279
msgid ""
"The argument is the symbolic name for the desired VFS.  If the argument is a "
"NULL pointer, then the default VFS is returned.  The function returns a "
"pointer to the <a href=\"c3ref/vfs.html\">sqlite3_vfs</a> object that "
"implements the VFS.  Or it returns a NULL pointer if no object could be "
"found that matched the search criteria."
msgstr ""

#. type: Content of: <html><body><p><h4>
#: sedout/34to35.html:285
msgid "2.1.3 Modifications Of Existing VFSes"
msgstr ""

#. type: Content of: <html><body><p><p>
#: sedout/34to35.html:286
msgid ""
"Once a VFS has been registered, it should never be modified.  If a change in "
"behavior is required, a new VFS should be registered.  The application "
"could, perhaps, use <a href=\"c3ref/vfs_find.html\">sqlite3_vfs_find()</a> "
"to locate the old VFS, make a copy of the old VFS into a new <a href=\"c3ref/"
"vfs.html\">sqlite3_vfs</a> object, make the desired modifications to the new "
"VFS, unregister the old VFS, then register the new VFS in its place.  "
"Existing database connections would continue to use the old VFS even after "
"it is unregistered, but new database connections would use the new VFS."
msgstr ""

#. type: Content of: <html><body><p><h4>
#: sedout/34to35.html:296
msgid "2.1.4 The VFS Object"
msgstr ""

#. type: Content of: <html><body><p><p>
#: sedout/34to35.html:297
msgid "A VFS object is an instance of the following structure:"
msgstr ""

#. type: Content of: <html><body><p><blockquote><pre>
#: sedout/34to35.html:300
#, no-wrap
msgid ""
"typedef struct sqlite3_vfs sqlite3_vfs;\n"
"struct sqlite3_vfs {\n"
"  int iVersion;            /* Structure version number */\n"
"  int szOsFile;            /* Size of subclassed sqlite3_file */\n"
"  int mxPathname;          /* Maximum file pathname length */\n"
"  sqlite3_vfs *pNext;      /* Next registered VFS */\n"
"  const char *zName;       /* Name of this virtual file system */\n"
"  void *pAppData;          /* Pointer to application-specific data */\n"
"  int (*xOpen)(sqlite3_vfs*, const char *zName, sqlite3_file*,\n"
"               int flags, int *pOutFlags);\n"
"  int (*xDelete)(sqlite3_vfs*, const char *zName, int syncDir);\n"
"  int (*xAccess)(sqlite3_vfs*, const char *zName, int flags);\n"
"  int (*xGetTempName)(sqlite3_vfs*, char *zOut);\n"
"  int (*xFullPathname)(sqlite3_vfs*, const char *zName, char *zOut);\n"
"  void *(*xDlOpen)(sqlite3_vfs*, const char *zFilename);\n"
"  void (*xDlError)(sqlite3_vfs*, int nByte, char *zErrMsg);\n"
"  void *(*xDlSym)(sqlite3_vfs*,void*, const char *zSymbol);\n"
"  void (*xDlClose)(sqlite3_vfs*, void*);\n"
"  int (*xRandomness)(sqlite3_vfs*, int nByte, char *zOut);\n"
"  int (*xSleep)(sqlite3_vfs*, int microseconds);\n"
"  int (*xCurrentTime)(sqlite3_vfs*, double*);\n"
"  /* New fields may be appended in figure versions.  The iVersion\n"
"  ** value will increment whenever this happens. */\n"
"};\n"
msgstr ""

#. type: Content of: <html><body><p><p>
#: sedout/34to35.html:325
msgid ""
"To create a new VFS, an application fills in an instance of this structure "
"with appropriate values and then calls <a href=\"c3ref/vfs_find."
"html\">sqlite3_vfs_register()</a>."
msgstr ""

#. type: Content of: <html><body><p><p>
#: sedout/34to35.html:329
msgid ""
"The iVersion field of <a href=\"c3ref/vfs.html\">sqlite3_vfs</a> should be 1 "
"for SQLite version 3.5.0.  This number may increase in future versions of "
"SQLite if we have to modify the VFS object in some way.  We hope that this "
"never happens, but the provision is made in case it does."
msgstr ""

#. type: Content of: <html><body><p><p>
#: sedout/34to35.html:335
msgid ""
"The szOsFile field is the size in bytes of the structure that defines an "
"open file: the <a href=\"c3ref/file.html\">sqlite3_file</a> object.  This "
"object will be described more fully below.  The point here is that each VFS "
"implementation can define its own <a href=\"c3ref/file.html\">sqlite3_file</"
"a> object containing whatever information the VFS implementation needs to "
"store about an open file.  SQLite needs to know how big this object is, "
"however, in order to preallocate enough space to hold it."
msgstr ""

#. type: Content of: <html><body><p><p>
#: sedout/34to35.html:344
msgid ""
"The mxPathname field is the maximum length of a file pathname that this VFS "
"can use.  SQLite sometimes has to preallocate buffers of this size, so it "
"should be as small as reasonably possible.  Some filesystems permit huge "
"pathnames, but in practice pathnames rarely extend beyond 100 bytes or so.  "
"You do not have to put the longest pathname that the underlying filesystem "
"can handle here.  You only have to put the longest pathname that you want "
"SQLite to be able to handle.  A few hundred is a good value in most cases."
msgstr ""

#. type: Content of: <html><body><p><p>
#: sedout/34to35.html:354
msgid ""
"The pNext field is used internally by SQLite.  Specifically, SQLite uses "
"this field to form a linked list of registered VFSes."
msgstr ""

#. type: Content of: <html><body><p><p>
#: sedout/34to35.html:358
msgid ""
"The zName field is the symbolic name of the VFS.  This is the name that the "
"<a href=\"c3ref/vfs_find.html\">sqlite3_vfs_find()</a> compares against when "
"it is looking for a VFS."
msgstr ""

#. type: Content of: <html><body><p><p>
#: sedout/34to35.html:363
msgid ""
"The pAppData pointer is unused by the SQLite core.  The pointer is available "
"to store auxiliary information that a VFS information might want to carry "
"around."
msgstr ""

#. type: Content of: <html><body><p><p>
#: sedout/34to35.html:368
msgid ""
"The remaining fields of the <a href=\"c3ref/vfs.html\">sqlite3_vfs</a> "
"object all store pointers to functions that implement primitive operations.  "
"We call these \"methods\".  The first method, xOpen, is used to open files "
"on the underlying storage media.  The result is an <a href=\"c3ref/file."
"html\">sqlite3_file</a> object.  There are additional methods, defined by "
"the <a href=\"c3ref/file.html\">sqlite3_file</a> object itself that are used "
"to read and write and close the file.  The additional methods are detailed "
"below.  The filename is in UTF-8.  SQLite will guarantee that the zFilename "
"string passed to xOpen() is a full pathname as generated by xFullPathname() "
"and that the string will be valid and unchanged until xClose() is called.  "
"So the <a href=\"c3ref/file.html\">sqlite3_file</a> can store a pointer to "
"the filename if it needs to remember the filename for some reason.  The "
"flags argument to xOpen() is a copy of the flags argument to "
"sqlite3_open_v2().  If sqlite3_open() or sqlite3_open16()  is used, then "
"flags is <a href=\"c3ref/c_open_autoproxy.html\">SQLITE_OPEN_READWRITE</a> | "
"<a href=\"c3ref/c_open_autoproxy.html\">SQLITE_OPEN_CREATE</a>.  If xOpen() "
"opens a file read-only then it sets *pOutFlags to include <a href=\"c3ref/"
"c_open_autoproxy.html\">SQLITE_OPEN_READONLY</a>.  Other bits in *pOutFlags "
"may be set.  SQLite will also add one of the following flags to the xOpen()  "
"call, depending on the object being opened:"
msgstr ""

#. type: Content of: <html><body><p><p><ul><li>
#: sedout/34to35.html:389
msgid "<a href=\"c3ref/c_open_autoproxy.html\">SQLITE_OPEN_MAIN_DB</a>"
msgstr ""

#. type: Content of: <html><body><p><p><ul><li><li>
#: sedout/34to35.html:390
msgid "<a href=\"c3ref/c_open_autoproxy.html\">SQLITE_OPEN_MAIN_JOURNAL</a>"
msgstr ""

#. type: Content of: <html><body><p><p><ul><li><li><li>
#: sedout/34to35.html:391
msgid "<a href=\"c3ref/c_open_autoproxy.html\">SQLITE_OPEN_TEMP_DB</a>"
msgstr ""

#. type: Content of: <html><body><p><p><ul><li><li><li><li>
#: sedout/34to35.html:392
msgid "<a href=\"c3ref/c_open_autoproxy.html\">SQLITE_OPEN_TEMP_JOURNAL</a>"
msgstr ""

#. type: Content of: <html><body><p><p><ul><li><li><li><li><li>
#: sedout/34to35.html:393
msgid "<a href=\"c3ref/c_open_autoproxy.html\">SQLITE_OPEN_TRANSIENT_DB</a>"
msgstr ""

#. type: Content of: <html><body><p><p><ul><li><li><li><li><li><li>
#: sedout/34to35.html:394
msgid "<a href=\"c3ref/c_open_autoproxy.html\">SQLITE_OPEN_SUBJOURNAL</a>"
msgstr ""

#. type: Content of: <html><body><p><p><ul><li><li><li><li><li><li><li>
#: sedout/34to35.html:395
msgid "<a href=\"c3ref/c_open_autoproxy.html\">SQLITE_OPEN_SUPER_JOURNAL</a>"
msgstr ""

#. type: Content of: <html><body><p><p>
#: sedout/34to35.html:397
msgid ""
"The file I/O implementation can use the object type flags to changes the way "
"it deals with files.  For example, an application that does not care about "
"crash recovery or rollback, might make the open of a journal file a no-op.  "
"Writes to this journal are also a no-op.  Any attempt to read the journal "
"returns <a href=\"rescode.html#ioerr\">SQLITE_IOERR</a>.  Or the "
"implementation might recognize the a database file will be doing page-"
"aligned sector reads and writes in a random order and set up its I/O "
"subsystem accordingly.  SQLite might also add one of the following flags to "
"the xOpen method:"
msgstr ""

#. type: Content of: <html><body><p><p><ul><li>
#: sedout/34to35.html:408
msgid "<a href=\"c3ref/c_open_autoproxy.html\">SQLITE_OPEN_DELETEONCLOSE</a>"
msgstr ""

#. type: Content of: <html><body><p><p><ul><li><li>
#: sedout/34to35.html:409
msgid "<a href=\"c3ref/c_open_autoproxy.html\">SQLITE_OPEN_EXCLUSIVE</a>"
msgstr ""

#. type: Content of: <html><body><p><p>
#: sedout/34to35.html:411
msgid ""
"The <a href=\"c3ref/c_open_autoproxy.html\">SQLITE_OPEN_DELETEONCLOSE</a> "
"flag means the file should be deleted when it is closed.  This will always "
"be set for TEMP databases and journals and for subjournals.  The <a "
"href=\"c3ref/c_open_autoproxy.html\">SQLITE_OPEN_EXCLUSIVE</a> flag means "
"the file should be opened for exclusive access.  This flag is set for all "
"files except for the main database file.  The <a href=\"c3ref/file."
"html\">sqlite3_file</a> structure passed as the third argument to xOpen is "
"allocated by the caller.  xOpen just fills it in.  The caller allocates a "
"minimum of szOsFile bytes for the <a href=\"c3ref/file.html\">sqlite3_file</"
"a> structure."
msgstr ""

#. type: Content of: <html><body><p><p>
#: sedout/34to35.html:423
msgid ""
"The differences between an <a href=\"c3ref/c_open_autoproxy."
"html\">SQLITE_OPEN_TEMP_DB</a> database and an <a href=\"c3ref/"
"c_open_autoproxy.html\">SQLITE_OPEN_TRANSIENT_DB</a> database is this: The "
"<a href=\"c3ref/c_open_autoproxy.html\">SQLITE_OPEN_TEMP_DB</a> is used for "
"explicitly declared and named TEMP tables (using the CREATE TEMP TABLE "
"syntax) or for named tables in a temporary database that is created by "
"opening a database with a filename that is an empty string.  An <a "
"href=\"c3ref/c_open_autoproxy.html\">SQLITE_OPEN_TRANSIENT_DB</a> holds a "
"database table that SQLite creates automatically in order to evaluate a "
"subquery or ORDER BY or GROUP BY clause.  Both TEMP_DB and TRANSIENT_DB "
"databases are private and are deleted automatically.  TEMP_DB databases last "
"for the duration of the database connection.  TRANSIENT_DB databases last "
"only for the duration of a single SQL statement."
msgstr ""

#. type: Content of: <html><body><p><p>
#: sedout/34to35.html:436
msgid ""
"The xDelete method is used to delete a file.  The name of the file is given "
"in the second parameter.  The filename will be in UTF-8.  The VFS must "
"convert the filename into whatever character representation the underlying "
"operating system expects.  If the syncDir parameter is true, then the "
"xDelete method should not return until the change to the directory contents "
"for the directory containing the deleted file have been synced to disk in "
"order to ensure that the file does not \"reappear\" if a power failure "
"occurs soon after."
msgstr ""

#. type: Content of: <html><body><p><p>
#: sedout/34to35.html:446
msgid ""
"The xAccess method is used to check for access permissions on a file.  The "
"filename will be UTF-8 encoded.  The flags argument will be <a href=\"c3ref/"
"c_access_exists.html\">SQLITE_ACCESS_EXISTS</a> to check for the existence "
"of the file, <a href=\"c3ref/c_access_exists.html\">SQLITE_ACCESS_READWRITE</"
"a> to check to see if the file is both readable and writable, or <a "
"href=\"c3ref/c_access_exists.html\">SQLITE_ACCESS_READ</a> to check to see "
"if the file is at least readable.  The \"file\" named by the second "
"parameter might be a directory or folder name."
msgstr ""

#. type: Content of: <html><body><p><p>
#: sedout/34to35.html:455
msgid ""
"The xGetTempName method computes the name of a temporary file that SQLite "
"can use.  The name should be written into the buffer given by the second "
"parameter.  SQLite will size that buffer to hold at least mxPathname bytes.  "
"The generated filename should be in UTF-8.  To avoid security problems, the "
"generated temporary filename should contain enough randomness to prevent an "
"attacker from guessing the temporary filename in advance."
msgstr ""

#. type: Content of: <html><body><p><p>
#: sedout/34to35.html:464
msgid ""
"The xFullPathname method is used to convert a relative pathname into a full "
"pathname.  The resulting full pathname is written into the buffer provided "
"by the third parameter.  SQLite will size the output buffer to at least "
"mxPathname bytes.  Both the input and output names should be in UTF-8."
msgstr ""

#. type: Content of: <html><body><p><p>
#: sedout/34to35.html:471
msgid ""
"The xDlOpen, xDlError, xDlSym, and xDlClose methods are all used for "
"accessing shared libraries at run-time.  These methods may be omitted (and "
"their pointers set to zero) if the library is compiled with <a "
"href=\"compile.html#omit_load_extension\">SQLITE_OMIT_LOAD_EXTENSION</a> or "
"if the <a href=\"c3ref/enable_load_extension."
"html\">sqlite3_enable_load_extension()</a> interface is never used to enable "
"dynamic extension loading.  The xDlOpen method opens a shared library or DLL "
"and returns a pointer to a handle.  NULL is returned if the open fails.  If "
"the open fails, the xDlError method can be used to obtain a text error "
"message.  The message is written into the zErrMsg buffer of the third "
"parameter which is at least nByte bytes in length.  The xDlSym returns a "
"pointer to a symbol in the shared library.  The name of the symbol is given "
"by the second parameter.  UTF-8 encoding is assumed.  If the symbol is not "
"found a NULL pointer is returned.  The xDlClose routine closes the shared "
"library."
msgstr ""

#. type: Content of: <html><body><p><p>
#: sedout/34to35.html:487
msgid ""
"The xRandomness method is used exactly once to initialize the pseudo-random "
"number generator (PRNG) inside of SQLite.  Only the xRandomness method on "
"the default VFS is used.  The xRandomness methods on other VFSes are never "
"accessed by SQLite.  The xRandomness routine requests that nByte bytes of "
"randomness be written into zOut.  The routine returns the actual number of "
"bytes of randomness obtained.  The quality of the randomness so obtained "
"will determine the quality of the randomness generated by built-in SQLite "
"functions such as random() and randomblob().  SQLite also uses its PRNG to "
"generate temporary file names.  On some platforms (ex: Windows) SQLite "
"assumes that temporary file names are unique without actually testing for "
"collisions, so it is important to have good-quality randomness even if the "
"random() and randomblob()  functions are never used."
msgstr ""

#. type: Content of: <html><body><p><p>
#: sedout/34to35.html:503
msgid ""
"The xSleep method is used to suspend the calling thread for at least the "
"number of microseconds given.  This method is used to implement the <a "
"href=\"c3ref/sleep.html\">sqlite3_sleep()</a> and <a href=\"c3ref/"
"busy_timeout.html\">sqlite3_busy_timeout()</a> APIs.  In the case of <a "
"href=\"c3ref/sleep.html\">sqlite3_sleep()</a> the xSleep method of the "
"default VFS is always used.  If the underlying system does not have a "
"microsecond resolution sleep capability, then the sleep time should be "
"rounded up.  xSleep returns this rounded-up value."
msgstr ""

#. type: Content of: <html><body><p><p>
#: sedout/34to35.html:512
msgid ""
"The xCurrentTime method finds the current time and date and writes the "
"result as a double-precision floating point value into pointer provided by "
"the second parameter.  The time and date is in coordinated universal time "
"(UTC) and is a fractional Julian day number."
msgstr ""

#. type: Content of: <html><body><p><h4>
#: sedout/34to35.html:517
msgid "2.1.5 The Open File Object"
msgstr ""

#. type: Content of: <html><body><p><p>
#: sedout/34to35.html:518
msgid ""
"The result of opening a file is an instance of an <a href=\"c3ref/file."
"html\">sqlite3_file</a> object.  The <a href=\"c3ref/file."
"html\">sqlite3_file</a> object is an abstract base class defined as follows:"
msgstr ""

#. type: Content of: <html><body><p><blockquote><pre>
#: sedout/34to35.html:522
#, no-wrap
msgid ""
"typedef struct sqlite3_file sqlite3_file;\n"
"struct sqlite3_file {\n"
"  const struct sqlite3_io_methods *pMethods;\n"
"};\n"
msgstr ""

#. type: Content of: <html><body><p><p>
#: sedout/34to35.html:527
msgid ""
"Each VFS implementation will subclass the <a href=\"c3ref/file."
"html\">sqlite3_file</a> by adding additional fields at the end to hold "
"whatever information the VFS needs to know about an open file.  It does not "
"matter what information is stored as long as the total size of the structure "
"does not exceed the szOsFile value recorded in the <a href=\"c3ref/vfs."
"html\">sqlite3_vfs</a> object."
msgstr ""

#. type: Content of: <html><body><p><p>
#: sedout/34to35.html:534
msgid ""
"The <a href=\"c3ref/io_methods.html\">sqlite3_io_methods</a> object is a "
"structure that contains pointers to methods for reading, writing, and "
"otherwise dealing with files.  This object is defined as follows:"
msgstr ""

#. type: Content of: <html><body><p><blockquote><pre>
#: sedout/34to35.html:539
#, no-wrap
msgid ""
"typedef struct sqlite3_io_methods sqlite3_io_methods;\n"
"struct sqlite3_io_methods {\n"
"  int iVersion;\n"
"  int (*xClose)(sqlite3_file*);\n"
"  int (*xRead)(sqlite3_file*, void*, int iAmt, sqlite3_int64 iOfst);\n"
"  int (*xWrite)(sqlite3_file*, const void*, int iAmt, sqlite3_int64 iOfst);\n"
"  int (*xTruncate)(sqlite3_file*, sqlite3_int64 size);\n"
"  int (*xSync)(sqlite3_file*, int flags);\n"
"  int (*xFileSize)(sqlite3_file*, sqlite3_int64 *pSize);\n"
"  int (*xLock)(sqlite3_file*, int);\n"
"  int (*xUnlock)(sqlite3_file*, int);\n"
"  int (*xCheckReservedLock)(sqlite3_file*);\n"
"  int (*xFileControl)(sqlite3_file*, int op, void *pArg);\n"
"  int (*xSectorSize)(sqlite3_file*);\n"
"  int (*xDeviceCharacteristics)(sqlite3_file*);\n"
"  /* Additional methods may be added in future releases */\n"
"};\n"
msgstr ""

#. type: Content of: <html><body><p><p>
#: sedout/34to35.html:557
msgid ""
"The iVersion field of <a href=\"c3ref/io_methods.html\">sqlite3_io_methods</"
"a> is provided as insurance against future enhancements.  The iVersion value "
"should always be 1 for SQLite version 3.5."
msgstr ""

#. type: Content of: <html><body><p><p>
#: sedout/34to35.html:562
msgid ""
"The xClose method closes the file.  The space for the <a href=\"c3ref/file."
"html\">sqlite3_file</a> structure is deallocated by the caller.  But if the "
"<a href=\"c3ref/file.html\">sqlite3_file</a> contains pointers to other "
"allocated memory or resources, those allocations should be released by the "
"xClose method."
msgstr ""

#. type: Content of: <html><body><p><p>
#: sedout/34to35.html:568
msgid ""
"The xRead method reads iAmt bytes from the file beginning at a byte offset "
"to iOfst.  The data read is stored in the pointer of the second parameter.  "
"xRead returns the <a href=\"rescode.html#ok\">SQLITE_OK</a> on success, <a "
"href=\"rescode.html#ioerr_short_read\">SQLITE_IOERR_SHORT_READ</a> if it was "
"not able to read the full number of bytes because it reached end-of-file, or "
"<a href=\"rescode.html#ioerr_read\">SQLITE_IOERR_READ</a> for any other "
"error."
msgstr ""

#. type: Content of: <html><body><p><p>
#: sedout/34to35.html:576
msgid ""
"The xWrite method writes iAmt bytes of data from the second parameter into "
"the file beginning at an offset of iOfst bytes.  If the size of the file is "
"less than iOfst bytes prior to the write, then xWrite should ensure that the "
"file is extended with zeros up to iOfst bytes prior to beginning its write.  "
"xWrite continues to extends the file as necessary so that the size of the "
"file is at least iAmt+iOfst bytes at the conclusion of the xWrite call.  The "
"xWrite method returns <a href=\"rescode.html#ok\">SQLITE_OK</a> on success.  "
"If the write cannot complete because the underlying storage medium is full, "
"then <a href=\"rescode.html#full\">SQLITE_FULL</a> is returned.  <a "
"href=\"rescode.html#ioerr_write\">SQLITE_IOERR_WRITE</a> should be returned "
"for any other error."
msgstr ""

#. type: Content of: <html><body><p><p>
#: sedout/34to35.html:588
msgid ""
"The xTruncate method truncates a file to be nByte bytes in length.  If the "
"file is already nByte bytes or less in length then this method is a no-op.  "
"The xTruncate method returns <a href=\"rescode.html#ok\">SQLITE_OK</a> on "
"success and <a href=\"rescode.html#ioerr_truncate\">SQLITE_IOERR_TRUNCATE</"
"a> if anything goes wrong."
msgstr ""

#. type: Content of: <html><body><p><p>
#: sedout/34to35.html:594
msgid ""
"The xSync method is used to force previously written data out of operating "
"system cache and into non-volatile memory.  The second parameter is usually "
"<a href=\"c3ref/c_sync_dataonly.html\">SQLITE_SYNC_NORMAL</a>.  If the "
"second parameter is <a href=\"c3ref/c_sync_dataonly.html\">SQLITE_SYNC_FULL</"
"a> then the xSync method should make sure that data has also been flushed "
"through the disk controllers cache.  The <a href=\"c3ref/c_sync_dataonly."
"html\">SQLITE_SYNC_FULL</a> parameter is the equivalent of the F_FULLSYNC "
"ioctl() on Mac OS X. The xSync method returns <a href=\"rescode."
"html#ok\">SQLITE_OK</a> on success and <a href=\"rescode."
"html#ioerr_fsync\">SQLITE_IOERR_FSYNC</a> if anything goes wrong."
msgstr ""

#. type: Content of: <html><body><p><p>
#: sedout/34to35.html:604
msgid ""
"The xFileSize() method determines the current size of the file in bytes and "
"writes that value into *pSize.  It returns <a href=\"rescode."
"html#ok\">SQLITE_OK</a> on success and <a href=\"rescode."
"html#ioerr_fstat\">SQLITE_IOERR_FSTAT</a> if something goes wrong."
msgstr ""

#. type: Content of: <html><body><p><p>
#: sedout/34to35.html:609
msgid ""
"The xLock and xUnlock methods are used to set and clear file locks.  SQLite "
"supports five levels of file locks, in order:"
msgstr ""

#. type: Content of: <html><body><p><p><ul><li>
#: sedout/34to35.html:612
msgid "<a href=\"c3ref/c_lock_exclusive.html\">SQLITE_LOCK_NONE</a>"
msgstr ""

#. type: Content of: <html><body><p><p><ul><li><li>
#: sedout/34to35.html:613
msgid "<a href=\"c3ref/c_lock_exclusive.html\">SQLITE_LOCK_SHARED</a>"
msgstr ""

#. type: Content of: <html><body><p><p><ul><li><li><li>
#: sedout/34to35.html:614
msgid "<a href=\"c3ref/c_lock_exclusive.html\">SQLITE_LOCK_RESERVED</a>"
msgstr ""

#. type: Content of: <html><body><p><p><ul><li><li><li><li>
#: sedout/34to35.html:615
msgid "<a href=\"c3ref/c_lock_exclusive.html\">SQLITE_LOCK_PENDING</a>"
msgstr ""

#. type: Content of: <html><body><p><p><ul><li><li><li><li><li>
#: sedout/34to35.html:616
msgid "<a href=\"c3ref/c_lock_exclusive.html\">SQLITE_LOCK_EXCLUSIVE</a>"
msgstr ""

#. type: Content of: <html><body><p><p>
#: sedout/34to35.html:618
msgid ""
"The underlying implementation can support some subset of these locking "
"levels as long as it meets the other requirements of this paragraph.  The "
"locking level is specified as the second argument to both xLock and "
"xUnlock.  The xLock method increases the locking level to the specified "
"locking level or higher.  The xUnlock method decreases the locking level to "
"no lower than the level specified.  <a href=\"c3ref/c_lock_exclusive."
"html\">SQLITE_LOCK_NONE</a> means that the file is unlocked.  <a "
"href=\"c3ref/c_lock_exclusive.html\">SQLITE_LOCK_SHARED</a> gives permission "
"to read the file.  Multiple database connections can hold <a href=\"c3ref/"
"c_lock_exclusive.html\">SQLITE_LOCK_SHARED</a> at the same time.  <a "
"href=\"c3ref/c_lock_exclusive.html\">SQLITE_LOCK_RESERVED</a> is like <a "
"href=\"c3ref/c_lock_exclusive.html\">SQLITE_LOCK_SHARED</a> in that it is "
"permission to read the file.  But only a single connection can hold a "
"reserved lock at any point in time.  The <a href=\"c3ref/c_lock_exclusive."
"html\">SQLITE_LOCK_PENDING</a> is also permission to read the file.  Other "
"connections can continue to read the file as well, but no other connection "
"is allowed to escalate a lock from none to shared.  <a href=\"c3ref/"
"c_lock_exclusive.html\">SQLITE_LOCK_EXCLUSIVE</a> is permission to write on "
"the file.  Only a single connection can hold an exclusive lock and no other "
"connection can hold any lock (other than \"none\") while one connection "
"holds an exclusive lock.  The xLock returns <a href=\"rescode."
"html#ok\">SQLITE_OK</a> on success, <a href=\"rescode."
"html#busy\">SQLITE_BUSY</a> if it is unable to obtain the lock, or <a "
"href=\"rescode.html#ioerr_rdlock\">SQLITE_IOERR_RDLOCK</a> if something else "
"goes wrong.  The xUnlock method returns <a href=\"rescode."
"html#ok\">SQLITE_OK</a> on success and <a href=\"rescode."
"html#ioerr_unlock\">SQLITE_IOERR_UNLOCK</a> for problems."
msgstr ""

#. type: Content of: <html><body><p><p>
#: sedout/34to35.html:641
msgid ""
"The xCheckReservedLock() method checks to see if another connection or "
"another process is currently holding a reserved, pending, or exclusive lock "
"on the file.  It returns true or false."
msgstr ""

#. type: Content of: <html><body><p><p>
#: sedout/34to35.html:646
msgid ""
"The xFileControl() method is a generic interface that allows custom VFS "
"implementations to directly control an open file using the (new and "
"experimental)  <a href=\"c3ref/file_control.html\">sqlite3_file_control()</"
"a> interface.  The second \"op\" argument is an integer opcode.  The third "
"argument is a generic pointer which is intended to be a pointer to a "
"structure that may contain arguments or space in which to write return "
"values.  Potential uses for xFileControl() might be functions to enable "
"blocking locks with timeouts, to change the locking strategy (for example to "
"use dot-file locks), to inquire about the status of a lock, or to break "
"stale locks.  The SQLite core reserves opcodes less than 100 for its own "
"use.  A <a href=\"c3ref/c_fcntl_begin_atomic_write."
"html#sqlitefcntllockstate\">list of opcodes</a> less than 100 is available.  "
"Applications that define a custom xFileControl method should use opcodes "
"greater than 100 to avoid conflicts."
msgstr ""

#. type: Content of: <html><body><p><p>
#: sedout/34to35.html:663
msgid ""
"The xSectorSize returns the \"sector size\" of the underlying non-volatile "
"media.  A \"sector\" is defined as the smallest unit of storage that can be "
"written without disturbing adjacent storage.  On a disk drive the \"sector "
"size\" has until recently been 512 bytes, though there is a push to increase "
"this value to 4KiB.  SQLite needs to know the sector size so that it can "
"write a full sector at a time, and thus avoid corrupting adjacent storage "
"space if a power loss occurs in the middle of a write."
msgstr ""

#. type: Content of: <html><body><p><p>
#: sedout/34to35.html:673
msgid ""
"The xDeviceCharacteristics method returns an integer bit vector that defines "
"any special properties that the underlying storage medium might have that "
"SQLite can use to increase performance.  The allowed return is the bit-wise "
"OR of the following values:"
msgstr ""

#. type: Content of: <html><body><p><p><ul><li>
#: sedout/34to35.html:678
msgid "<a href=\"c3ref/c_iocap_atomic.html\">SQLITE_IOCAP_ATOMIC</a>"
msgstr ""

#. type: Content of: <html><body><p><p><ul><li><li>
#: sedout/34to35.html:679
msgid "<a href=\"c3ref/c_iocap_atomic.html\">SQLITE_IOCAP_ATOMIC512</a>"
msgstr ""

#. type: Content of: <html><body><p><p><ul><li><li><li>
#: sedout/34to35.html:680
msgid "<a href=\"c3ref/c_iocap_atomic.html\">SQLITE_IOCAP_ATOMIC1K</a>"
msgstr ""

#. type: Content of: <html><body><p><p><ul><li><li><li><li>
#: sedout/34to35.html:681
msgid "<a href=\"c3ref/c_iocap_atomic.html\">SQLITE_IOCAP_ATOMIC2K</a>"
msgstr ""

#. type: Content of: <html><body><p><p><ul><li><li><li><li><li>
#: sedout/34to35.html:682
msgid "<a href=\"c3ref/c_iocap_atomic.html\">SQLITE_IOCAP_ATOMIC4K</a>"
msgstr ""

#. type: Content of: <html><body><p><p><ul><li><li><li><li><li><li>
#: sedout/34to35.html:683
msgid "<a href=\"c3ref/c_iocap_atomic.html\">SQLITE_IOCAP_ATOMIC8K</a>"
msgstr ""

#. type: Content of: <html><body><p><p><ul><li><li><li><li><li><li><li>
#: sedout/34to35.html:684
msgid "<a href=\"c3ref/c_iocap_atomic.html\">SQLITE_IOCAP_ATOMIC16K</a>"
msgstr ""

#. type: Content of: <html><body><p><p><ul><li><li><li><li><li><li><li><li>
#: sedout/34to35.html:685
msgid "<a href=\"c3ref/c_iocap_atomic.html\">SQLITE_IOCAP_ATOMIC32K</a>"
msgstr ""

#. type: Content of: <html><body><p><p><ul><li><li><li><li><li><li><li><li><li>
#: sedout/34to35.html:686
msgid "<a href=\"c3ref/c_iocap_atomic.html\">SQLITE_IOCAP_ATOMIC64K</a>"
msgstr ""

#. type: Content of: <html><body><p><p><ul><li><li><li><li><li><li><li><li><li><li>
#: sedout/34to35.html:687
msgid "<a href=\"c3ref/c_iocap_atomic.html\">SQLITE_IOCAP_SAFE_APPEND</a>"
msgstr ""

#. type: Content of: <html><body><p><p><ul><li><li><li><li><li><li><li><li><li><li><li>
#: sedout/34to35.html:688
msgid "<a href=\"c3ref/c_iocap_atomic.html\">SQLITE_IOCAP_SEQUENTIAL</a>"
msgstr ""

#. type: Content of: <html><body><p><p>
#: sedout/34to35.html:690
msgid ""
"The <a href=\"c3ref/c_iocap_atomic.html\">SQLITE_IOCAP_ATOMIC</a> bit means "
"that all writes to this device are atomic in the sense that either the "
"entire write occurs or none of it occurs.  The other <a href=\"c3ref/"
"c_iocap_atomic.html\">SQLITE_IOCAP_ATOMIC<i>nnn</i></a> values indicate that "
"writes of aligned blocks of the indicated size are atomic.  <a href=\"c3ref/"
"c_iocap_atomic.html\">SQLITE_IOCAP_SAFE_APPEND</a> means that when extending "
"a file with new data, the new data is written first and then the file size "
"is updated.  So if a power failure occurs, there is no chance that the file "
"might have been extended with randomness.  The <a href=\"c3ref/"
"c_iocap_atomic.html\">SQLITE_IOCAP_SEQUENTIAL</a> bit means that all writes "
"occur in the order that they are issued and are not reordered by the "
"underlying file system."
msgstr ""

#. type: Content of: <html><body><p><h4>
#: sedout/34to35.html:702
msgid "2.1.6 Checklist For Constructing A New VFS"
msgstr ""

#. type: Content of: <html><body><p><p>
#: sedout/34to35.html:703
msgid ""
"The preceding paragraphs contain a lot of information.  To ease the task of "
"constructing a new VFS for SQLite we offer the following implementation "
"checklist:"
msgstr ""

#. type: Content of: <html><body><p><p><ol><li>
#: sedout/34to35.html:709
msgid ""
"Define an appropriate subclass of the <a href=\"c3ref/file."
"html\">sqlite3_file</a> object."
msgstr ""

#. type: Content of: <html><body><p><p><ol><li><li>
#: sedout/34to35.html:710
msgid ""
"Implement the methods required by the <a href=\"c3ref/io_methods."
"html\">sqlite3_io_methods</a> object."
msgstr ""

#. type: Content of: <html><body><p><p><ol><li><li><li>
#: sedout/34to35.html:711
msgid ""
"Create a static and constant <a href=\"c3ref/io_methods."
"html\">sqlite3_io_methods</a> object containing pointers to the methods from "
"the previous step."
msgstr ""

#. type: Content of: <html><body><p><p><ol><li><li><li><li>
#: sedout/34to35.html:714
msgid ""
"Implement the xOpen method that opens a file and populates an <a "
"href=\"c3ref/file.html\">sqlite3_file</a> object, including setting pMethods "
"to point to the <a href=\"c3ref/io_methods.html\">sqlite3_io_methods</a> "
"object from the previous step."
msgstr ""

#. type: Content of: <html><body><p><p><ol><li><li><li><li><li>
#: sedout/34to35.html:717
msgid ""
"Implement the other methods required by <a href=\"c3ref/vfs."
"html\">sqlite3_vfs</a>."
msgstr ""

#. type: Content of: <html><body><p><p><ol><li><li><li><li><li><li>
#: sedout/34to35.html:718
msgid ""
"Define a static (but not constant) <a href=\"c3ref/vfs.html\">sqlite3_vfs</"
"a> structure that contains pointers to the xOpen method and the other "
"methods and which contains the appropriate values for iVersion, szOsFile, "
"mxPathname, zName, and pAppData."
msgstr ""

#. type: Content of: <html><body><p><p><ol><li><li><li><li><li><li><li>
#: sedout/34to35.html:722
msgid ""
"Implement a procedure that calls <a href=\"c3ref/vfs_find."
"html\">sqlite3_vfs_register()</a> and passes it a pointer to the <a "
"href=\"c3ref/vfs.html\">sqlite3_vfs</a> structure from the previous step.  "
"This procedure is probably the only exported symbol in the source file that "
"implements your VFS."
msgstr ""

#. type: Content of: <html><body><p><p><p>
#: sedout/34to35.html:729
msgid ""
"Within your application, call the procedure implemented in the last step "
"above as part of your initialization process before any database connections "
"are opened."
msgstr ""

#. type: Content of: <html><body><p><p><h2>
#: sedout/34to35.html:733
msgid "3.0 The Memory Allocation Subsystem"
msgstr ""

#. type: Content of: <html><body><p><p><p>
#: sedout/34to35.html:734
msgid ""
"Beginning with version 3.5, SQLite obtains all of the heap memory it needs "
"using the routines <a href=\"c3ref/free.html\">sqlite3_malloc()</a>, <a "
"href=\"c3ref/free.html\">sqlite3_free()</a>, and <a href=\"c3ref/free."
"html\">sqlite3_realloc()</a>.  These routines have existed in prior versions "
"of SQLite, but SQLite has previously bypassed these routines and used its "
"own memory allocator.  This all changes in version 3.5.0."
msgstr ""

#. type: Content of: <html><body><p><p><p>
#: sedout/34to35.html:741
msgid ""
"The SQLite source tree actually contains multiple versions of the memory "
"allocator.  The default high-speed version found in the \"mem1.c\" source "
"file is used for most builds.  But if the SQLITE_MEMDEBUG flag is enabled, a "
"separate memory allocator the \"mem2.c\" source file is used instead.  The "
"mem2.c allocator implements lots of hooks to do error checking and to "
"simulate memory allocation failures for testing purposes.  Both of these "
"allocators use the malloc()/free() implementation in the standard C library."
msgstr ""

#. type: Content of: <html><body><p><p><p>
#: sedout/34to35.html:751
msgid ""
"Applications are not required to use either of these standard memory "
"allocators.  If SQLite is compiled with <a href=\"compile."
"html#omitfeatures\">SQLITE_OMIT_MEMORY_ALLOCATION</a> then no implementation "
"for the <a href=\"c3ref/free.html\">sqlite3_malloc()</a>, <a href=\"c3ref/"
"free.html\">sqlite3_realloc()</a>, and <a href=\"c3ref/free."
"html\">sqlite3_free()</a> functions is provided.  Instead, the application "
"that links against SQLite must provide its own implementation of these "
"functions.  The application provided memory allocator is not required to use "
"the malloc()/free() implementation in the standard C library.  An embedded "
"application might provide an alternative memory allocator that uses memory "
"for a fixed memory pool set aside for the exclusive use of SQLite, for "
"example."
msgstr ""

#. type: Content of: <html><body><p><p><p>
#: sedout/34to35.html:763
msgid ""
"Applications that implement their own memory allocator must provide "
"implementation for the usual three allocation functions <a href=\"c3ref/free."
"html\">sqlite3_malloc()</a>, <a href=\"c3ref/free.html\">sqlite3_realloc()</"
"a>, and <a href=\"c3ref/free.html\">sqlite3_free()</a>.  And they must also "
"implement a fourth function:"
msgstr ""

#. type: Content of: <html><body><p><p><blockquote><pre>
#: sedout/34to35.html:769
#, no-wrap
msgid ""
"int sqlite3_memory_alarm(\n"
"  void(*xCallback)(void *pArg, sqlite3_int64 used, int N),\n"
"  void *pArg,\n"
"  sqlite3_int64 iThreshold\n"
");\n"
msgstr ""

#. type: Content of: <html><body><p><p><p>
#: sedout/34to35.html:775
msgid ""
"The <a href=\"c3ref/aggregate_count.html\">sqlite3_memory_alarm</a> routine "
"is used to register a callback on memory allocation events.  This routine "
"registers or clears a callback that fires when the amount of memory "
"allocated exceeds iThreshold.  Only a single callback can be registered at a "
"time.  Each call to <a href=\"c3ref/aggregate_count."
"html\">sqlite3_memory_alarm()</a> overwrites the previous callback.  The "
"callback is disabled by setting xCallback to a NULL pointer."
msgstr ""

#. type: Content of: <html><body><p><p><p>
#: sedout/34to35.html:785
msgid ""
"The parameters to the callback are the pArg value, the amount of memory "
"currently in use, and the size of the allocation that provoked the "
"callback.  The callback will presumably invoke <a href=\"c3ref/free."
"html\">sqlite3_free()</a> to free up memory space.  The callback may invoke "
"<a href=\"c3ref/free.html\">sqlite3_malloc()</a> or <a href=\"c3ref/free."
"html\">sqlite3_realloc()</a> but if it does, no additional callbacks will be "
"invoked by the recursive calls."
msgstr ""

#. type: Content of: <html><body><p><p><p>
#: sedout/34to35.html:794
msgid ""
"The <a href=\"c3ref/soft_heap_limit.html\">sqlite3_soft_heap_limit()</a> "
"interface works by registering a memory alarm at the soft heap limit and "
"invoking <a href=\"c3ref/release_memory.html\">sqlite3_release_memory()</a> "
"in the alarm callback.  Application programs should not attempt to use the "
"<a href=\"c3ref/aggregate_count.html\">sqlite3_memory_alarm()</a> interface "
"because doing so will interfere with the <a href=\"c3ref/soft_heap_limit."
"html\">sqlite3_soft_heap_limit()</a> module.  This interface is exposed only "
"so that applications can provide their own alternative implementation when "
"the SQLite core is compiled with <a href=\"compile."
"html#omitfeatures\">SQLITE_OMIT_MEMORY_ALLOCATION</a>."
msgstr ""

#. type: Content of: <html><body><p><p><p>
#: sedout/34to35.html:805
msgid ""
"The built-in memory allocators in SQLite also provide the following "
"additional interfaces:"
msgstr ""

#. type: Content of: <html><body><p><p><blockquote><pre>
#: sedout/34to35.html:809
#, no-wrap
msgid ""
"sqlite3_int64 sqlite3_memory_used(void);\n"
"sqlite3_int64 sqlite3_memory_highwater(int resetFlag);\n"
msgstr ""

#. type: Content of: <html><body><p><p><p>
#: sedout/34to35.html:812
msgid ""
"These interfaces can be used by an application to monitor how much memory "
"SQLite is using.  The <a href=\"c3ref/memory_highwater."
"html\">sqlite3_memory_used()</a> routine returns the number of bytes of "
"memory currently in use and the <a href=\"c3ref/memory_highwater."
"html\">sqlite3_memory_highwater()</a> returns the maximum instantaneous "
"memory usage.  Neither routine includes the overhead associated with the "
"memory allocator.  These routines are provided for use by the application.  "
"SQLite never invokes them itself.  So if the application is providing its "
"own memory allocation subsystem, it can omit these interfaces if desired."
msgstr ""

#. type: Content of: <html><body><p><p><h2>
#: sedout/34to35.html:822
msgid "4.0 The Mutex Subsystem"
msgstr ""

#. type: Content of: <html><body><p><p><p>
#: sedout/34to35.html:823
msgid ""
"SQLite has always been threadsafe in the sense that it is safe to use "
"different SQLite database connections in different threads at the same "
"time.  The constraint was that the same database connection could not be "
"used in two separate threads at once.  SQLite version 3.5.0 relaxes this "
"constraint."
msgstr ""

#. type: Content of: <html><body><p><p><p>
#: sedout/34to35.html:830
msgid ""
"In order to allow multiple threads to use the same database connection at "
"the same time, SQLite must make extensive use of mutexes.  And for this "
"reason a new mutex subsystem as been added.  The mutex subsystem as the "
"following interface:"
msgstr ""

#. type: Content of: <html><body><p><p><blockquote><pre>
#: sedout/34to35.html:836
#, no-wrap
msgid ""
"sqlite3_mutex *sqlite3_mutex_alloc(int);\n"
"void sqlite3_mutex_free(sqlite3_mutex*);\n"
"void sqlite3_mutex_enter(sqlite3_mutex*);\n"
"int sqlite3_mutex_try(sqlite3_mutex*);\n"
"void sqlite3_mutex_leave(sqlite3_mutex*);\n"
msgstr ""

#. type: Content of: <html><body><p><p><p>
#: sedout/34to35.html:842
msgid ""
"Though these routines exist for the use of the SQLite core, application code "
"is free to use these routines as well, if desired.  A mutex is an <a "
"href=\"c3ref/mutex.html\">sqlite3_mutex</a> object.  The <a href=\"c3ref/"
"mutex_alloc.html\">sqlite3_mutex_alloc()</a> routine allocates a new mutex "
"object and returns a pointer to it.  The argument to <a href=\"c3ref/"
"mutex_alloc.html\">sqlite3_mutex_alloc()</a> should be <a href=\"c3ref/"
"c_mutex_fast.html\">SQLITE_MUTEX_FAST</a> or <a href=\"c3ref/c_mutex_fast."
"html\">SQLITE_MUTEX_RECURSIVE</a> for non-recursive and recursive mutexes, "
"respectively.  If the underlying system does not provide non-recursive "
"mutexes, then a recursive mutex can be substituted in that case.  The "
"argument to <a href=\"c3ref/mutex_alloc.html\">sqlite3_mutex_alloc()</a> can "
"also be a constant designating one of several static mutexes:"
msgstr ""

#. type: Content of: <html><body><p><p><p><ul><li>
#: sedout/34to35.html:853
msgid "<a href=\"c3ref/c_mutex_fast.html\">SQLITE_MUTEX_STATIC_MAIN</a>"
msgstr ""

#. type: Content of: <html><body><p><p><p><ul><li><li>
#: sedout/34to35.html:854
msgid "<a href=\"c3ref/c_mutex_fast.html\">SQLITE_MUTEX_STATIC_MEM</a>"
msgstr ""

#. type: Content of: <html><body><p><p><p><ul><li><li><li>
#: sedout/34to35.html:855
msgid "<a href=\"c3ref/c_mutex_fast.html\">SQLITE_MUTEX_STATIC_MEM2</a>"
msgstr ""

#. type: Content of: <html><body><p><p><p><ul><li><li><li><li>
#: sedout/34to35.html:856
msgid "<a href=\"c3ref/c_mutex_fast.html\">SQLITE_MUTEX_STATIC_PRNG</a>"
msgstr ""

#. type: Content of: <html><body><p><p><p><ul><li><li><li><li><li>
#: sedout/34to35.html:857
msgid "<a href=\"c3ref/c_mutex_fast.html\">SQLITE_MUTEX_STATIC_LRU</a>"
msgstr ""

#. type: Content of: <html><body><p><p><p>
#: sedout/34to35.html:859
msgid ""
"These static mutexes are reserved for use internally by SQLite and should "
"not be used by the application.  The static mutexes are all non-recursive."
msgstr ""

#. type: Content of: <html><body><p><p><p>
#: sedout/34to35.html:864
msgid ""
"The <a href=\"c3ref/mutex_alloc.html\">sqlite3_mutex_free()</a> routine "
"should be used to deallocate a non-static mutex.  If a static mutex is "
"passed to this routine then the behavior is undefined."
msgstr ""

#. type: Content of: <html><body><p><p><p>
#: sedout/34to35.html:869
msgid ""
"The <a href=\"c3ref/mutex_alloc.html\">sqlite3_mutex_enter()</a> attempts to "
"enter the mutex and blocks if another threads is already there.  <a "
"href=\"c3ref/mutex_alloc.html\">sqlite3_mutex_try()</a> attempts to enter "
"and returns <a href=\"rescode.html#ok\">SQLITE_OK</a> on success or <a "
"href=\"rescode.html#busy\">SQLITE_BUSY</a> if another thread is already "
"there.  <a href=\"c3ref/mutex_alloc.html\">sqlite3_mutex_leave()</a> exits a "
"mutex.  The mutex is held until the number of exits matches the number of "
"entrances.  If <a href=\"c3ref/mutex_alloc.html\">sqlite3_mutex_leave()</a> "
"is called on a mutex that the thread is not currently holding, then the "
"behavior is undefined.  If any routine is called for a deallocated mutex, "
"then the behavior is undefined."
msgstr ""

#. type: Content of: <html><body><p><p><p>
#: sedout/34to35.html:880
msgid ""
"The SQLite source code provides multiple implementations of these APIs, "
"suitable for varying environments.  If SQLite is compiled with the "
"SQLITE_THREADSAFE=0 flag then a no-op mutex implementation that is fast but "
"does no real mutual exclusion is provided.  That implementation is suitable "
"for use in single-threaded applications or applications that only use SQLite "
"in a single thread.  Other real mutex implementations are provided based on "
"the underlying operating system."
msgstr ""

#. type: Content of: <html><body><p><p><p>
#: sedout/34to35.html:890
msgid ""
"Embedded applications may wish to provide their own mutex implementation.  "
"If SQLite is compiled with the -DSQLITE_MUTEX_APPDEF=1 compile-time flag "
"then the SQLite core provides no mutex subsystem and a mutex subsystem that "
"matches the interface described above must be provided by the application "
"that links against SQLite."
msgstr ""

#. type: Content of: <html><body><p><p><h2>
#: sedout/34to35.html:896
msgid "5.0 Other Interface Changes"
msgstr ""

#. type: Content of: <html><body><p><p><p>
#: sedout/34to35.html:897
msgid ""
"Version 3.5.0 of SQLite changes the behavior of a few APIs in ways that are "
"technically incompatible.  However, these APIs are seldom used and even when "
"they are used it is difficult to imagine a scenario where the change might "
"break something.  The changes actually makes these interface much more "
"useful and powerful."
msgstr ""

#. type: Content of: <html><body><p><p><p>
#: sedout/34to35.html:904
msgid ""
"Prior to version 3.5.0, the <a href=\"c3ref/enable_shared_cache."
"html\">sqlite3_enable_shared_cache()</a> API would enable and disable the "
"shared cache feature for all connections within a single thread - the same "
"thread from which the sqlite3_enable_shared_cache() routine was called.  "
"Database connections that used the shared cache were restricted to running "
"in the same thread in which they were opened.  Beginning with version 3.5.0, "
"the sqlite3_enable_shared_cache() applies to all database connections in all "
"threads within the process.  Now database connections running in separate "
"threads can share a cache.  And database connections that use shared cache "
"can migrate from one thread to another."
msgstr ""

#. type: Content of: <html><body><p><p><p>
#: sedout/34to35.html:916
msgid ""
"Prior to version 3.5.0 the <a href=\"c3ref/soft_heap_limit."
"html\">sqlite3_soft_heap_limit()</a> set an upper bound on heap memory usage "
"for all database connections within a single thread.  Each thread could have "
"its own heap limit.  Beginning in version 3.5.0, there is a single heap "
"limit for the entire process.  This seems more restrictive (one limit as "
"opposed to many) but in practice it is what most users want."
msgstr ""

#. type: Content of: <html><body><p><p><p>
#: sedout/34to35.html:924
msgid ""
"Prior to version 3.5.0 the <a href=\"c3ref/release_memory."
"html\">sqlite3_release_memory()</a> function would try to reclaim memory "
"from all database connections in the same thread as the "
"sqlite3_release_memory() call.  Beginning with version 3.5.0, the "
"sqlite3_release_memory() function will attempt to reclaim memory from all "
"database connections in all threads."
msgstr ""

#. type: Content of: <html><body><p><p><h2>
#: sedout/34to35.html:930
msgid "6.0 Summary"
msgstr ""

#. type: Content of: <html><body><p><p><p>
#: sedout/34to35.html:931
msgid ""
"The transition from SQLite version 3.4.2 to 3.5.0 is a major change.  Every "
"source code file in the SQLite core had to be modified, some extensively.  "
"And the change introduced some minor incompatibilities in the C interface.  "
"But we feel that the benefits of the transition from 3.4.2 to 3.5.0 far "
"outweigh the pain of porting.  The new VFS layer is now well-defined and "
"stable and should simplify future customizations.  The VFS layer, and the "
"separable memory allocator and mutex subsystems allow a standard SQLite "
"source code amalgamation to be used in an embedded project without change, "
"greatly simplifying configuration management.  And the resulting system is "
"much more tolerant of highly threaded designs."
msgstr ""

#. type: Content of: <html><body><p><p><p>
#: sedout/34to35.html:944
msgid ""
"<small><i>This page last modified on <a href=\"https://sqlite.org/docsrc/"
"honeypot\" id=\"mtimelink\" data-href=\"https://sqlite.org/docsrc/finfo/"
"pages/34to35.in?m=ea67967bbd\">2022-01-08 05:02:57</a> UTC </i></small>"
msgstr ""
