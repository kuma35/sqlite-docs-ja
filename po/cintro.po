# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2023-03-16 09:59+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. type: Content of: <html><body><div><div><div>
#: sedout/cintro.html:6 sedout/cintro.html:121
msgid "An Introduction To The SQLite C/C++ Interface"
msgstr ""

#. type: Content of: <html><body><div><a>
#: sedout/cintro.html:11
msgid "<a href=\"index.html\">"
msgstr ""

#. type: Attribute 'alt' of: <html><body><div><a><img>
#: sedout/cintro.html:12
msgid "SQLite"
msgstr ""

#. type: Content of: <html><body><div><div>
#: sedout/cintro.html:16
msgid "Small. Fast. Reliable."
msgstr ""

#. type: Content of: <html><body><div><div><br>
#: sedout/cintro.html:16
msgid "Choose any three."
msgstr ""

#. type: Content of: <html><body><div><div><ul><li>
#: sedout/cintro.html:20
msgid "<a href=\"index.html\">Home</a>"
msgstr ""

#. type: Content of: <html><body><div><div><ul><li><li>
#: sedout/cintro.html:21
msgid ""
"<a href=\"javascript:void(0)\" onclick='toggle_div(\"submenu\")'>Menu</a>"
msgstr ""

#. type: Content of: <html><body><div><div><ul><li>
#: sedout/cintro.html:22 sedout/cintro.html:34
msgid "<a href='about.html'>About</a>"
msgstr ""

#. type: Content of: <html><body><div><div><ul><li><li><li><li>
#: sedout/cintro.html:23
msgid "<a href=\"docs.html\">Documentation</a>"
msgstr ""

#. type: Content of: <html><body><div><div><ul><li><li><li><li><li>
#: sedout/cintro.html:24
msgid "<a href=\"download.html\">Download</a>"
msgstr ""

#. type: Content of: <html><body><div><div><ul><li><li><li><li><li><li>
#: sedout/cintro.html:25
msgid "<a href='copyright.html'>License</a>"
msgstr ""

#. type: Content of: <html><body><div><div><ul><li><li><li><li><li><li><li>
#: sedout/cintro.html:26
msgid "<a href=\"support.html\">Support</a>"
msgstr ""

#. type: Content of: <html><body><div><div><ul><li><li><li><li><li><li><li><li>
#: sedout/cintro.html:27
msgid "<a href=\"prosupport.html\">Purchase</a>"
msgstr ""

#. type: Content of: <html><body><div><div><ul><li><li><li><li><li><li><li><li><li>
#: sedout/cintro.html:29
msgid "<a href=\"javascript:void(0)\" onclick='toggle_search()'>Search</a>"
msgstr ""

#. type: Content of: <html><body><div><div><ul><li><li>
#: sedout/cintro.html:35
msgid "<a href='docs.html'>Documentation</a>"
msgstr ""

#. type: Content of: <html><body><div><div><ul><li><li><li>
#: sedout/cintro.html:36
msgid "<a href='download.html'>Download</a>"
msgstr ""

#. type: Content of: <html><body><div><div><ul><li><li><li><li>
#: sedout/cintro.html:37
msgid "<a href='support.html'>Support</a>"
msgstr ""

#. type: Content of: <html><body><div><div><ul><li><li><li><li><li>
#: sedout/cintro.html:38
msgid "<a href='prosupport.html'>Purchase</a>"
msgstr ""

#. type: Content of: <html><body><div><div><form><select>
#: sedout/cintro.html:43
msgid "<select name=\"s\" id=\"searchtype\">"
msgstr ""

#. type: Content of: <html><body><div><div><form><select><option>
#: sedout/cintro.html:44
msgid "Search Documentation"
msgstr ""

#. type: Content of: <html><body><div><div><form><select><option>
#: sedout/cintro.html:45
msgid "Search Changelog"
msgstr ""

#. type: Content of: <html><body><div><div><form>
#: sedout/cintro.html:46
msgid ""
"</select> <input type=\"text\" name=\"q\" id=\"searchbox\" value=\"\"/> "
"<input type=\"submit\" value=\"Go\"/>"
msgstr ""

#. type: Content of: <html><body><script>
#: sedout/cintro.html:53
msgid ""
"function toggle_div(nm) { var w = document.getElementById(nm); if( w.style."
"display==\"block\" ){ w.style.display = \"none\"; }else{ w.style.display = "
"\"block\"; } } function toggle_search() { var w = document."
"getElementById(\"searchmenu\"); if( w.style.display==\"block\" ){ w.style."
"display = \"none\"; } else { w.style.display = \"block\"; "
"setTimeout(function(){ document.getElementById(\"searchbox\").focus()  }, "
"30); } } function div_off(nm){document.getElementById(nm).style."
"display=\"none\";} window.onbeforeunload = function(e)"
"{div_off(\"submenu\");} /* Disable the Search feature if we are not "
"operating from CGI, since */ /* Search is accomplished using CGI and will "
"not work without it. */ if( !location.origin || !location.origin.match || !"
"location.origin.match(/http/) ){ document."
"getElementById(\"search_menubutton\").style.display = \"none\"; } /* Used by "
"the Hide/Show button beside syntax diagrams, to toggle the */ function "
"hideorshow(btn,obj){ var x = document.getElementById(obj); var b = document."
"getElementById(btn); if( x.style.display!='none' ){ x.style.display = "
"'none'; b.innerHTML='show'; }else{ x.style.display = ''; b."
"innerHTML='hide'; } return false; } var antiRobot = 0; function antiRobotGo()"
"{ if( antiRobot!=3 ) return; antiRobot = 7; var j = document."
"getElementById(\"mtimelink\"); if(j && j.hasAttribute(\"data-href\")) j."
"href=j.getAttribute(\"data-href\"); } function antiRobotDefense(){ document."
"body.onmousedown=function(){ antiRobot |= 2; antiRobotGo(); document.body."
"onmousedown=null; } document.body.onmousemove=function(){ antiRobot |= 2; "
"antiRobotGo(); document.body.onmousemove=null; } setTimeout(function()"
"{ antiRobot |= 1; antiRobotGo(); }, 100)  antiRobotGo(); } "
"antiRobotDefense();"
msgstr ""

#. type: Content of: <html><body><div><div><div>
#: sedout/cintro.html:124
msgid ""
"<a onclick=\"toggle_toc()\"> <span class=\"fancy_toc_mark\" "
"id=\"toc_mk\">&#x25ba;</span> Table Of Contents </a>"
msgstr ""

#. type: Content of: <html><body><div><div><div><div><div>
#: sedout/cintro.html:128
msgid "<a href=\"#summary\">1. Summary</a>"
msgstr ""

#. type: Content of: <html><body><div><div><div><div><div>
#: sedout/cintro.html:129
msgid "<a href=\"#introduction\">2. Introduction</a>"
msgstr ""

#. type: Content of: <html><body><div><div><div><div><div>
#: sedout/cintro.html:130
msgid ""
"<a href=\"#core_objects_and_interfaces\">3. Core Objects And Interfaces</a>"
msgstr ""

#. type: Content of: <html><body><div><div><div><div><div>
#: sedout/cintro.html:131
msgid ""
"<a href=\"#typical_usage_of_core_routines_and_objects\">4. Typical Usage Of "
"Core Routines And Objects</a>"
msgstr ""

#. type: Content of: <html><body><div><div><div><div><div>
#: sedout/cintro.html:132
msgid ""
"<a href=\"#convenience_wrappers_around_core_routines\">5. Convenience "
"Wrappers Around Core Routines</a>"
msgstr ""

#. type: Content of: <html><body><div><div><div><div><div>
#: sedout/cintro.html:133
msgid ""
"<a href=\"#binding_parameters_and_reusing_prepared_statements\">6. Binding "
"Parameters and Reusing Prepared Statements</a>"
msgstr ""

#. type: Content of: <html><body><div><div><div><div><div>
#: sedout/cintro.html:134
msgid "<a href=\"#configuring_sqlite\">7. Configuring SQLite</a>"
msgstr ""

#. type: Content of: <html><body><div><div><div><div><div>
#: sedout/cintro.html:135
msgid "<a href=\"#extending_sqlite\">8. Extending SQLite</a>"
msgstr ""

#. type: Content of: <html><body><div><div><div><div><div>
#: sedout/cintro.html:136
msgid "<a href=\"#other_interfaces\">9. Other Interfaces</a>"
msgstr ""

#. type: Content of: <html><body><div><div><script>
#: sedout/cintro.html:140
msgid ""
"function toggle_toc(){ var sub = document.getElementById(\"toc_sub\")  var "
"mk = document.getElementById(\"toc_mk\")  if( sub.style.display!=\"block\" )"
"{ sub.style.display = \"block\"; mk.innerHTML = \"&#x25bc;\"; } else { sub."
"style.display = \"none\"; mk.innerHTML = \"&#x25ba;\"; } }"
msgstr ""

#. type: Content of: <html><body><div><h1>
#: sedout/cintro.html:159
msgid "<span>1. </span>Summary"
msgstr ""

#. type: Content of: <html><body><div><p>
#: sedout/cintro.html:161
msgid ""
"The following two objects and eight methods comprise the essential elements "
"of the SQLite interface:"
msgstr ""

#. type: Content of: <html><body><div><p><ul><li>
#: sedout/cintro.html:165
msgid ""
"<b><a href=\"c3ref/sqlite3.html\">sqlite3</a></b> &rarr; The database "
"connection object.  Created by <a href=\"c3ref/open.html\">sqlite3_open()</"
"a> and destroyed by <a href=\"c3ref/close.html\">sqlite3_close()</a>."
msgstr ""

#. type: Content of: <html><body><div><p><ul><li>
#: sedout/cintro.html:169
msgid ""
"<b><a href=\"c3ref/stmt.html\">sqlite3_stmt</a></b> &rarr; The prepared "
"statement object.  Created by <a href=\"c3ref/prepare."
"html\">sqlite3_prepare()</a> and destroyed by <a href=\"c3ref/finalize."
"html\">sqlite3_finalize()</a>."
msgstr ""

#. type: Content of: <html><body><div><p><ul><li>
#: sedout/cintro.html:174
msgid ""
"<b><a href=\"c3ref/open.html\">sqlite3_open()</a></b> &rarr; Open a "
"connection to a new or existing SQLite database.  The constructor for <a "
"href=\"c3ref/sqlite3.html\">sqlite3</a>."
msgstr ""

#. type: Content of: <html><body><div><p><ul><li>
#: sedout/cintro.html:178
msgid ""
"<b><a href=\"c3ref/prepare.html\">sqlite3_prepare()</a></b> &rarr; Compile "
"SQL text into byte-code that will do the work of querying or updating the "
"database.  The constructor for <a href=\"c3ref/stmt.html\">sqlite3_stmt</a>."
msgstr ""

#. type: Content of: <html><body><div><p><ul><li>
#: sedout/cintro.html:183
msgid ""
"<b><a href=\"c3ref/bind_blob.html\">sqlite3_bind()</a></b> &rarr; Store "
"application data into <a href=\"lang_expr.html#varparam\">parameters</a> of "
"the original SQL."
msgstr ""

#. type: Content of: <html><body><div><p><ul><li>
#: sedout/cintro.html:188
msgid ""
"<b><a href=\"c3ref/step.html\">sqlite3_step()</a></b> &rarr; Advance an <a "
"href=\"c3ref/stmt.html\">sqlite3_stmt</a> to the next result row or to "
"completion."
msgstr ""

#. type: Content of: <html><body><div><p><ul><li>
#: sedout/cintro.html:191
msgid ""
"<b><a href=\"c3ref/column_blob.html\">sqlite3_column()</a></b> &rarr; Column "
"values in the current result row for an <a href=\"c3ref/stmt."
"html\">sqlite3_stmt</a>."
msgstr ""

#. type: Content of: <html><body><div><p><ul><li>
#: sedout/cintro.html:194
msgid ""
"<b><a href=\"c3ref/finalize.html\">sqlite3_finalize()</a></b> &rarr; "
"Destructor for <a href=\"c3ref/stmt.html\">sqlite3_stmt</a>."
msgstr ""

#. type: Content of: <html><body><div><p><ul><li>
#: sedout/cintro.html:197
msgid ""
"<b><a href=\"c3ref/close.html\">sqlite3_close()</a></b> &rarr; Destructor "
"for <a href=\"c3ref/sqlite3.html\">sqlite3</a>."
msgstr ""

#. type: Content of: <html><body><div><p><ul><li>
#: sedout/cintro.html:200
msgid ""
"<b><a href=\"c3ref/exec.html\">sqlite3_exec()</a></b> &rarr; A wrapper "
"function that does <a href=\"c3ref/prepare.html\">sqlite3_prepare()</a>, <a "
"href=\"c3ref/step.html\">sqlite3_step()</a>, <a href=\"c3ref/column_blob."
"html\">sqlite3_column()</a>, and <a href=\"c3ref/finalize."
"html\">sqlite3_finalize()</a> for a string of one or more SQL statements."
msgstr ""

#. type: Content of: <html><body><div><p><h1>
#: sedout/cintro.html:206
msgid "<span>2. </span>Introduction"
msgstr ""

#. type: Content of: <html><body><div><p><p>
#: sedout/cintro.html:209
msgid ""
"SQLite has more than 225 APIs.  However, most of the APIs are optional and "
"very specialized and can be ignored by beginners.  The core API is small, "
"simple, and easy to learn.  This article summarizes the core API."
msgstr ""

#. type: Content of: <html><body><div><p><p>
#: sedout/cintro.html:217
msgid ""
"A separate document, <a href=\"c3ref/intro.html\">The SQLite C/C++ "
"Interface</a>, provides detailed specifications for all C/C++ APIs for "
"SQLite.  Once the reader understands the basic principles of operation for "
"SQLite, <a href=\"c3ref/intro.html\">that document</a> should be used as a "
"reference guide.  This article is intended as introduction only and is "
"neither a complete nor authoritative reference for the SQLite API."
msgstr ""

#. type: Content of: <html><body><div><p><h1>
#: sedout/cintro.html:227
msgid "<span>3. </span>Core Objects And Interfaces"
msgstr ""

#. type: Content of: <html><body><div><p><p>
#: sedout/cintro.html:230
msgid ""
"The principal task of an SQL database engine is to evaluate SQL statements "
"of SQL.  To accomplish this, the developer needs two objects:"
msgstr ""

#. type: Content of: <html><body><div><p><ul><li>
#: sedout/cintro.html:235
msgid ""
"The <a href=\"c3ref/sqlite3.html\">database connection</a> object: sqlite3"
msgstr ""

#. type: Content of: <html><body><div><p><ul><li>
#: sedout/cintro.html:236
msgid ""
"The <a href=\"c3ref/stmt.html\">prepared statement</a> object: sqlite3_stmt"
msgstr ""

#. type: Content of: <html><body><div><p><p>
#: sedout/cintro.html:240
msgid ""
"Strictly speaking, the <a href=\"c3ref/stmt.html\">prepared statement</a> "
"object is not required since the convenience wrapper interfaces, <a "
"href=\"c3ref/exec.html\">sqlite3_exec</a> or <a href=\"c3ref/free_table."
"html\">sqlite3_get_table</a>, can be used and these convenience wrappers "
"encapsulate and hide the <a href=\"c3ref/stmt.html\">prepared statement</a> "
"object.  Nevertheless, an understanding of <a href=\"c3ref/stmt."
"html\">prepared statements</a> is needed to make full use of SQLite."
msgstr ""

#. type: Content of: <html><body><div><p><p>
#: sedout/cintro.html:249
msgid ""
"The <a href=\"c3ref/sqlite3.html\">database connection</a> and <a "
"href=\"c3ref/stmt.html\">prepared statement</a> objects are controlled by a "
"small set of C/C++ interface routine listed below."
msgstr ""

#. type: Content of: <html><body><div><p><ul><li>
#: sedout/cintro.html:254
msgid "<a href=\"c3ref/open.html\">sqlite3_open()</a>"
msgstr ""

#. type: Content of: <html><body><div><p><ul><li>
#: sedout/cintro.html:255
msgid "<a href=\"c3ref/prepare.html\">sqlite3_prepare()</a>"
msgstr ""

#. type: Content of: <html><body><div><p><ul><li>
#: sedout/cintro.html:256
msgid "<a href=\"c3ref/step.html\">sqlite3_step()</a>"
msgstr ""

#. type: Content of: <html><body><div><p><ul><li>
#: sedout/cintro.html:257
msgid "<a href=\"c3ref/column_blob.html\">sqlite3_column()</a>"
msgstr ""

#. type: Content of: <html><body><div><p><ul><li>
#: sedout/cintro.html:258
msgid "<a href=\"c3ref/finalize.html\">sqlite3_finalize()</a>"
msgstr ""

#. type: Content of: <html><body><div><p><ul><li>
#: sedout/cintro.html:259
msgid "<a href=\"c3ref/close.html\">sqlite3_close()</a>"
msgstr ""

#. type: Content of: <html><body><div><p><p>
#: sedout/cintro.html:263
msgid ""
"Note that the list of routines above is conceptual rather than actual.  Many "
"of these routines come in multiple versions.  For example, the list above "
"shows a single routine named <a href=\"c3ref/open.html\">sqlite3_open()</a> "
"when in fact there are three separate routines that accomplish the same "
"thing in slightly different ways: <a href=\"c3ref/open."
"html\">sqlite3_open()</a>, <a href=\"c3ref/open.html\">sqlite3_open16()</a> "
"and <a href=\"c3ref/open.html\">sqlite3_open_v2()</a>.  The list mentions <a "
"href=\"c3ref/column_blob.html\">sqlite3_column()</a> when in fact no such "
"routine exists.  The \"sqlite3_column()\" shown in the list is a placeholder "
"for an entire family of routines that extract column data in various "
"datatypes."
msgstr ""

#. type: Content of: <html><body><div><p><p>
#: sedout/cintro.html:277
msgid "Here is a summary of what the core interfaces do:"
msgstr ""

#. type: Content of: <html><body><div><p><ul><li>
#: sedout/cintro.html:282
msgid ""
"<b><a href=\"c3ref/open.html\">sqlite3_open()</a></b> This routine opens a "
"connection to an SQLite database file and returns a <a href=\"c3ref/sqlite3."
"html\">database connection</a> object.  This is often the first SQLite API "
"call that an application makes and is a prerequisite for most other SQLite "
"APIs.  Many SQLite interfaces require a pointer to the <a href=\"c3ref/"
"sqlite3.html\">database connection</a> object as their first parameter and "
"can be thought of as methods on the <a href=\"c3ref/sqlite3.html\">database "
"connection</a> object.  This routine is the constructor for the <a "
"href=\"c3ref/sqlite3.html\">database connection</a> object."
msgstr ""

#. type: Content of: <html><body><div><p><ul><li>
#: sedout/cintro.html:294
msgid ""
"<b><a href=\"c3ref/prepare.html\">sqlite3_prepare()</a></b> This routine "
"converts SQL text into a <a href=\"c3ref/stmt.html\">prepared statement</a> "
"object and returns a pointer to that object.  This interface requires a <a "
"href=\"c3ref/sqlite3.html\">database connection</a> pointer created by a "
"prior call to <a href=\"c3ref/open.html\">sqlite3_open()</a> and a text "
"string containing the SQL statement to be prepared.  This API does not "
"actually evaluate the SQL statement.  It merely prepares the SQL statement "
"for evaluation.  Think of each SQL statement as a small computer program.  "
"The purpose of <a href=\"c3ref/prepare.html\">sqlite3_prepare()</a> is to "
"compile that program into object code.  The <a href=\"c3ref/stmt."
"html\">prepared statement</a> is the object code.  The <a href=\"c3ref/step."
"html\">sqlite3_step()</a> interface then runs the object code to get a "
"result.  New applications should always invoke <a href=\"c3ref/prepare."
"html\">sqlite3_prepare_v2()</a> instead of <a href=\"c3ref/prepare."
"html\">sqlite3_prepare()</a>.  The older <a href=\"c3ref/prepare."
"html\">sqlite3_prepare()</a> is retained for backwards compatibility.  But "
"<a href=\"c3ref/prepare.html\">sqlite3_prepare_v2()</a> provides a much "
"better interface."
msgstr ""

#. type: Content of: <html><body><div><p><ul><li>
#: sedout/cintro.html:313
msgid ""
"<b><a href=\"c3ref/step.html\">sqlite3_step()</a></b> This routine is used "
"to evaluate a <a href=\"c3ref/stmt.html\">prepared statement</a> that has "
"been previously created by the <a href=\"c3ref/prepare."
"html\">sqlite3_prepare()</a> interface.  The statement is evaluated up to "
"the point where the first row of results are available.  To advance to the "
"second row of results, invoke <a href=\"c3ref/step.html\">sqlite3_step()</a> "
"again.  Continue invoking <a href=\"c3ref/step.html\">sqlite3_step()</a> "
"until the statement is complete.  Statements that do not return results (ex: "
"INSERT, UPDATE, or DELETE statements) run to completion on a single call to "
"<a href=\"c3ref/step.html\">sqlite3_step()</a>."
msgstr ""

#. type: Content of: <html><body><div><p><ul><li>
#: sedout/cintro.html:323
msgid ""
"<b><a href=\"c3ref/column_blob.html\">sqlite3_column()</a></b> This routine "
"returns a single column from the current row of a result set for a <a "
"href=\"c3ref/stmt.html\">prepared statement</a> that is being evaluated by "
"<a href=\"c3ref/step.html\">sqlite3_step()</a>.  Each time <a href=\"c3ref/"
"step.html\">sqlite3_step()</a> stops with a new result set row, this routine "
"can be called multiple times to find the values of all columns in that row.  "
"As noted above, there really is no such thing as a \"sqlite3_column()\" "
"function in the SQLite API.  Instead, what we here call \"sqlite3_column()\" "
"is a place-holder for an entire family of functions that return a value from "
"the result set in various data types.  There are also routines in this "
"family that return the size of the result (if it is a string or BLOB) and "
"the number of columns in the result set."
msgstr ""

#. type: Content of: <html><body><div><p><ul><li><ul><li>
#: sedout/cintro.html:338
msgid "<a href=\"c3ref/column_blob.html\">sqlite3_column_blob()</a>"
msgstr ""

#. type: Content of: <html><body><div><p><ul><li><ul><li>
#: sedout/cintro.html:339
msgid "<a href=\"c3ref/column_blob.html\">sqlite3_column_bytes()</a>"
msgstr ""

#. type: Content of: <html><body><div><p><ul><li><ul><li>
#: sedout/cintro.html:340
msgid "<a href=\"c3ref/column_blob.html\">sqlite3_column_bytes16()</a>"
msgstr ""

#. type: Content of: <html><body><div><p><ul><li><ul><li>
#: sedout/cintro.html:341
msgid "<a href=\"c3ref/column_count.html\">sqlite3_column_count()</a>"
msgstr ""

#. type: Content of: <html><body><div><p><ul><li><ul><li>
#: sedout/cintro.html:342
msgid "<a href=\"c3ref/column_blob.html\">sqlite3_column_double()</a>"
msgstr ""

#. type: Content of: <html><body><div><p><ul><li><ul><li>
#: sedout/cintro.html:343
msgid "<a href=\"c3ref/column_blob.html\">sqlite3_column_int()</a>"
msgstr ""

#. type: Content of: <html><body><div><p><ul><li><ul><li>
#: sedout/cintro.html:344
msgid "<a href=\"c3ref/column_blob.html\">sqlite3_column_int64()</a>"
msgstr ""

#. type: Content of: <html><body><div><p><ul><li><ul><li>
#: sedout/cintro.html:345
msgid "<a href=\"c3ref/column_blob.html\">sqlite3_column_text()</a>"
msgstr ""

#. type: Content of: <html><body><div><p><ul><li><ul><li>
#: sedout/cintro.html:346
msgid "<a href=\"c3ref/column_blob.html\">sqlite3_column_text16()</a>"
msgstr ""

#. type: Content of: <html><body><div><p><ul><li><ul><li>
#: sedout/cintro.html:347
msgid "<a href=\"c3ref/column_blob.html\">sqlite3_column_type()</a>"
msgstr ""

#. type: Content of: <html><body><div><p><ul><li><ul><li>
#: sedout/cintro.html:348
msgid "<a href=\"c3ref/column_blob.html\">sqlite3_column_value()</a>"
msgstr ""

#. type: Content of: <html><body><div><p><ul><li><p>
#: sedout/cintro.html:352
msgid "<b><a href=\"c3ref/finalize.html\">sqlite3_finalize()</a></b>"
msgstr ""

#. type: Content of: <html><body><div><p><ul><li><p>
#: sedout/cintro.html:354
msgid ""
"This routine destroys a <a href=\"c3ref/stmt.html\">prepared statement</a> "
"created by a prior call to <a href=\"c3ref/prepare.html\">sqlite3_prepare()</"
"a>.  Every prepared statement must be destroyed using a call to this routine "
"in order to avoid memory leaks."
msgstr ""

#. type: Content of: <html><body><div><p><ul><li><p>
#: sedout/cintro.html:358
msgid "<b><a href=\"c3ref/close.html\">sqlite3_close()</a></b>"
msgstr ""

#. type: Content of: <html><body><div><p><ul><li><p>
#: sedout/cintro.html:360
msgid ""
"This routine closes a <a href=\"c3ref/sqlite3.html\">database connection</a> "
"previously opened by a call to <a href=\"c3ref/open.html\">sqlite3_open()</"
"a>.  All <a href=\"c3ref/stmt.html\">prepared statements</a> associated with "
"the connection should be <a href=\"c3ref/finalize.html\">finalized</a> prior "
"to closing the connection."
msgstr ""

#. type: Content of: <html><body><div><p><h1>
#: sedout/cintro.html:366
msgid "<span>4. </span>Typical Usage Of Core Routines And Objects"
msgstr ""

#. type: Content of: <html><body><div><p><p>
#: sedout/cintro.html:369
msgid ""
"An application will typically use <a href=\"c3ref/open."
"html\">sqlite3_open()</a> to create a single <a href=\"c3ref/sqlite3."
"html\">database connection</a> during initialization.  Note that <a "
"href=\"c3ref/open.html\">sqlite3_open()</a> can be used to either open "
"existing database files or to create and open new database files.  While "
"many applications use only a single <a href=\"c3ref/sqlite3.html\">database "
"connection</a>, there is no reason why an application cannot call <a "
"href=\"c3ref/open.html\">sqlite3_open()</a> multiple times in order to open "
"multiple <a href=\"c3ref/sqlite3.html\">database connections</a> - either to "
"the same database or to different databases.  Sometimes a multi-threaded "
"application will create separate <a href=\"c3ref/sqlite3.html\">database "
"connections</a> for each thread.  Note that a single <a href=\"c3ref/sqlite3."
"html\">database connection</a> can access two or more databases using the <a "
"href=\"lang_attach.html\">ATTACH</a> SQL command, so it is not necessary to "
"have a separate database connection for each database file."
msgstr ""

#. type: Content of: <html><body><div><p><p>
#: sedout/cintro.html:385
msgid ""
"Many applications destroy their <a href=\"c3ref/sqlite3.html\">database "
"connections</a> using calls to <a href=\"c3ref/close.html\">sqlite3_close()</"
"a> at shutdown.  Or, for example, an application that uses SQLite as its <a "
"href=\"appfileformat.html\">application file format</a> might open <a "
"href=\"c3ref/sqlite3.html\">database connections</a> in response to a File/"
"Open menu action and then destroy the corresponding <a href=\"c3ref/sqlite3."
"html\">database connection</a> in response to the File/Close menu."
msgstr ""

#. type: Content of: <html><body><div><p><p>
#: sedout/cintro.html:394
msgid "To run an SQL statement, the application follows these steps:"
msgstr ""

#. type: Content of: <html><body><div><p><ol><li>
#: sedout/cintro.html:398
msgid ""
"Create a <a href=\"c3ref/stmt.html\">prepared statement</a> using <a "
"href=\"c3ref/prepare.html\">sqlite3_prepare()</a>."
msgstr ""

#. type: Content of: <html><body><div><p><ol><li>
#: sedout/cintro.html:399
msgid ""
"Evaluate the <a href=\"c3ref/stmt.html\">prepared statement</a> by calling "
"<a href=\"c3ref/step.html\">sqlite3_step()</a> one or more times."
msgstr ""

#. type: Content of: <html><body><div><p><ol><li>
#: sedout/cintro.html:401
msgid ""
"For queries, extract results by calling <a href=\"c3ref/column_blob."
"html\">sqlite3_column()</a> in between two calls to <a href=\"c3ref/step."
"html\">sqlite3_step()</a>."
msgstr ""

#. type: Content of: <html><body><div><p><ol><li>
#: sedout/cintro.html:404
msgid ""
"Destroy the <a href=\"c3ref/stmt.html\">prepared statement</a> using <a "
"href=\"c3ref/finalize.html\">sqlite3_finalize()</a>."
msgstr ""

#. type: Content of: <html><body><div><p><p>
#: sedout/cintro.html:408
msgid ""
"The foregoing is all one really needs to know in order to use SQLite "
"effectively.  All the rest is optimization and detail."
msgstr ""

#. type: Content of: <html><body><div><p><h1>
#: sedout/cintro.html:412
msgid "<span>5. </span>Convenience Wrappers Around Core Routines"
msgstr ""

#. type: Content of: <html><body><div><p><p>
#: sedout/cintro.html:415
msgid ""
"The <a href=\"c3ref/exec.html\">sqlite3_exec()</a> interface is a "
"convenience wrapper that carries out all four of the above steps with a "
"single function call.  A callback function passed into <a href=\"c3ref/exec."
"html\">sqlite3_exec()</a> is used to process each row of the result set.  "
"The <a href=\"c3ref/free_table.html\">sqlite3_get_table()</a> is another "
"convenience wrapper that does all four of the above steps.  The <a "
"href=\"c3ref/free_table.html\">sqlite3_get_table()</a> interface differs "
"from <a href=\"c3ref/exec.html\">sqlite3_exec()</a> in that it stores the "
"results of queries in heap memory rather than invoking a callback."
msgstr ""

#. type: Content of: <html><body><div><p><p>
#: sedout/cintro.html:425
msgid ""
"It is important to realize that neither <a href=\"c3ref/exec."
"html\">sqlite3_exec()</a> nor <a href=\"c3ref/free_table."
"html\">sqlite3_get_table()</a> do anything that cannot be accomplished using "
"the core routines.  In fact, these wrappers are implemented purely in terms "
"of the core routines."
msgstr ""

#. type: Content of: <html><body><div><p><h1>
#: sedout/cintro.html:432
msgid "<span>6. </span>Binding Parameters and Reusing Prepared Statements"
msgstr ""

#. type: Content of: <html><body><div><p><p>
#: sedout/cintro.html:435
msgid ""
"In prior discussion, it was assumed that each SQL statement is prepared "
"once, evaluated, then destroyed.  However, SQLite allows the same <a "
"href=\"c3ref/stmt.html\">prepared statement</a> to be evaluated multiple "
"times.  This is accomplished using the following routines:"
msgstr ""

#. type: Content of: <html><body><div><p><ul><li>
#: sedout/cintro.html:442
msgid "<a href=\"c3ref/reset.html\">sqlite3_reset()</a>"
msgstr ""

#. type: Content of: <html><body><div><p><ul><li>
#: sedout/cintro.html:443
msgid "<a href=\"c3ref/bind_blob.html\">sqlite3_bind()</a>"
msgstr ""

#. type: Content of: <html><body><div><p><p>
#: sedout/cintro.html:447
msgid ""
"After a <a href=\"c3ref/stmt.html\">prepared statement</a> has been "
"evaluated by one or more calls to <a href=\"c3ref/step."
"html\">sqlite3_step()</a>, it can be reset in order to be evaluated again by "
"a call to <a href=\"c3ref/reset.html\">sqlite3_reset()</a>.  Think of <a "
"href=\"c3ref/reset.html\">sqlite3_reset()</a> as rewinding the <a "
"href=\"c3ref/stmt.html\">prepared statement</a> program back to the "
"beginning.  Using <a href=\"c3ref/reset.html\">sqlite3_reset()</a> on an "
"existing <a href=\"c3ref/stmt.html\">prepared statement</a> rather than "
"creating a new <a href=\"c3ref/stmt.html\">prepared statement</a> avoids "
"unnecessary calls to <a href=\"c3ref/prepare.html\">sqlite3_prepare()</a>.  "
"For many SQL statements, the time needed to run <a href=\"c3ref/prepare."
"html\">sqlite3_prepare()</a> equals or exceeds the time needed by <a "
"href=\"c3ref/step.html\">sqlite3_step()</a>.  So avoiding calls to <a "
"href=\"c3ref/prepare.html\">sqlite3_prepare()</a> can give a significant "
"performance improvement."
msgstr ""

#. type: Content of: <html><body><div><p><p>
#: sedout/cintro.html:462
msgid ""
"It is not commonly useful to evaluate the <em>exact</em> same SQL statement "
"more than once.  More often, one wants to evaluate similar statements.  For "
"example, you might want to evaluate an INSERT statement multiple times with "
"different values.  Or you might want to evaluate the same query multiple "
"times using a different key in the WHERE clause.  To accommodate this, "
"SQLite allows SQL statements to contain <a href=\"lang_expr."
"html#varparam\">parameters</a> which are \"bound\" to values prior to being "
"evaluated.  These values can later be changed and the same <a href=\"c3ref/"
"stmt.html\">prepared statement</a> can be evaluated a second time using the "
"new values."
msgstr ""

#. type: Content of: <html><body><div><p><p>
#: sedout/cintro.html:475
msgid ""
"SQLite allows a <a href=\"lang_expr.html#varparam\">parameter</a> wherever a "
"string literal, blob literal, numeric constant, or NULL is allowed in "
"queries or data modification statements. (DQL or DML)  (Parameters may not "
"be used for column or table names, or as values for constraints or default "
"values. (DDL))  A <a href=\"lang_expr.html#varparam\">parameter</a> takes "
"one of the following forms:"
msgstr ""

#. type: Content of: <html><body><div><p><ul><li>
#: sedout/cintro.html:484
msgid "<b>?</b>"
msgstr ""

#. type: Content of: <html><body><div><p><ul><li>
#: sedout/cintro.html:485
msgid "<b>?</b><i>NNN</i>"
msgstr ""

#. type: Content of: <html><body><div><p><ul><li>
#: sedout/cintro.html:486
msgid "<b>:</b><i>AAA</i>"
msgstr ""

#. type: Content of: <html><body><div><p><ul><li>
#: sedout/cintro.html:487
msgid "<b>$</b><i>AAA</i>"
msgstr ""

#. type: Content of: <html><body><div><p><ul><li>
#: sedout/cintro.html:488
msgid "<b>@</b><i>AAA</i>"
msgstr ""

#. type: Content of: <html><body><div><p><p>
#: sedout/cintro.html:492
msgid ""
"In the examples above, <i>NNN</i> is an integer value and <i>AAA</i> is an "
"identifier.  A parameter initially has a value of NULL.  Prior to calling <a "
"href=\"c3ref/step.html\">sqlite3_step()</a> for the first time or "
"immediately after <a href=\"c3ref/reset.html\">sqlite3_reset()</a>, the "
"application can invoke the <a href=\"c3ref/bind_blob.html\">sqlite3_bind()</"
"a> interfaces to attach values to the parameters.  Each call to <a "
"href=\"c3ref/bind_blob.html\">sqlite3_bind()</a> overrides prior bindings on "
"the same parameter."
msgstr ""

#. type: Content of: <html><body><div><p><p>
#: sedout/cintro.html:503
msgid ""
"An application is allowed to prepare multiple SQL statements in advance and "
"evaluate them as needed.  There is no arbitrary limit to the number of "
"outstanding <a href=\"c3ref/stmt.html\">prepared statements</a>.  Some "
"applications call <a href=\"c3ref/prepare.html\">sqlite3_prepare()</a> "
"multiple times at start-up to create all of the <a href=\"c3ref/stmt."
"html\">prepared statements</a> they will ever need.  Other applications keep "
"a cache of the most recently used <a href=\"c3ref/stmt.html\">prepared "
"statements</a> and then reuse <a href=\"c3ref/stmt.html\">prepared "
"statements</a> out of the cache when available.  Another approach is to only "
"reuse <a href=\"c3ref/stmt.html\">prepared statements</a> when they are "
"inside of a loop."
msgstr ""

#. type: Content of: <html><body><div><p><h1>
#: sedout/cintro.html:515
msgid "<span>7. </span>Configuring SQLite"
msgstr ""

#. type: Content of: <html><body><div><p><p>
#: sedout/cintro.html:518
msgid ""
"The default configuration for SQLite works great for most applications.  But "
"sometimes developers want to tweak the setup to try to squeeze out a little "
"more performance, or take advantage of some obscure feature."
msgstr ""

#. type: Content of: <html><body><div><p><p>
#: sedout/cintro.html:522
msgid ""
"The <a href=\"c3ref/config.html\">sqlite3_config()</a> interface is used to "
"make global, process-wide configuration changes for SQLite.  The <a "
"href=\"c3ref/config.html\">sqlite3_config()</a> interface must be called "
"before any <a href=\"c3ref/sqlite3.html\">database connections</a> are "
"created.  The <a href=\"c3ref/config.html\">sqlite3_config()</a> interface "
"allows the programmer to do things like:"
msgstr ""

#. type: Content of: <html><body><div><p><p><ul><li>
#: sedout/cintro.html:527
msgid ""
"Adjust how SQLite does <a href=\"malloc.html\">memory allocation</a>, "
"including setting up alternative memory allocators appropriate for safety-"
"critical real-time embedded systems and application-defined memory "
"allocators."
msgstr ""

#. type: Content of: <html><body><div><p><p><ul><li>
#: sedout/cintro.html:530
msgid "Set up a process-wide <a href=\"errlog.html\">error log</a>."
msgstr ""

#. type: Content of: <html><body><div><p><p><ul><li>
#: sedout/cintro.html:531
msgid "Specify an application-defined page cache."
msgstr ""

#. type: Content of: <html><body><div><p><p><ul><li>
#: sedout/cintro.html:532
msgid ""
"Adjust the use of mutexes so that they are appropriate for various <a "
"href=\"threadsafe.html\">threading models</a>, or substitute an application-"
"defined mutex system."
msgstr ""

#. type: Content of: <html><body><div><p><p><p>
#: sedout/cintro.html:537
msgid ""
"After process-wide configuration is complete and <a href=\"c3ref/sqlite3."
"html\">database connections</a> have been created, individual database "
"connections can be configured using calls to <a href=\"c3ref/limit."
"html\">sqlite3_limit()</a> and <a href=\"c3ref/db_config."
"html\">sqlite3_db_config()</a>."
msgstr ""

#. type: Content of: <html><body><div><p><p><h1>
#: sedout/cintro.html:541
msgid "<span>8. </span>Extending SQLite"
msgstr ""

#. type: Content of: <html><body><div><p><p><p>
#: sedout/cintro.html:544
msgid ""
"SQLite includes interfaces that can be used to extend its functionality.  "
"Such routines include:"
msgstr ""

#. type: Content of: <html><body><div><p><p><ul><li>
#: sedout/cintro.html:549
msgid "<a href=\"c3ref/create_collation.html\">sqlite3_create_collation()</a>"
msgstr ""

#. type: Content of: <html><body><div><p><p><ul><li>
#: sedout/cintro.html:550
msgid "<a href=\"c3ref/create_function.html\">sqlite3_create_function()</a>"
msgstr ""

#. type: Content of: <html><body><div><p><p><ul><li>
#: sedout/cintro.html:551
msgid "<a href=\"c3ref/create_module.html\">sqlite3_create_module()</a>"
msgstr ""

#. type: Content of: <html><body><div><p><p><ul><li>
#: sedout/cintro.html:552
msgid "<a href=\"c3ref/vfs_find.html\">sqlite3_vfs_register()</a>"
msgstr ""

#. type: Content of: <html><body><div><p><p><p>
#: sedout/cintro.html:556
msgid ""
"The <a href=\"c3ref/create_collation.html\">sqlite3_create_collation()</a> "
"interface is used to create new <a href=\"datatype3."
"html#collation\">collating sequences</a> for sorting text.  The <a "
"href=\"c3ref/create_module.html\">sqlite3_create_module()</a> interface is "
"used to register new <a href=\"vtab.html\">virtual table</a> "
"implementations.  The <a href=\"c3ref/vfs_find."
"html\">sqlite3_vfs_register()</a> interface creates new <a href=\"vfs."
"html\">VFSes</a>."
msgstr ""

#. type: Content of: <html><body><div><p><p><p>
#: sedout/cintro.html:564
msgid ""
"The <a href=\"c3ref/create_function.html\">sqlite3_create_function()</a> "
"interface creates new SQL functions - either scalar or aggregate.  The new "
"function implementation typically makes use of the following additional "
"interfaces:"
msgstr ""

#. type: Content of: <html><body><div><p><p><ul><li>
#: sedout/cintro.html:570
msgid ""
"<a href=\"c3ref/aggregate_context.html\">sqlite3_aggregate_context()</a>"
msgstr ""

#. type: Content of: <html><body><div><p><p><ul><li>
#: sedout/cintro.html:571
msgid "<a href=\"c3ref/result_blob.html\">sqlite3_result()</a>"
msgstr ""

#. type: Content of: <html><body><div><p><p><ul><li>
#: sedout/cintro.html:572
msgid "<a href=\"c3ref/user_data.html\">sqlite3_user_data()</a>"
msgstr ""

#. type: Content of: <html><body><div><p><p><ul><li>
#: sedout/cintro.html:573
msgid "<a href=\"c3ref/value_blob.html\">sqlite3_value()</a>"
msgstr ""

#. type: Content of: <html><body><div><p><p><p>
#: sedout/cintro.html:577
msgid ""
"All of the built-in SQL functions of SQLite are created using exactly these "
"same interfaces.  Refer to the SQLite source code, and in particular the <a "
"href=\"http://www.sqlite.org/src/doc/trunk/src/date.c\">date.c</a> and <a "
"href=\"http://www.sqlite.org/src/doc/trunk/src/func.c\">func.c</a> source "
"files for examples."
msgstr ""

#. type: Content of: <html><body><div><p><p><p>
#: sedout/cintro.html:586
msgid ""
"Shared libraries or DLLs can be used as <a href=\"loadext.html\">loadable "
"extensions</a> to SQLite."
msgstr ""

#. type: Content of: <html><body><div><p><p><h1>
#: sedout/cintro.html:588
msgid "<span>9. </span>Other Interfaces"
msgstr ""

#. type: Content of: <html><body><div><p><p><p>
#: sedout/cintro.html:591
msgid ""
"This article only mentions the most important and most commonly used SQLite "
"interfaces.  The SQLite library includes many other APIs implementing useful "
"features that are not described here.  A <a href=\"c3ref/funclist."
"html\">complete list of functions</a> that form the SQLite application "
"programming interface is found at the <a href=\"c3ref/intro.html\">C/C++ "
"Interface Specification</a>.  Refer to that document for complete and "
"authoritative information about all SQLite interfaces."
msgstr ""

#. type: Content of: <html><body><div><p><p><p>
#: sedout/cintro.html:601
msgid ""
"<small><i>This page last modified on <a href=\"https://sqlite.org/docsrc/"
"honeypot\" id=\"mtimelink\" data-href=\"https://sqlite.org/docsrc/finfo/"
"pages/cintro.in?m=8fd0a5fe33\">2022-12-31 21:51:03</a> UTC </i></small>"
msgstr ""
