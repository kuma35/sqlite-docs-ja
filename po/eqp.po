# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2023-03-15 20:27+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. type: Content of: <html><body><div><div><div>
#: sedout/eqp.html:6 sedout/eqp.html:121
msgid "EXPLAIN QUERY PLAN"
msgstr ""

#. type: Content of: <html><body><div><a>
#: sedout/eqp.html:11
msgid "<a href=\"index.html\">"
msgstr ""

#. type: Attribute 'alt' of: <html><body><div><a><img>
#: sedout/eqp.html:12
msgid "SQLite"
msgstr ""

#. type: Content of: <html><body><div><div>
#: sedout/eqp.html:16
msgid "Small. Fast. Reliable."
msgstr ""

#. type: Content of: <html><body><div><div><br>
#: sedout/eqp.html:16
msgid "Choose any three."
msgstr ""

#. type: Content of: <html><body><div><div><ul><li>
#: sedout/eqp.html:20
msgid "<a href=\"index.html\">Home</a>"
msgstr ""

#. type: Content of: <html><body><div><div><ul><li><li>
#: sedout/eqp.html:21
msgid "<a href=\"javascript:void(0)\" onclick='toggle_div(\"submenu\")'>Menu</a>"
msgstr ""

#. type: Content of: <html><body><div><div><ul><li>
#: sedout/eqp.html:22 sedout/eqp.html:34
msgid "<a href='about.html'>About</a>"
msgstr ""

#. type: Content of: <html><body><div><div><ul><li><li><li><li>
#: sedout/eqp.html:23
msgid "<a href=\"docs.html\">Documentation</a>"
msgstr ""

#. type: Content of: <html><body><div><div><ul><li><li><li><li><li>
#: sedout/eqp.html:24
msgid "<a href=\"download.html\">Download</a>"
msgstr ""

#. type: Content of: <html><body><div><div><ul><li><li><li><li><li><li>
#: sedout/eqp.html:25
msgid "<a href='copyright.html'>License</a>"
msgstr ""

#. type: Content of: <html><body><div><div><ul><li><li><li><li><li><li><li>
#: sedout/eqp.html:26
msgid "<a href=\"support.html\">Support</a>"
msgstr ""

#. type: Content of: <html><body><div><div><ul><li><li><li><li><li><li><li><li>
#: sedout/eqp.html:27
msgid "<a href=\"prosupport.html\">Purchase</a>"
msgstr ""

#. type: Content of: <html><body><div><div><ul><li><li><li><li><li><li><li><li><li>
#: sedout/eqp.html:29
msgid "<a href=\"javascript:void(0)\" onclick='toggle_search()'>Search</a>"
msgstr ""

#. type: Content of: <html><body><div><div><ul><li><li>
#: sedout/eqp.html:35
msgid "<a href='docs.html'>Documentation</a>"
msgstr ""

#. type: Content of: <html><body><div><div><ul><li><li><li>
#: sedout/eqp.html:36
msgid "<a href='download.html'>Download</a>"
msgstr ""

#. type: Content of: <html><body><div><div><ul><li><li><li><li>
#: sedout/eqp.html:37
msgid "<a href='support.html'>Support</a>"
msgstr ""

#. type: Content of: <html><body><div><div><ul><li><li><li><li><li>
#: sedout/eqp.html:38
msgid "<a href='prosupport.html'>Purchase</a>"
msgstr ""

#. type: Content of: <html><body><div><div><form><select>
#: sedout/eqp.html:43
msgid "<select name=\"s\" id=\"searchtype\">"
msgstr ""

#. type: Content of: <html><body><div><div><form><select><option>
#: sedout/eqp.html:44
msgid "Search Documentation"
msgstr ""

#. type: Content of: <html><body><div><div><form><select><option>
#: sedout/eqp.html:45
msgid "Search Changelog"
msgstr ""

#. type: Content of: <html><body><div><div><form>
#: sedout/eqp.html:46
msgid ""
"</select> <input type=\"text\" name=\"q\" id=\"searchbox\" value=\"\"/> "
"<input type=\"submit\" value=\"Go\"/>"
msgstr ""

#. type: Content of: <html><body><script>
#: sedout/eqp.html:53
msgid ""
"function toggle_div(nm) { var w = document.getElementById(nm); if( "
"w.style.display==\"block\" ){ w.style.display = \"none\"; }else{ "
"w.style.display = \"block\"; } } function toggle_search() { var w = "
"document.getElementById(\"searchmenu\"); if( w.style.display==\"block\" ){ "
"w.style.display = \"none\"; } else { w.style.display = \"block\"; "
"setTimeout(function(){ document.getElementById(\"searchbox\").focus()  }, "
"30); } } function "
"div_off(nm){document.getElementById(nm).style.display=\"none\";} "
"window.onbeforeunload = function(e){div_off(\"submenu\");} /* Disable the "
"Search feature if we are not operating from CGI, since */ /* Search is "
"accomplished using CGI and will not work without it. */ if( !location.origin "
"|| !location.origin.match || !location.origin.match(/http/) ){ "
"document.getElementById(\"search_menubutton\").style.display = \"none\"; } "
"/* Used by the Hide/Show button beside syntax diagrams, to toggle the */ "
"function hideorshow(btn,obj){ var x = document.getElementById(obj); var b = "
"document.getElementById(btn); if( x.style.display!='none' ){ x.style.display "
"= 'none'; b.innerHTML='show'; }else{ x.style.display = ''; "
"b.innerHTML='hide'; } return false; } var antiRobot = 0; function "
"antiRobotGo(){ if( antiRobot!=3 ) return; antiRobot = 7; var j = "
"document.getElementById(\"mtimelink\"); if(j && "
"j.hasAttribute(\"data-href\")) j.href=j.getAttribute(\"data-href\"); } "
"function antiRobotDefense(){ document.body.onmousedown=function(){ antiRobot "
"|= 2; antiRobotGo(); document.body.onmousedown=null; } "
"document.body.onmousemove=function(){ antiRobot |= 2; antiRobotGo(); "
"document.body.onmousemove=null; } setTimeout(function(){ antiRobot |= 1; "
"antiRobotGo(); }, 100)  antiRobotGo(); } antiRobotDefense();"
msgstr ""

#. type: Content of: <html><body><div><div><div>
#: sedout/eqp.html:124
msgid ""
"<a onclick=\"toggle_toc()\"> <span class=\"fancy_toc_mark\" "
"id=\"toc_mk\">&#x25ba;</span> Table Of Contents </a>"
msgstr ""

#. type: Content of: <html><body><div><div><div><div><div>
#: sedout/eqp.html:128
msgid ""
"<a href=\"#the_explain_query_plan_command\">1. The EXPLAIN QUERY PLAN "
"Command</a>"
msgstr ""

#. type: Content of: <html><body><div><div><div><div><div>
#: sedout/eqp.html:129
msgid "<a href=\"#table_and_index_scans\">1.1. Table and Index Scans</a>"
msgstr ""

#. type: Content of: <html><body><div><div><div><div><div>
#: sedout/eqp.html:130
msgid "<a href=\"#temporary_sorting_b_trees\">1.2. Temporary Sorting B-Trees</a>"
msgstr ""

#. type: Content of: <html><body><div><div><div><div><div>
#: sedout/eqp.html:131
msgid "<a href=\"#subqueries\">1.3. Subqueries</a>"
msgstr ""

#. type: Content of: <html><body><div><div><div><div><div>
#: sedout/eqp.html:132
msgid "<a href=\"#compound_queries\">1.4. Compound Queries</a>"
msgstr ""

#. type: Content of: <html><body><div><div><script>
#: sedout/eqp.html:136
msgid ""
"function toggle_toc(){ var sub = document.getElementById(\"toc_sub\")  var "
"mk = document.getElementById(\"toc_mk\")  if( sub.style.display!=\"block\" "
"){ sub.style.display = \"block\"; mk.innerHTML = \"&#x25bc;\"; } else { "
"sub.style.display = \"none\"; mk.innerHTML = \"&#x25ba;\"; } }"
msgstr ""

#. type: Content of: <html><body><div><h1>
#: sedout/eqp.html:155
msgid "<span>1. </span>The EXPLAIN QUERY PLAN Command"
msgstr ""

#. type: Content of: <html><body><div><p>
#: sedout/eqp.html:158
msgid ""
"<b>Warning:</b> The data returned by the EXPLAIN QUERY PLAN command is "
"intended for interactive debugging only.  The output format may change "
"between SQLite releases. Applications should not depend on the output format "
"of the EXPLAIN QUERY PLAN command."
msgstr ""

#. type: Content of: <html><body><div><p>
#: sedout/eqp.html:164
msgid ""
"<b>Alert:</b> As warned above, the EXPLAIN QUERY PLAN output format did "
"change substantially with the version 3.24.0 release (2018-06-04).  "
"Additional minor changes occurred in version 3.36.0 (2021-06-18).  Further "
"changes are possible in subsequent releases."
msgstr ""

#. type: Content of: <html><body><div><p>
#: sedout/eqp.html:170
msgid ""
"The <a href=\"lang_explain.html\">EXPLAIN QUERY PLAN</a> SQL command is used "
"to obtain a high-level description of the strategy or plan that SQLite uses "
"to implement a specific SQL query.  Most significantly, EXPLAIN QUERY PLAN "
"reports on the way in which the query uses database indices. This document "
"is a guide to understanding and interpreting the EXPLAIN QUERY PLAN output.  "
"Background information is available separately:"
msgstr ""

#. type: Content of: <html><body><div><p><ul><li>
#: sedout/eqp.html:178
msgid "A primer on <a href=\"howitworks.html\">How SQLite Works</a>."
msgstr ""

#. type: Content of: <html><body><div><p><ul><li>
#: sedout/eqp.html:179
msgid "Notes on the <a href=\"optoverview.html\">query optimizer</a>."
msgstr ""

#. type: Content of: <html><body><div><p><ul><li>
#: sedout/eqp.html:180
msgid "How <a href=\"queryplanner.html\">indexing</a> works."
msgstr ""

#. type: Content of: <html><body><div><p><ul><li>
#: sedout/eqp.html:181
msgid "The <a href=\"queryplanner-ng.html\">next generation query planner</a>."
msgstr ""

#. type: Content of: <html><body><div><p><p>
#: sedout/eqp.html:184
msgid ""
"A query plan is represented as a tree.  In raw form, as returned by <a "
"href=\"c3ref/step.html\">sqlite3_step()</a>, each node of the tree consists "
"of four fields: An integer node id, an integer parent id, an auxiliary "
"integer field that is not currently used, and a description of the node.  "
"The entire tree is therefore a table with four columns and zero or more "
"rows.  The <a href=\"cli.html\">command-line shell</a> will usually "
"intercept this table and renders it as an ASCII-art graph for more "
"convenient viewing.  To disable the shells automatic graph rendering and to "
"display EXPLAIN QUERY PLAN output in its tabular format, run the command "
"\".explain off\" to set the \"EXPLAIN formatting mode\" to off.  To restore "
"automatic graph rendering, run \".explain auto\".  You can see the current "
"\"EXPLAIN formatting mode\" setting using the \".show\" command."
msgstr ""

#. type: Content of: <html><body><div><p><p>
#: sedout/eqp.html:199
msgid ""
"One can also set the <a href=\"cli.html\">CLI</a> into automatic EXPLAIN "
"QUERY PLAN mode using the \".eqp on\" command:"
msgstr ""

#. type: Content of: <html><body><div><p><div><pre>
#: sedout/eqp.html:202
#, no-wrap
msgid "sqlite&gt; .eqp on\n"
msgstr ""

#. type: Content of: <html><body><div><p><p>
#: sedout/eqp.html:205
msgid ""
"In automatic EXPLAIN QUERY PLAN mode, the shell automatically runs a "
"separate EXPLAIN QUERY PLAN query for each statement you enter and displays "
"the result before actually running the query.  Use the \".eqp off\" command "
"to turn automatic EXPLAIN QUERY PLAN mode back off."
msgstr ""

#. type: Content of: <html><body><div><p><p>
#: sedout/eqp.html:210
msgid ""
"EXPLAIN QUERY PLAN is most useful on a SELECT statement, but may also appear "
"with other statements that read data from database tables (e.g. UPDATE, "
"DELETE, INSERT INTO ... SELECT)."
msgstr ""

#. type: Content of: <html><body><div><p><h2>
#: sedout/eqp.html:214
msgid "<span>1.1. </span>Table and Index Scans"
msgstr ""

#. type: Content of: <html><body><div><p><p>
#: sedout/eqp.html:217
msgid ""
"When processing a SELECT (or other) statement, SQLite may retrieve data from "
"database tables in a variety of ways. It may scan through all the records in "
"a table (a full-table scan), scan a contiguous subset of the records in a "
"table based on the rowid index, scan a contiguous subset of the entries in a "
"database <a href=\"lang_createtable.html\">index</a>, or use a combination "
"of the above strategies in a single scan. The various ways in which SQLite "
"may retrieve data from a table or index are described in detail <a "
"href=\"queryplanner.html#searching\">here</a>."
msgstr ""

#. type: Content of: <html><body><div><p><p>
#: sedout/eqp.html:226
msgid ""
"For each table read by the query, the output of EXPLAIN QUERY PLAN includes "
"a record for which the value in the \"detail\" column begins with either "
"\"SCAN\" or \"SEARCH\". \"SCAN\" is used for a full-table scan, including "
"cases where SQLite iterates through all records in a table in an order "
"defined by an index. \"SEARCH\" indicates that only a subset of the table "
"rows are visited. Each SCAN or SEARCH record includes the following "
"information:"
msgstr ""

#. type: Content of: <html><body><div><p><p><ul><li>
#: sedout/eqp.html:235
msgid "The name of the table, view, or subquery that data is read from."
msgstr ""

#. type: Content of: <html><body><div><p><p><ul><li>
#: sedout/eqp.html:236
msgid ""
"Whether or not an index or <a href=\"optoverview.html#autoindex\">automatic "
"index</a> is used."
msgstr ""

#. type: Content of: <html><body><div><p><p><ul><li>
#: sedout/eqp.html:237
msgid ""
"Whether or not the <a href=\"queryplanner.html#covidx\">covering index</a> "
"optimization applies."
msgstr ""

#. type: Content of: <html><body><div><p><p><ul><li>
#: sedout/eqp.html:238
msgid "Which terms of the WHERE clause are used for indexing."
msgstr ""

#. type: Content of: <html><body><div><p><p><p>
#: sedout/eqp.html:242
msgid ""
"For example, the following EXPLAIN QUERY PLAN command operates on a SELECT "
"statement that is implemented by performing a full-table scan on table t1:"
msgstr ""

#. type: Content of: <html><body><div><p><p><div><pre>
#: sedout/eqp.html:244
#, no-wrap
msgid ""
"sqlite&gt; EXPLAIN QUERY PLAN SELECT a, b FROM t1 WHERE a=1;\n"
"QUERY PLAN\n"
"`--SCAN t1\n"
msgstr ""

#. type: Content of: <html><body><div><p><p><p>
#: sedout/eqp.html:250
msgid ""
"The example above shows SQLite picking full-table scan will visit all rows "
"in the table.  If the query were able to use an index, then the SCAN/SEARCH "
"record would include the name of the index and, for a SEARCH record, an "
"indication of how the subset of rows visited is identified. For example:"
msgstr ""

#. type: Content of: <html><body><div><p><p><div><pre>
#: sedout/eqp.html:256
#, no-wrap
msgid ""
"sqlite&gt; CREATE INDEX i1 ON t1(a);\n"
"sqlite&gt; EXPLAIN QUERY PLAN SELECT a, b FROM t1 WHERE a=1;\n"
"QUERY PLAN\n"
"`--SEARCH t1 USING INDEX i1 (a=?)\n"
msgstr ""

#. type: Content of: <html><body><div><p><p><p>
#: sedout/eqp.html:263
msgid ""
"The previous example, SQLite uses index \"i1\" to optimize a WHERE clause "
"term of the form (a=?) - in this case \"a=1\".  The previous example could "
"not use a <a href=\"queryplanner.html#covidx\">covering index</a>, but the "
"following example can, and that fact is reflected in the output:"
msgstr ""

#. type: Content of: <html><body><div><p><p><div><pre>
#: sedout/eqp.html:267
#, no-wrap
msgid ""
"sqlite&gt; CREATE INDEX i2 ON t1(a, b);\n"
"sqlite&gt; EXPLAIN QUERY PLAN SELECT a, b FROM t1 WHERE a=1; \n"
"QUERY PLAN\n"
"`--SEARCH t1 USING COVERING INDEX i2 (a=?)\n"
msgstr ""

#. type: Content of: <html><body><div><p><p><p>
#: sedout/eqp.html:274
msgid ""
"All joins in SQLite are <a href=\"optoverview.html#table_order\">implemented "
"using nested scans</a>. When a SELECT query that features a join is analyzed "
"using EXPLAIN QUERY PLAN, one SCAN or SEARCH record is output for each "
"nested loop. For example:"
msgstr ""

#. type: Content of: <html><body><div><p><p><div><pre>
#: sedout/eqp.html:277
#, no-wrap
msgid ""
"sqlite&gt; EXPLAIN QUERY PLAN SELECT t1.*, t2.* FROM t1, t2 WHERE t1.a=1 AND "
"t1.b>2;\n"
"QUERY PLAN\n"
"|--SEARCH t1 USING INDEX i2 (a=? AND b>?)\n"
"`--SCAN t2\n"
msgstr ""

#. type: Content of: <html><body><div><p><p><p>
#: sedout/eqp.html:284
msgid ""
"The order of the entries indicates the nesting order. In this case, the scan "
"of table t1 using index i2 is the outer loop (since it appears first)  and "
"the full-table scan of table t2 is the inner loop (since it appears last).  "
"In the following example, the positions of t1 and t2 in the FROM clause of "
"the SELECT are reversed. The query strategy remains the same.  The output "
"from EXPLAIN QUERY PLAN shows how the query is actually evaluated, not how "
"it is specified in the SQL statement."
msgstr ""

#. type: Content of: <html><body><div><p><p><div><pre>
#: sedout/eqp.html:293
#, no-wrap
msgid ""
"sqlite&gt; EXPLAIN QUERY PLAN SELECT t1.*, t2.* FROM t2, t1 WHERE t1.a=1 AND "
"t1.b>2;\n"
"QUERY PLAN\n"
"|--SEARCH t1 USING INDEX i2 (a=? AND b>?)\n"
"`--SCAN t2\n"
msgstr ""

#. type: Content of: <html><body><div><p><p>
#: sedout/eqp.html:299
msgid "<a name=\"or-opt\"></a>"
msgstr ""

#. type: Content of: <html><body><div><p><p><p>
#: sedout/eqp.html:302
msgid ""
"If the WHERE clause of a query contains an OR expression, then SQLite might "
"use the <a href=\"queryplanner.html#or_in_where\">\"OR by union\"</a> "
"strategy (also known as the <a href=\"optoverview.html#or_opt\">OR "
"optimization</a>). In this case there will be single top-level record for "
"the search, with two sub-records, one for each index:"
msgstr ""

#. type: Content of: <html><body><div><p><p><div><pre>
#: sedout/eqp.html:306
#, no-wrap
msgid ""
"sqlite&gt; CREATE INDEX i3 ON t1(b);\n"
"sqlite&gt; EXPLAIN QUERY PLAN SELECT * FROM t1 WHERE a=1 OR b=2;\n"
"QUERY PLAN\n"
"`--MULTI-INDEX OR\n"
"   |--SEARCH t1 USING COVERING INDEX i2 (a=?)\n"
"   `--SEARCH t1 USING INDEX i3 (b=?)\n"
msgstr ""

#. type: Content of: <html><body><div><p><p><h2>
#: sedout/eqp.html:314
msgid "<span>1.2. </span>Temporary Sorting B-Trees"
msgstr ""

#. type: Content of: <html><body><div><p><p><p>
#: sedout/eqp.html:317
msgid ""
"If a SELECT query contains an ORDER BY, GROUP BY or DISTINCT clause, SQLite "
"may need to use a temporary b-tree structure to sort the output rows. Or, it "
"might <a href=\"queryplanner.html#sorting\">use an index</a>. Using an index "
"is almost always much more efficient than performing a sort.  If a temporary "
"b-tree is required, a record is added to the EXPLAIN QUERY PLAN output with "
"the \"detail\" field set to a string value of the form \"USE TEMP B-TREE FOR "
"xxx\", where xxx is one of \"ORDER BY\", \"GROUP BY\" or \"DISTINCT\". For "
"example:"
msgstr ""

#. type: Content of: <html><body><div><p><p><div><pre>
#: sedout/eqp.html:326
#, no-wrap
msgid ""
"sqlite&gt; EXPLAIN QUERY PLAN SELECT c, d FROM t2 ORDER BY c;\n"
"QUERY PLAN\n"
"|--SCAN t2\n"
"`--USE TEMP B-TREE FOR ORDER BY\n"
msgstr ""

#. type: Content of: <html><body><div><p><p><p>
#: sedout/eqp.html:333
msgid ""
"In this case using the temporary b-tree can be avoided by creating an index "
"on t2(c), as follows:"
msgstr ""

#. type: Content of: <html><body><div><p><p><div><pre>
#: sedout/eqp.html:336
#, no-wrap
msgid ""
"sqlite&gt; CREATE INDEX i4 ON t2(c);\n"
"sqlite&gt; EXPLAIN QUERY PLAN SELECT c, d FROM t2 ORDER BY c; \n"
"QUERY PLAN\n"
"`--SCAN t2 USING INDEX i4\n"
msgstr ""

#. type: Content of: <html><body><div><p><p><h2>
#: sedout/eqp.html:342
msgid "<span>1.3. </span>Subqueries"
msgstr ""

#. type: Content of: <html><body><div><p><p><p>
#: sedout/eqp.html:345
msgid ""
"In all the examples above, there has only been a single SELECT statement.  "
"If a query contains sub-selects, those are shown as being children of the "
"outer SELECT.  For example:"
msgstr ""

#. type: Content of: <html><body><div><p><p><div><pre>
#: sedout/eqp.html:349
#, no-wrap
msgid ""
"sqlite&gt; EXPLAIN QUERY PLAN SELECT (SELECT b FROM t1 WHERE a=0), (SELECT a "
"FROM t1 WHERE b=t2.c) FROM t2;\n"
"|--SCAN TABLE t2 USING COVERING INDEX i4\n"
"|--SCALAR SUBQUERY\n"
"|  `--SEARCH t1 USING COVERING INDEX i2 (a=?)\n"
"`--CORRELATED SCALAR SUBQUERY\n"
"   `--SEARCH t1 USING INDEX i3 (b=?)\n"
msgstr ""

#. type: Content of: <html><body><div><p><p><p>
#: sedout/eqp.html:358
msgid ""
"The example above contains two \"SCALAR\" subqueries.  The subqueries are "
"SCALAR in the sense that they return a single value - a one-row, one-column "
"table.  If the actual query returns more than that, then only the first "
"column of the first row is used."
msgstr ""

#. type: Content of: <html><body><div><p><p><p>
#: sedout/eqp.html:363
msgid ""
"The first subquery above is constant with respect to the outer query.  The "
"value for the first subquery can be computed once and then reused for each "
"row of the outer SELECT.  The second subquery, however, is \"CORRELATED\".  "
"The value of the second subquery changes depending on values in the current "
"row of the outer query.  Hence, the second subquery must be run once for "
"each output row in the outer SELECT."
msgstr ""

#. type: Content of: <html><body><div><p><p><p>
#: sedout/eqp.html:371
msgid ""
"Unless the <a href=\"optoverview.html#flattening\">flattening "
"optimization</a> is applied, if a subquery appears in the FROM clause of a "
"SELECT statement, SQLite can either run the subquery and stores the results "
"in a temporary table, or it can run the subquery as a co-routine.  The "
"following query is an example of the latter.  The subquery is run by a "
"co-routine.  The outer query blocks whenever it needs another row of input "
"from the subquery.  Control switches to the co-routine which produces the "
"desired output row, then control switches back to the main routine which "
"continues processing."
msgstr ""

#. type: Content of: <html><body><div><p><p><div><pre>
#: sedout/eqp.html:380
#, no-wrap
msgid ""
"sqlite&gt; EXPLAIN QUERY PLAN SELECT count(*)\n"
"      &gt; FROM (SELECT max(b) AS x FROM t1 GROUP BY a) AS qqq\n"
"      &gt; GROUP BY x;\n"
"QUERY PLAN\n"
"|--CO-ROUTINE qqq\n"
"|  `--SCAN t1 USING COVERING INDEX i2\n"
"|--SCAN qqqq\n"
"`--USE TEMP B-TREE FOR GROUP BY\n"
msgstr ""

#. type: Content of: <html><body><div><p><p><p>
#: sedout/eqp.html:392
msgid ""
"If the <a href=\"optoverview.html#flattening\">flattening optimization</a> "
"is used on a subquery in the FROM clause of a SELECT statement, that "
"effectively merges the subquery into the outer query.  The output of EXPLAIN "
"QUERY PLAN reflects this, as in the following example:"
msgstr ""

#. type: Content of: <html><body><div><p><p><div><pre>
#: sedout/eqp.html:397
#, no-wrap
msgid ""
"sqlite&gt; EXPLAIN QUERY PLAN SELECT * FROM (SELECT * FROM t2 WHERE c=1) AS "
"t3, t1;\n"
"QUERY PLAN\n"
"|--SEARCH t2 USING INDEX i4 (c=?)\n"
"`--SCAN t1\n"
msgstr ""

#. type: Content of: <html><body><div><p><p><p>
#: sedout/eqp.html:405
msgid ""
"If the content of a subquery might need to be visited more than once, then "
"the use of a co-routine is undesirable, as the co-routine would then have to "
"compute the data more than once.  And if the subquery cannot be flattened, "
"that means the subquery must be manifested into a transient table."
msgstr ""

#. type: Content of: <html><body><div><p><p><div><pre>
#: sedout/eqp.html:410
#, no-wrap
msgid ""
"sqlite&gt; SELECT * FROM\n"
"      &gt;   (SELECT * FROM t1 WHERE a=1 ORDER BY b LIMIT 2) AS x,\n"
"      &gt;   (SELECT * FROM t2 WHERE c=1 ORDER BY d LIMIT 2) AS y;\n"
"QUERY PLAN\n"
"|--MATERIALIZE x\n"
"|  `--SEARCH t1 USING COVERING INDEX i2 (a=?)\n"
"|--MATERIALIZE y\n"
"|  |--SEARCH t2 USING INDEX i4 (c=?)\n"
"|  `--USE TEMP B-TREE FOR ORDER BY\n"
"|--SCAN x\n"
"`--SCAN y\n"
msgstr ""

#. type: Content of: <html><body><div><p><p><h2>
#: sedout/eqp.html:423
msgid "<span>1.4. </span>Compound Queries"
msgstr ""

#. type: Content of: <html><body><div><p><p><p>
#: sedout/eqp.html:426
msgid ""
"Each component query of a <a href=\"lang_select.html#compound\">compound "
"query</a> (UNION, UNION ALL, EXCEPT or INTERSECT) is assigned computed "
"separately and is given its own line in the EXPLAIN QUERY PLAN output."
msgstr ""

#. type: Content of: <html><body><div><p><p><div><pre>
#: sedout/eqp.html:430
#, no-wrap
msgid ""
"sqlite&gt; EXPLAIN QUERY PLAN SELECT a FROM t1 UNION SELECT c FROM t2;\n"
"QUERY PLAN\n"
"`--COMPOUND QUERY\n"
"   |--LEFT-MOST SUBQUERY\n"
"   |  `--SCAN t1 USING COVERING INDEX i1\n"
"   `--UNION USING TEMP B-TREE\n"
"      `--SCAN t2 USING COVERING INDEX i4\n"
msgstr ""

#. type: Content of: <html><body><div><p><p><p>
#: sedout/eqp.html:440
msgid ""
"The \"USING TEMP B-TREE\" clause in the above output indicates that a "
"temporary b-tree structure is used to implement the UNION of the results of "
"the two sub-selects.  An alternative method of computing a compound is to "
"run each subquery as a co-routine, arrange for their outputs to appear in "
"sorted order, and merge the results together.  When the query planner "
"chooses this latter approach, the EXPLAIN QUERY PLAN output looks like this:"
msgstr ""

#. type: Content of: <html><body><div><p><p><div><pre>
#: sedout/eqp.html:448
#, no-wrap
msgid ""
"sqlite&gt; EXPLAIN QUERY PLAN SELECT a FROM t1 EXCEPT SELECT d FROM t2 ORDER "
"BY 1;\n"
"QUERY PLAN\n"
"`--MERGE (EXCEPT)\n"
"   |--LEFT\n"
"   |  `--SCAN t1 USING COVERING INDEX i1\n"
"   `--RIGHT\n"
"      |--SCAN t2\n"
"      `--USE TEMP B-TREE FOR ORDER BY\n"
msgstr ""

#. type: Content of: <html><body><div><p><p><p>
#: sedout/eqp.html:457
msgid ""
"<small><i>This page last modified on <a "
"href=\"https://sqlite.org/docsrc/honeypot\" id=\"mtimelink\" "
"data-href=\"https://sqlite.org/docsrc/finfo/pages/eqp.in?m=719c38ad7e\">2022-01-08 "
"05:02:57</a> UTC </i></small>"
msgstr ""
